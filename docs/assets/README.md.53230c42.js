import{_ as n,c as s,o as a,a as t}from"./app.1ef1804f.js";const g='{"title":"Vitepress SSR web-site with @gun-vue components","description":"","frontmatter":{},"headers":[],"relativePath":"README.md"}',p={},o=t(`<h1 id="vitepress-ssr-web-site-with-gun-vue-components" tabindex="-1">Vitepress SSR web-site with @gun-vue components <a class="header-anchor" href="#vitepress-ssr-web-site-with-gun-vue-components" aria-hidden="true">#</a></h1><p>Demontration of embedding the components into a server generated web site based on vitepress. It&#39;s a minimal demo, but vitepress is quite powerful to create some really big projects.</p><p><img src="https://raw.githubusercontent.com/davay42/gun-vue/master/app/public/gun-vue-logo.svg" alt=""></p><p>To build a site with Vitepress now you&#39;ll have to use out custom component loader in order to use <code>@gun-vue/components</code> in SSR node environment.</p><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span> shallowRef<span class="token punctuation">,</span> onMounted <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">component</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&quot;FeedBlock&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// the name of a GunVue component to load</span>
    <span class="token literal-property property">pr</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> Object<span class="token punctuation">,</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// pass in props with :pr=&quot;{foo:bar}&quot; attribute</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> comp <span class="token operator">=</span> <span class="token function">shallowRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;@gun-vue/components&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">module</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      comp<span class="token punctuation">.</span>value <span class="token operator">=</span> module<span class="token operator">?.</span><span class="token punctuation">[</span>props<span class="token punctuation">.</span>component<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Component</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>comp<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:is</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>comp<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-bind</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pr<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Component</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>Here&#39;s the minimum configuration for setting a global component with <code>vitepress</code></p><div class="language-js"><pre><code><span class="token keyword">import</span> DefaultTheme <span class="token keyword">from</span> <span class="token string">&quot;vitepress/theme&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token string">&quot;@gun-vue/components/dist/style.css&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> GunVue <span class="token keyword">from</span> <span class="token string">&quot;./components/GunVue.vue&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>DefaultTheme<span class="token punctuation">,</span>
  <span class="token function">enhanceApp</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> app <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&quot;GunVue&quot;</span><span class="token punctuation">,</span> GunVue<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>And then you can load a component in your <code>.md</code> files</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>GunVue</span>
  <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UserIcon<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">:pr</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ pub:<span class="token punctuation">&#39;</span>XnpLVDYZWdl1NNgo6BlD6e3-n3Fzi-ZzVrzbIgYCYHo.9-hHUHaWNaAE6tMp800MMzNtDLtjicS53915IrBu4uc<span class="token punctuation">&#39;</span> }<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">/&gt;</span></span>
</code></pre></div><p><a href="https://learnvue.co/2021/01/write-beautiful-documentation-quickly-with-vitepress/#built-in-elements-in-vitepress" target="_blank" rel="noopener noreferrer">https://learnvue.co/2021/01/write-beautiful-documentation-quickly-with-vitepress/#built-in-elements-in-vitepress</a></p>`,10),e=[o];function c(u,l,i,r,k,d){return a(),s("div",null,e)}var v=n(p,[["render",c]]);export{g as __pageData,v as default};
