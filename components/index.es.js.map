{"version":3,"file":"index.es.js","sources":["../../../composables/src/file/useFile.js","../../../composables/src/file/useMd.js","../../../composables/src/file/useZip.js","../../../composables/src/posts/usePost.js","../../../composables/src/posts/usePosts.js","../../../composables/src/posts/useTags.js","../../../composables/src/posts/useReaction.js","../../../composables/src/posts/useReactions.js","../../../composables/src/user/useMates.js","../../../composables/src/ui/useMouse.js","../../../composables/src/ui/useBackground.js","../../../composables/src/space/useSpace.js","../../../composables/src/chat/useChat.js","../../../composables/src/chat/usePrivate.js","../../../composables/src/room/useGuests.js","../../../composables/src/log/useLog.js","../../../composables/src/dict/langs.js"],"sourcesContent":["/**\n * File handling functions\n * @module useFile\n * */\n\nimport { reactive } from \"vue\";\n\n/**\n * A method to download any text as a file\n * @param {String} text - the text to download\n * @param {String} fileType - the file type like \"application/json\"\n * @param {String} fileName - the full file name like \"myKey.json\"\n */\n\nexport function downloadFile(text, fileType, fileName, isBlob = true) {\n  const a = document.createElement(\"a\");\n  a.download = fileName;\n\n  if (isBlob) {\n    a.href = URL.createObjectURL(new Blob([text], { type: fileType }));\n    setTimeout(function () {\n      URL.revokeObjectURL(a.href);\n    }, 1500);\n  } else {\n    a.href = `data:${fileType};,${text}`;\n  }\n  a.dataset.downloadurl = [fileType, a.download, a.href].join(\":\");\n  a.style.display = \"none\";\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n}\n\n/**\n * Upload and parse JSON keypair\n * @param {Event} event - `$event` from the `@change` handler\n * @param {Function} callback - a function to handle the loaded file from the reader\n */\n\nexport function uploadText(event, callback = (r) => console.log(r)) {\n  let file = event.target.files[0];\n  const maxBytes = 20000000;\n  if (file.size > maxBytes) {\n    console.error(\"File is bigger than \" + niceBytes(maxBytes)) + \" limit\";\n    return;\n  }\n  let reader = new FileReader();\n  reader.readAsText(file);\n  reader.onload = () => {\n    callback(reader.result);\n  };\n}\n\n//// https://github.com/itsabdessalam/encodeit/blob/develop/src/components/FileUploader.vue\n// to be upgraded with this code https://github.com/powerbot15/image-compressor/blob/master/image-compressor.js\n// https://github.com/dhhb/vue-base64-file-upload\n// https://zocada.com/compress-resize-images-javascript-browser/\n\n/**\n * @typedef {Object} PictureUploadOptions\n * @property {Boolean} preserveRatio - should we preserve the original picture aspect ratio? Default: `false`\n * @property {Number} picSize - width of the rendered picture\n * @property {Number} maxSize - maximum size of an uploaded picture\n */\n\n/**\n * @typedef {Object} PictureUploadData\n * @property {reactive} state - a reactive object with the state of the upload\n * @property {Function} handleUpload - handler function to use with `@change=\"handleUpload\"` on an `<input type=\"file\">` element\n */\n\n/**\n * Process an uploaded picture by rendering in into a canvas with given size. Returns a base64 encoded image to be stored and displayed as `img.src`\n * @param {PictureUploadOptions} Options - uploader options\n * @returns {PictureUploadData}\n * @example\n * const src = ref(null)\n *\n * const {state, handleUpload} = usePictureUpload({\n *  preserveRatio: true,\n * })\n *\n * watch(()=>state.output, file => src.value = file.content)\n */\n\nexport function usePictureUpload({\n  preserveRatio = false,\n  picSize = 100,\n  maxSize = 10240000,\n} = {}) {\n  const state = reactive({\n    errors: [],\n    status: null,\n    output: {},\n  });\n\n  function handleChange(event) {\n    const fileList = event.target.files;\n    reset();\n    if (!fileList.length) return;\n    state.status = \"loading\";\n    [...fileList].map((file) => processFile(file));\n  }\n\n  function processFile(file) {\n    fileToBase64(file).then((res) => {\n      state.output = {\n        name: sanitizeFileName(file.name),\n        content: res,\n        size: niceBytes(Math.round((res.length * 3) / 4)),\n      };\n      state.status = \"success\";\n    });\n    return null;\n  }\n\n  function fileToBase64(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader(),\n        readerBase64 = new FileReader(),\n        blob = file.slice(0, 4);\n      reader.readAsArrayBuffer(blob);\n      reader.onloadend = (e) => {\n        let isValidMimeType = checkMimetype(\n          getMimeTypeSignature(e.target.result)\n        );\n\n        if (bytesToMegabytes(file.size) > bytesToMegabytes(maxSize)) {\n          state.errors.push({\n            message: \"File size is too large!\",\n          });\n        }\n\n        if (isValidMimeType === false) {\n          state.errors.push({\n            message: \"File type is not supported!\",\n          });\n        }\n\n        if (state.errors.length > 0) {\n          flashErrors(state.errors);\n          reset();\n          return;\n        } else {\n          readerBase64.readAsDataURL(file);\n        }\n      };\n\n      readerBase64.onloadend = () => {\n        const img = new Image();\n        img.src = readerBase64.result;\n        img.onload = () => {\n          const naturalAspect = preserveRatio\n            ? img.naturalWidth / img.naturalHeight\n            : 1;\n\n          const canvas = document.createElement(\"canvas\");\n          canvas.width = picSize;\n          canvas.height = picSize / naturalAspect;\n\n          const context = canvas.getContext(\"2d\");\n          context.drawImage(img, 0, 0, canvas.width, canvas.height);\n          resolve(canvas.toDataURL());\n        };\n      };\n\n      reader.onerror = (error) => reject(error);\n      readerBase64.onerror = (error) => reject(error);\n    });\n  }\n\n  // Resets upload\n  function reset() {\n    state.status = \"\";\n    state.errors = [];\n    state.output = {};\n  }\n\n  // Converts from bytes to megabytes\n  function bytesToMegabytes(bytes) {\n    const value = bytes * Math.pow(10, -6);\n    return value;\n  }\n\n  // Checks mime type (more at https://mimesniff.spec.whatwg.org/#matching-an-image-type-pattern )\n  // More info https://stackoverflow.com/questions/18299806/how-to-check-file-mime-type-with-javascript-before-upload\n  function checkMimetype(signature) {\n    const signatures = [\n      \"89504E47\", // image/png\n      \"47494638\", // image/gif\n      \"FFD8FFDB\", // image/jpeg\n      \"FFD8FFE0\",\n      \"FFD8FFE1\",\n      \"FFD8FFE2\",\n      \"FFD8FFE3\",\n      \"FFD8FFE8\",\n      \"FFD8FFED\",\n      \"3C3F786D\", // svg/xml\n      \"3C737667\",\n    ];\n    return signatures.includes(signature);\n  }\n\n  function getMimeTypeSignature(data) {\n    const uint = new Uint8Array(data);\n    let bytes = [];\n    uint.forEach((byte) => {\n      bytes.push(byte.toString(16));\n    });\n    return bytes.join(\"\").toUpperCase();\n  }\n\n  // Sanitizes file's name\n  function sanitizeFileName(name) {\n    return (\n      name\n        .replace(/\\.[^/.]+$/, \"\")\n        // .replace(/[^a-z0-9]/gi, \"_\")\n        .toLowerCase()\n    );\n  }\n\n  function flashErrors(errors) {\n    if (errors.length === 2) {\n      console.error(\"File upload failed due to size and type!\");\n    } else {\n      console.error(errors[0].message + errors[0].type);\n    }\n  }\n\n  return {\n    state,\n    handleChange,\n  };\n}\n\nconst units = [\"bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n\nfunction niceBytes(x) {\n  let l = 0,\n    n = parseInt(x, 10) || 0;\n\n  while (n >= 1024 && ++l) {\n    n = n / 1024;\n  }\n  return n.toFixed(n < 10 && l > 0 ? 1 : 0) + \" \" + units[l];\n}\n\nexport function base64MimeType(encoded) {\n  var result = null;\n  if (typeof encoded !== \"string\") {\n    return result;\n  }\n  var mime = encoded.match(/data:([a-zA-Z0-9]+\\/[a-zA-Z0-9-.+]+).*,.*/);\n  if (mime && mime.length) {\n    result = mime[1];\n  }\n  return result;\n}\n\nexport function base64FileType(encoded) {\n  return encoded.match(/[^:]\\w+\\/[\\w-+\\d.]+(?=;|,)/)?.[0];\n}\n\nexport function base64Extension(encoded) {\n  return encoded.substring(\n    encoded.indexOf(\"/\") + 1,\n    encoded.indexOf(\";base64\")\n  );\n}\n\nvar signatures = {\n  JVBERi0: \"application/pdf\",\n  R0lGODdh: \"image/gif\",\n  R0lGODlh: \"image/gif\",\n  iVBORw0KGgo: \"image/png\",\n  \"/9j/\": \"image/jpg\",\n};\n\nexport function detectMimeType(b64) {\n  for (var s in signatures) {\n    if (b64.indexOf(s) === 0) {\n      return signatures[s];\n    }\n  }\n}\n\n// DRAG AND DROP\n//https://medium.com/devschacht/https-medium-com-kasimoka-joseph-zimmerman-drag-drop-file-uploader-vanilla-js-de850d74aa2f\n//https://github.com/quarklemotion/html5-file-selector/blob/master/src/Html5FileSelector.js\n","/**\n * Handle Markdown files\n * @module useMd\n * */\n\nimport yaml from \"yaml\";\nimport markdown from \"markdown-it\";\nimport externalLinks from \"markdown-it-external-links\";\n\n/**\n * @typedef {Object} Md\n * @property {Object} frontmatter\n * @property {object} content\n */\n\n/**\n *  Create markdown with frontmatter\n * @param {Md} md -  frontmatter,content\n * @returns Markdown text file ready to download\n */\n\nexport function createMd({ frontmatter = null, text = \"\" } = md) {\n  let front = \"\";\n  if (typeof frontmatter == \"object\") {\n    let yml = yaml.stringify(frontmatter);\n    front = `---\n${yml}---\n `;\n    return front + text;\n  }\n}\n\n/**\n * Parse text content of a markdown file into an object\n * @param {String} file - Text form of an uploaded file\n * @returns {Md} - An object with md frontmatter and content\n */\nexport function parseMd(file) {\n  const yamlBlockPattern = /^(?:\\-\\-\\-)(.*?)(?:\\-\\-\\-|\\.\\.\\.)(?:\\n*\\s*)(.*)/s;\n  const yml = yamlBlockPattern.exec(file.trim());\n  let frontmatter, content;\n\n  if (yml) {\n    frontmatter = yml[1];\n    content = yml?.[2];\n    try {\n      frontmatter = yaml.parse(frontmatter);\n    } catch {\n      frontmatter = {};\n    }\n    return { frontmatter, content };\n  } else {\n    return { frontmatter: {}, content: file.trim() };\n  }\n}\n\nexport function useMd() {\n  const md = new markdown({\n    linkify: true,\n    typographer: true,\n  });\n\n  md.use(externalLinks, {\n    externalTarget: \"_blank\",\n  });\n  return md;\n}\n","/**\n * Read and write zip files\n * @module useZip\n * @see https://github.com/Stuk/jszip\n * */\n\nimport JSZip from \"jszip\";\nimport { downloadFile, base64Extension, base64FileType } from \"./useFile\";\nimport { genUUID, SEA } from \"../gun/\";\nimport { createMd } from \"./useMd\";\nimport { loadFromHash } from \"../posts\";\n\n/**\n * @typedef useZip\n * @property {JSZip} zip - a JSZip instance\n * @property {Function} zipPost - treats a post with md contents and cover and icon images and adds them to the zip\n * @property {Function} addMd - add a MD file to the zip\n * @property {Function} addFile - add a binary file to the zip\n * @property {Function} downloadZip - initiate the download of the zip file\n */\n\n/**\n * Zip file creation toolbox\n * @returns {useZip}\n * @example\n * import {useZip} from '@gun-vue/composables'\n * const { zip, zipPost, addMd, addFile, downloadZip } = useZip()\n */\n\nexport function useZip() {\n  const zip = new JSZip();\n\n  /**\n   * Add a binary file to the zip\n   * @async\n   * @param {Object} options\n   * @returns {String} the resulting filename\n   * @example\n   *  if (post.cover) { // a base64 encoded picture\n   *   const fileName = await addFile({\n   *     title: \"cover\",\n   *     file: post.cover,\n   *     folder: post.title,\n   *   });\n   *   post.cover = fileName;\n   * }\n   */\n\n  async function addFile({ title, file, folder = \".\" } = {}) {\n    const fileType = base64FileType(file);\n    const extension = base64Extension(file);\n    const blob = await fetch(file).then((res) => res.blob());\n    const fileName = `${title}.${extension}`;\n    zip.file(`${folder}/${fileName}`, blob, fileType);\n    return fileName;\n  }\n\n  function addMd({ md, title } = {}) {\n    zip.file(`${title}/index.md`, createMd(md), \"text/markdown\");\n  }\n\n  /**\n   * Zips the whole post object\n   * @param {Object} post\n   * @async\n   */\n\n  async function zipPost(post = {}) {\n    let { icon, cover, text, title, statement } = post;\n    delete post?.text;\n    if (!title) {\n      title = statement ? statement.split(0, 12) : genUUID();\n    }\n\n    const files = [\"cover\", \"icon\"];\n\n    for (let type of files) {\n      let file = await loadFromHash(type, post[type]);\n      if (file) {\n        const fileName = await addFile({\n          title: type,\n          file,\n          folder: title,\n        });\n\n        post[type] = fileName;\n      }\n    }\n\n    text = await loadFromHash(\"text\", text);\n\n    addMd({\n      title,\n      md: {\n        frontmatter: post,\n        text,\n      },\n    });\n  }\n\n  async function downloadZip({ title = \"\", addDate = true } = {}) {\n    let now = new Date();\n    const offset = now.getTimezoneOffset();\n    now = new Date(now.getTime() - offset * 60 * 1000);\n    const date = now.toISOString().split(\"T\")[0];\n\n    const blob = await zip.generateAsync({\n      type: \"blob\",\n      comment: `Exported from ${title} at ${location} on ${date}`,\n      compression: \"DEFLATE\",\n      compressionOptions: {\n        level: 9,\n      },\n    });\n\n    const fileName = `${title}-${date}.zip`;\n\n    downloadFile(blob, \"application/zip\", fileName);\n    return true;\n  }\n\n  return { zip, zipPost, addMd, addFile, downloadZip };\n}\n","/**\n * Get and handle a particular post by it's tag and hash\n * @module Post\n */\n\nimport { computed, reactive, ref } from \"vue\";\nimport ms from \"ms\";\n\nimport { useGun, gun, useRoom, currentRoom, useUser } from \"..\";\nimport { useZip } from \"../file/\";\nimport { hashObj, hashText, safeHash } from \"../crypto\";\n\n/**\n * An interface to manage a post\n * @param {Object} options\n * @returns {Post}\n * @example\n * const post = usePost({ tag: 'tag', hash: postHash })\n */\n\nexport function usePost({ hash = \"\", loadMedia = true } = {}) {\n  const gun = useGun();\n\n  const post = reactive({});\n\n  gun\n    .get('posts')\n    .get(`#index`)\n    .get(hash)\n    .on(async (d, k) => {\n      try {\n        Object.assign(post, JSON.parse(d));\n      } catch (e) {\n        post.raw = d;\n      }\n      if (loadMedia) {\n        [\"icon\", \"cover\", \"text\"].forEach((file) => {\n          if (post[file]) {\n            gun\n              .get('posts')\n              .get(`#${file}`)\n              .get(post[file])\n              .on((data) => {\n                post[file] = data;\n              });\n          }\n        });\n      }\n\n    });\n\n  const downloading = ref(false);\n\n  async function download() {\n    downloading.value = true;\n    await downloadPost(post);\n    downloading.value = false;\n  }\n  return { post, download, downloading };\n}\n\n/**\n * @typedef {Object} Post\n * @property {Boolean} empty - whether the post has contents\n * @property {String} tag - the tag under which the post was published\n * @property {String} hash - the hash of the contents\n * @property {Object} data - the contents of the post\n * @property {Function} download - use this function to download the post as a Markdown file\n * @example\n * {\n *  \"empty\": false,\n *  \"tag\": \"ds\",\n *  \"hash\": \"C8trDBYNyvxVedHK4Q0IuUarc/k2/iiv8opPfoAU0xA=\",\n *  \"data\": {\n *    \"cover\": \"data:image/png;base64,..........\",\n *    \"icon\": \"data:image/png;base64,..........\",\n *    \"title\": \"OSS\",\n *    \"statement\": \"New live album by tsoop\",\n *    \"youtube\": \"K2MwpOd8vEI\",\n *    \"content\": \"It's mostly op-z + op-1 with my own Unity visuals based on [Chromatone](https://chromatone.center) system.\\n\\n### 2021\\nFirst played live at April 20th **2021**.\\n\\n### Into 2022\\nIt's an ongoing live album to be recorded throughout the **2022**.\"\n * },\n *  \"timestamp\": 1642590655747,\n *  \"lastUpdated\": \"1d\"\n * }\n */\n\n/**\n * Add a new post to a tag\n * @param {String} tag\n * @param {Object} post\n * @example\n * import { addPost } from '@gun-vue/composables'\n *\n * addPost('MyTag', {\n *  title: 'New post'\n * })\n */\n\nexport async function addPost(to, post) {\n  const { user } = useUser();\n  const { icon, cover, text } = post;\n  post.icon = await saveToHash(\"icon\", post.icon);\n  post.cover = await saveToHash(\"cover\", post.cover);\n  post.text = await saveToHash(\"text\", post.text);\n  const { hashed, hash } = await hashObj(post);\n  console.log(hash, post, to)\n  gun.get('posts').get(`#index`).get(`${hash}`).put(hashed);\n  gun\n    .user(currentRoom.pub)\n    .get(\"posts\")\n    .get(`${to}:${hash}@${user.pub}`)\n    .put(true, null, { opt: { cert: currentRoom.features?.posts } });\n\n}\n\n/**\n * Download the post as a zip file with MD contents and icon and cover pictures if present\n * @param {Post} post\n * @example\n * import { downloadPost, usePost } from '@gun-vue/composables'\n *\n * const {post} = usePost( postTag, postHash )\n *\n * downloadPost(post)\n */\n\nexport async function downloadPost(post) {\n  let { title } = post;\n\n  const { zipPost, addFile, downloadZip } = useZip();\n\n  let singleFile = false;\n\n  if (title && !post.raw) {\n    await zipPost({ ...post });\n  } else {\n    title = \"file\";\n    singleFile = true;\n    const hash = await hashText(post.raw);\n    await addFile({\n      title: safeHash(hash),\n      file: post.raw,\n    });\n  }\n\n  await downloadZip({ title });\n  return true;\n}\n\nexport async function loadFromHash(category, hash) {\n  if (\n    category &&\n    hash &&\n    typeof hash == \"string\" &&\n    hash.length == 44 &&\n    hash.slice(0, 5) != \"data:\"\n  ) {\n    return await gun.get('posts').get(`#${category}`).get(hash).then();\n  }\n  return hash;\n}\n\nasync function saveToHash(category, text) {\n  if (category && text) {\n    const hash = await hashText(text);\n    gun.get('posts').get(`#${category}`).get(`${hash}`).put(text);\n    return hash;\n  } else {\n    return text;\n  }\n}\n\n/**\n * Parse a post string from db\n * @param {String} data Stringified data from the hashed post\n * @returns {Object} Post object\n */\n\nexport async function parsePost(data) {\n  let post;\n  try {\n    post = JSON.parse(data);\n  } catch (e) {\n    post = { base64: data };\n  }\n  return post;\n}\n\n/**\n * Get and update the timestamp of an immutable post\n * @param {} - {tag, hash} \n * @returns {} - {timestamp, msTime, refresh}\n */\n\nexport function usePostTimestamp({ tag, hash } = {}) {\n  const timestamp = ref(0)\n\n  const msTime = computed(() => ms(Date.now() - timestamp.value || 1000))\n\n  gun\n    .get('posts')\n    .get(`#index`)\n    .get(hash)\n    .on(function (d, k, g) {\n      timestamp.value = g.put['>']\n    })\n\n  async function refresh() {\n    let data = await gun.get('posts').get(`#index`).get(hash).then();\n    gun.get('posts').get(`#index`).get(hash).put(data);\n  }\n  return { timestamp, msTime, refresh }\n}","/**\n * Get and handle a particular post by it's tag and hash\n * @module Feed\n */\n\nimport { computed, reactive, ref } from \"vue\";\n\nimport JSZip from \"jszip\";\n\nimport { detectMimeType, useZip, parseMd, currentRoom, useUser, isHash } from \"..\";\nimport { useGun, gun } from \"../gun\";\nimport { parsePost, addPost, usePost } from \".\";\n\n/**\n * @typedef usePosts\n * @property {ref} posts -  the reactive list of hashed data\n * @property {ref} timestamps - reactive timestamps list for all posts in a list\n * @property {computed} count - the number of posts in a feed\n * @property {Function} downloadPosts - Download all posts in a zip file\n * @property {Function} uploadPosts - upload a zip file with posts\n */\n\n/**\n * Use a list of immutable data from a #tag\n * @param {String} tag - A vue ref to watch - generated from props by `toRef(props,'tag')`\n * @param {Object} options - Options for the feed\n * @returns {usePosts}\n * @example\n * import { usePosts } from '@gun-vue/composables'\n *\n * const { posts, timestamps, count, uploadPosts, downloadPosts} = usePosts('MyTag')\n */\nexport function usePosts(tag) {\n  if (!tag) return\n  const gun = useGun();\n\n  const posts = reactive({});\n  const backlinks = reactive({});\n\n  gun\n    .user(currentRoom.pub)\n    .get(\"posts\")\n    .map()\n    .on(function (data, key) {\n      let index = key.indexOf(tag);\n      if (index == -1) return;\n      let author = key.slice(-87);\n      let from = key.slice(0, 44);\n      let to = key.slice(45, 89);\n      if (index == 0) {\n        posts[to] = posts[to] || {};\n        posts[to][author] = data;\n      } else {\n        backlinks[from] = backlinks[from] || {};\n        backlinks[from][author] = data;\n      }\n    });\n\n\n  const countPosts = computed(() => {\n    let count = 0;\n    for (let hash in posts) {\n      inner_loop: for (let author in posts[hash]) {\n        if (posts[hash][author]) {\n          count++;\n          break inner_loop;\n        }\n      }\n    }\n    return count;\n  });\n\n  const countBacklinks = computed(() => {\n    let count = 0;\n    for (let hash in backlinks) {\n      inner_loop: for (let author in backlinks[hash]) {\n        if (backlinks[hash][author]) {\n          count++;\n          break inner_loop;\n        }\n      }\n    }\n    return count;\n  });\n\n  const downloading = ref(false);\n\n  async function downloadPosts() {\n    downloading.value = true;\n    downloading.value = !(await downloadFeed(tag, posts));\n  }\n\n  function uploadPosts(ev) {\n    uploadFeed(tag, ev);\n  }\n\n  return {\n    posts,\n    backlinks,\n    countPosts,\n    countBacklinks,\n    downloadPosts,\n    downloading,\n    uploadPosts\n  };\n}\n\n\n\n\n\n/**\n * Export a list of posts as a zip file\n * @async\n * @param {String} tag - Name of the tag\n * @param {Object} posts - Posts to export\n * @example\n * import {downloadFeed} from '@gun-vue/components'\n *\n * downloadFeed('myTag',posts)\n */\n\nexport async function downloadFeed(tag, posts) {\n  if (!posts) return;\n\n  const { zip, zipPost, downloadZip } = useZip();\n  const fullPosts = {};\n  for (let hash in posts) {\n    fullPosts[hash] = usePost({ tag, hash }).post;\n    await zipPost({ ...fullPosts[hash] });\n  }\n\n  await downloadZip({ title: `#${tag}` });\n  return true;\n}\n\n/**\n * Upload zip files and add all the MD files from it to the tag\n * @param {String} tag - a tag to add the posts to\n * @param {FileList} files - File list from the input `@change` event\n * @example\n * import { uploadFeed } from '@gun-vue/composables'\n * @example @lang html\n * <input type=\"file\" @change=\"uploadFeed( 'myTag', $event.target.files )\" />\n */\nexport function uploadFeed(tag, files) {\n  [...files].forEach(async (file) => {\n    const zip = await JSZip.loadAsync(file);\n    if (zip.comment) {\n      console.info(\"Zip file comment: \" + zip.comment);\n    }\n    zip.forEach(async (path, entry) => {\n      if (path.endsWith(\"index.md\")) {\n        let title = path.slice(0, -9);\n        let md = await entry.async(\"string\");\n        let { frontmatter, content } = parseMd(md);\n        frontmatter = frontmatter || {};\n        frontmatter.title = frontmatter?.title || title;\n        if (frontmatter.icon) {\n          const icon = await zip\n            .file(`${title}/${frontmatter.icon}`)\n            .async(\"base64\");\n          const iconMime = detectMimeType(icon);\n          frontmatter.icon = `data:${iconMime};base64,${icon}`;\n        }\n        if (frontmatter.cover) {\n          const cover = await zip\n            ?.file(`${title}/${frontmatter.cover}`)\n            ?.async(\"base64\");\n          const coverMime = detectMimeType(cover);\n          frontmatter.cover = `data:${coverMime};base64,${cover}`;\n        }\n        let post = { ...frontmatter, content };\n        addPost(tag, post);\n      }\n    });\n  });\n}\n","/**\n * Get and handle a particular post by it's tag and hash\n * @module Feeds\n */\n\nimport { computed, reactive, ref } from \"vue\";\nimport slugify from \"slugify\";\nimport Fuse from \"fuse.js\";\nimport { useGun } from \"../gun\";\nimport { hashText } from \"../crypto\";\n\n/**\n * @typedef useTagList\n * @property {ref} search - a ref to bind to an input element\n * @property {computed} slug - a slugified search query - url safe verion to be used as a tag\n * @property {Tags} tags - the object to handle all the tags\n * @property {Function} addTag - add a slug tag to the list\n */\n\n/**\n * Toolkit to deal with the available tags\n * @returns {useTagList}\n */\nexport function useTagList() {\n  const gun = useGun();\n\n  const search = ref();\n  const slug = computed(() => slugify(search.value));\n\n  const tags = reactive({\n    list: {},\n    all: computed(() => {\n      const arr = [];\n      for (let t in tags.list) {\n        arr.push({\n          hash: t,\n          tag: tags.list[t],\n        });\n      }\n      return arr.sort((a, b) =>\n        a && b && a.tag.toLowerCase() < b.tag.toLowerCase() ? -1 : 1\n      );\n    }),\n    count: computed(() => tags.all.length),\n    fuse: computed(() => {\n      return new Fuse(tags.all, {\n        includeScore: true,\n        keys: [\"tag\"],\n      });\n    }),\n    results: computed(() => {\n      if (!search.value) return [];\n      let res = tags.fuse.search(slug.value);\n      return res;\n    }),\n    minScore: computed(() => {\n      let min = 100;\n      tags.results.forEach((res) => {\n        if (res.score < min) {\n          min = res.score;\n        }\n      });\n      return min;\n    }),\n  });\n\n  gun\n    .get(\"#tags\")\n    .map()\n    .on((d, k) => {\n      if (!d) return;\n      try {\n        data = JSON.parse(d); //ignore objects\n      } catch (e) {\n        tags.list[k] = d; // assumes tag is a plain string\n      }\n    });\n\n  async function addTag(tag = slug.value) {\n    if (!tag) return;\n    let safe = slugify(tag);\n    const hash = await hashText(safe);\n    gun.get(`#tags`).get(`${hash}`).put(safe);\n  }\n\n  return { search, slug, tags, addTag };\n}\n","/**\n * React to posts with emojis\n * @module Reaction\n */\n\n\nimport { useUser, currentRoom, getFirstEmoji, useGun } from '..';\nimport { ref, watchEffect } from 'vue'\n\nconst rootsTags = ['rooms']\n\n\nexport function useReaction({ tag, hash, back } = {}) {\n\n  const { user } = useUser();\n\n  const reaction = ref('👍')\n\n  const gun = useGun()\n\n  const roomDb = gun.user(currentRoom.pub)\n\n  watchEffect(() => {\n    if (rootsTags.includes(tag)) {\n      roomDb.get(tag).get(`${hash}@${user.pub}`).on(d => {\n        if (d && d !== true) {\n          reaction.value = d\n        }\n      })\n    } else {\n      roomDb.get('posts').get(`${tag}:${hash}@${user.pub}`).on(d => {\n        if (d && d !== true) {\n          reaction.value = d\n        }\n      })\n    }\n  })\n\n\n  function react(r) {\n    reactToPost({ tag, hash, back, reaction: getFirstEmoji(r ? r : reaction.value) })\n  }\n  return { reaction, react }\n}\n\n\nexport async function reactToPost({ tag, hash, back, reaction = true } = {}) {\n  const { user } = useUser();\n  const gun = useGun();\n  console.log(tag, hash, reaction)\n  if (tag == \"rooms\") {\n    let myPost = gun.user(currentRoom.pub).get(tag).get(`${hash}@${user.pub}`);\n    let current = await myPost.then();\n    myPost.put(!current ? reaction : null, null, {\n      opt: { cert: currentRoom.features?.[tag] },\n    });\n  } else {\n    let myLink = gun.user(currentRoom.pub).get(\"posts\");\n    if (!back) {\n      myLink = myLink.get(`${tag}:${hash}@${user.pub}`);\n    } else {\n      myLink = myLink.get(`${hash}:${tag}@${user.pub}`);\n    }\n\n    let current = await myLink.then();\n    myLink.put(!current ? reaction : null, null, {\n      opt: { cert: currentRoom.features?.posts },\n    });\n  }\n}\n\n","import { useGun, currentRoom, isEmoji, useUser, reactToPost } from '../';\nimport { reactive, ref, computed } from 'vue'\n\n\nexport function useReactions(authors) {\n  const reactions = {}\n  for (let pub in authors) {\n    let reaction = authors[pub]\n    if (reaction) {\n      reactions[reaction] = reactions[reaction] || []\n      reactions[reaction].push(pub)\n    }\n\n  }\n  return reactions\n}\n\nexport function countRating(authors) {\n  let count = 0\n  for (let author in authors) {\n    if (authors[author] && authors[author] != '🗑') {\n      count++\n    } else if (authors[author] == '🗑') {\n      count--\n    }\n  }\n  return count\n}\n\n\nexport function useUserPosts(pub) {\n  const gun = useGun()\n  const posts = reactive({})\n  gun.user(currentRoom.pub).get('posts').map().on((d, k) => {\n    let author = k.slice(90);\n    let from = k.substring(0, 44)\n    let to = k.substring(45, 89)\n    if (author == pub) {\n      if (d) {\n        posts[d] = posts[d] || {}\n        posts[d][to] = from\n      } else {\n        delete posts?.[d]?.[to]\n      }\n\n    }\n  })\n  return posts\n}","/**\n * Connections between accounts\n * @module useMates\n */\n\nimport { reactive, watch, ref, computed } from \"vue\";\nimport { useGun, user } from \"..\";\nimport GB from \"grapheme-breaker-mjs\";\n\n/**\n * @typedef {reactive} useMates\n */\n\n/**\n * Get a reactive list of the user's mates\n * @param {String} pub\n * @returns {useMates}\n */\n\nexport function useMates(pub) {\n  if (!pub) {\n    pub = user.pub;\n  }\n  const mates = reactive({});\n  const gun = useGun();\n  gun\n    .user(pub)\n    .get(\"mates\")\n    .map()\n    .once((text, matePub) => {\n      if (text) {\n        mates[matePub] = {\n          emoji: getFirstEmoji(text),\n          text,\n        };\n        gun\n          .user(matePub)\n          .get(\"mates\")\n          .get(pub)\n          .on((d) => {\n            if (d) {\n              mates[matePub].back = getFirstEmoji(d);\n            } else {\n              delete mates[matePub].back;\n            }\n          });\n      } else {\n        delete mates[matePub];\n      }\n    });\n  return mates;\n}\n\n/**\n * Break the string into graphemes and return the first one if it's an emoji\n * @param {String} text\n * @returns {String} Emoji\n */\n\nexport function getFirstEmoji(text, def = \"👋\") {\n  if (!text || typeof text != \"string\") return;\n  let em = GB.break(text)[0];\n  if (isEmoji(em)) {\n    return em;\n  } else {\n    return def;\n  }\n}\n\n/**\n * Check if the text has emojis\n * @param {String} text\n * @returns {Boolean}\n */\n\nexport function isEmoji(text) {\n  return /\\p{Extended_Pictographic}/u.test(text);\n}\n\n/**\n * @typedef {Object} useMate\n * @property {ref} emoji - change it in an input\n * @property {ref} isMate - reactive state of connection\n * @property {Function} toggleMate - toggle the link with current `emoji` ref\n */\n\n/**\n * Make mates with some account by current user\n * @param {String} pub\n * @returns {useMate}\n */\n\nexport function useMate(pub) {\n  const emoji = ref(\"👋\");\n  const isMate = ref(false);\n\n  const dbMate = user.db.get(\"mates\").get(pub);\n\n  dbMate.on((d) => {\n    isMate.value = getFirstEmoji(d);\n  });\n\n  function toggleMate() {\n    dbMate.put(isMate.value ? false : getFirstEmoji(emoji.value));\n  }\n  return { emoji, isMate, toggleMate };\n}\n","/**\n * Handle mouse movement inside an SVG\n * @module useMouse\n * */\n\nimport { useMousePressed, useMouseInElement } from \"@vueuse/core\";\nimport { ref, reactive, onMounted, onBeforeUnmount, watch } from \"vue\";\n\n/**\n * @typedef {Object} useMouse\n * @property {ref} area - an area to mount the mouse to\n * @property {Mouse} mouse - the reactive mouse parameters\n */\n\n/**\n * @typedef {reactive} Mouse\n * @property {Number} x - absolute X coordinate to place a marker to\n * @property {Number} y - absolute Y coordinate to place a marker to\n * @property {Number} normX - [0-1] relative X coordinate\n * @property {Number} normY - [0-1] relative Y coordinate\n * @property {Boolean} pressed - is mouse pressed?\n * @property {Boolean} inside - is mouse inside the area?\n */\n\n/**\n * Correct mouse position in an SVG space\n * @returns {useMouse}\n */\n\nexport function useSvgMouse(area = ref(null)) {\n\n  const { pressed } = useMousePressed();\n\n  const mouse = reactive({\n    x: 0,\n    y: 0,\n    normX: 0,\n    normY: 0,\n    pressed,\n    inside: false,\n  });\n\n  onMounted(() => {\n    document.addEventListener(\"mousemove\", getCursorPosition);\n    const { isOutside } = useMouseInElement(area);\n    watch(isOutside, (out) => {\n      mouse.inside = !out;\n    });\n  });\n\n  onBeforeUnmount(() => {\n    document.removeEventListener(\"mousemove\", getCursorPosition);\n  });\n\n  function getCursorPosition(event, rect = area.value) {\n    const svgElement = rect.closest(\"svg\");\n    if (!svgElement) return;\n    var svgPoint = svgElement.createSVGPoint();\n    svgPoint.x = event.clientX;\n    svgPoint.y = event.clientY;\n    let correct = svgPoint.matrixTransform(svgElement.getScreenCTM().inverse());\n    if (false) {\n      let bounds = rect.getBBox();\n      mouse.x =\n        correct.x < bounds.width\n          ? correct.x < 0\n            ? 0\n            : correct.x\n          : bounds.width;\n      mouse.y =\n        correct.y < bounds.height\n          ? correct.y < 0\n            ? 0\n            : correct.y\n          : bounds.height;\n      mouse.normY = mouse.y / bounds.height;\n      mouse.normX = mouse.x / bounds.width;\n    } else {\n      mouse.x = correct.x;\n      mouse.y = correct.y;\n    }\n  }\n\n  return {\n    area,\n    mouse,\n  };\n}\n","import { gunAvatar } from \"..\";\n\nexport function useBackground({\n  pub,\n  size = 200,\n  light = 0.5,\n  overlay = 0.5,\n  draw = \"squares\",\n  attachment = \"fixed\",\n} = {}) {\n  if (!pub) return;\n\n  return {\n    background: `linear-gradient(hsla(255,0%,${\n      light * 100\n    }%,${overlay}), hsla(255,0%,${light * 100}%,${overlay})), url(${gunAvatar({\n      pub: pub,\n      draw,\n      reflect: false,\n      size: size,\n    })})`,\n    backgroundSize: \"cover, cover\",\n    backgroundAttachment: `${attachment},${attachment}`,\n  };\n}\n","/**\n * A 2D-space\n * @module useSpace\n */\n\nimport { useGun } from \"../gun\";\nimport { useSvgMouse } from \"../ui\";\nimport { user, useAccount } from \"../user\";\nimport { computed, ref, reactive, watchEffect } from \"vue\";\nimport { getFirstEmoji, currentRoom } from \"..\";\nimport { getArrow } from \"curved-arrows\";\nimport { useClamp, useElementBounding } from \"@vueuse/core\";\n\n/**\n * @typedef {Object} useSpace\n * @property {reactive} space The main object\n * @property {reactive} guests Active guests\n * @property {reactive} links Links between active guests\n * @property {ref} plane The SVG element\n * @property {ref} area The rect element for mouse events capture\n * @property {ref} width Width of the plane\n * @property {ref} height Height of the plane\n * @property {Function} join Join the space with the current user\n */\n\n/**\n *  A space to navigate with mouse clicks\n * @param {String} spaceName\n * @returns {useSpace}\n * @example\n * const { space, plane, links, width, height, guests, area, join } = useSpace({\n * TIMEOUT: 10000,\n * spaceName: 'Space title'\n * })\n */\n\nexport function useSpace({\n  spaceName = \"space\",\n  TIMEOUT = 10000,\n  randomness = 0.1,\n} = {}) {\n  const plane = ref();\n  const { area, mouse } = useSvgMouse(plane);\n\n  const { width, height } = useElementBounding(plane);\n  const position = reactive([0, 0])\n  const zoom = useClamp(1, 0.5, 2)\n\n  const gun = useGun();\n\n  const space = reactive({\n    title: spaceName,\n    joined: false,\n    db: computed(() => gun.user(currentRoom.pub).get(spaceName)),\n    cert: computed(() => currentRoom.features?.space),\n    my: {\n      mouse: computed(() => ({ x: mouse.x, y: mouse.y })),\n      pos: null,\n    },\n  });\n\n  async function join() {\n    space.joined = true;\n  }\n\n  function place({ x = mouse.x, y = mouse.y } = {}) {\n    if (!user.pub) return;\n    if (!space.joined) join();\n    position[0] = x\n    position[1] = y\n    space.db.get(user.pub).put(JSON.stringify({ x, y }), null, {\n      opt: { cert: currentRoom.features?.space },\n    });\n  }\n\n  const allGuests = reactive({});\n  const mates = reactive({});\n  const links = reactive({});\n\n  const guests = computed(() => {\n    const obj = {};\n    for (let g in allGuests) {\n      if (Date.now() - allGuests[g]?.pulse < TIMEOUT) {\n        obj[g] = allGuests[g];\n      }\n    }\n    return obj;\n  });\n\n  const guestCount = computed(() => Object.keys(guests.value).length);\n\n  space.db.get(user.pub).on((pos) => {\n    space.my.pos = typeof pos == \"string\" ? JSON.parse(pos) : pos;\n  });\n\n  space.db.map().once(async (pos, pub) => {\n    if (pub == user.pub) {\n      space.joined = true;\n    }\n    allGuests[pub] = {\n      pub: pub,\n      blink: false,\n      pulse: 0,\n      hasPos: false,\n      pos: {\n        x: 0,\n        y: 0,\n      }\n    };\n\n    space.db.get(pub).on((d, k) => {\n      allGuests[pub].hasPos = true;\n      allGuests[pub].pos = typeof d == \"string\" ? JSON.parse(d) : d;\n    });\n\n    gun\n      .user(pub)\n      .get(\"pulse\")\n      .on((d) => {\n        allGuests[pub].pulse = d;\n        allGuests[pub].blink = !allGuests[pub].blink;\n      })\n      .back()\n      .get(\"mates\")\n      .map()\n      .on((d, k) => {\n        mates[pub] = mates[pub] || {};\n        mates[pub][k] = d;\n      });\n\n    gun.user(pub).get('draw').get('space').on(d => {\n      if (!d) return\n      allGuests[pub].draw = d\n    })\n  });\n\n  const seeds = {}; //random seeds to scatter the arrows a little - depends on the `randomness` option\n\n  watchEffect(() => {\n    for (let pub1 in mates) {\n      seeds[pub1] = seeds[pub1] || {};\n\n      for (let pub2 in mates[pub1]) {\n        let seed = (seeds[pub1][pub2] =\n          seeds[pub1][pub2] || Math.random() * randomness);\n\n        if (mates[pub1][pub2]) {\n          const linkData = mates[pub1][pub2];\n          let g1 = allGuests[pub1];\n          let g2 = allGuests[pub2];\n          let age = Date.now() * 2 - g1?.pulse - g2?.pulse;\n          if (g1 && g2 && g1?.hasPos && g2?.hasPos && age < TIMEOUT) {\n            links[pub1 + pub2] = {\n              user: pub1,\n              mate: pub2,\n              emoji: getFirstEmoji(linkData),\n              from: g1.pos,\n              to: g2.pos,\n              arrow: generateArrow(\n                g1.pos,\n                g2.pos,\n                seed,\n              ),\n            };\n          }\n        } else {\n          delete links[pub1 + pub2];\n        }\n      }\n    }\n  });\n  return {\n    space,\n    allGuests,\n    guests,\n    guestCount,\n    links,\n    plane,\n    width,\n    height,\n    position,\n    zoom,\n    area,\n    join,\n    place,\n  };\n}\n\nfunction generateArrow(pos1, pos2, seed = 0) {\n  let arrowArray = getArrow(\n    pos1.x,\n    pos1.y,\n    pos2.x,\n    pos2.y,\n    {\n      padEnd: 20,\n      padStart: 10,\n    }\n  );\n  const [sx, sy, c1x, c1y, c2x, c2y, ex, ey, ae, as] = arrowArray;\n  let arrow = {\n    sx,\n    sy,\n    c1x: c1x * (1 - seed + 2 * seed),\n    c1y: c1y * (1 - seed + 2 * seed),\n    c2x: c2x * (1 - seed + 2 * seed),\n    c2y: c2y * (1 - seed + 2 * seed),\n    ex,\n    ey,\n    ae,\n    as,\n  };\n  return arrow;\n}\n\n/**\n * @todo draggable handles https://dev.to/abolz/roll-your-own-svg-drag-and-drop-in-vuejs-2c7o\n */\n","/**\n * Basic public chat\n * @module Chat\n */\n\nimport { ref, reactive, computed } from \"vue\";\nimport slugify from \"slugify\";\nimport { useUser, useGun, currentRoom } from \"..\";\n\nexport function useChat() {\n  const gun = useGun();\n  const { user } = useUser();\n\n  const currentChat = ref(\"general\");\n  const chats = reactive({\n    general: {},\n  });\n\n  const chatDb = gun.user(currentRoom.pub).get(\"chat\");\n\n  chatDb.map().on((d, k) => {\n    const [title, author] = k.split(\"@\");\n    chats[title] = chats[title] || {};\n    if (d) {\n      chats[title][author] = d;\n    } else {\n      delete chats?.[title]?.[author];\n    }\n  });\n\n  function addChat(title) {\n    chatDb\n      .get(`${slugify(title) || title}@${user.pub}`)\n      .put(true, null, { opt: { cert: currentRoom.features.chat } });\n  }\n\n  const topicDb = computed(() =>\n    gun.user(currentRoom.pub).get(\"chat/\" + currentChat.value)\n  );\n\n  const messages = computed(() => {\n    const msgs = reactive({});\n    topicDb.value.map().on((text, k) => {\n      const timestamp = k.substring(0, 13);\n      const author = k.substring(14);\n      msgs[k] = {\n        timestamp,\n        author,\n        text,\n      };\n    });\n    return msgs;\n  });\n\n  function send(message) {\n    if (!message) return;\n    let now = Date.now();\n    topicDb.value\n      .get(`${now}@${user.pub}`)\n      .put(message, null, { opt: { cert: currentRoom.features.chat } });\n  }\n\n  return {\n    send,\n    addChat,\n    currentChat,\n    chats,\n    messages,\n  };\n}\n","/**\n * Basic private chat\n * @module PrivateChat\n */\n\nimport { reactive, computed, ref } from \"vue\"\nimport { useAccount, useUser, useGun, SEA } from '..'\n\n\nexport function usePrivateChat(pub, { parse = true } = {}) {\n\n  const gun = useGun();\n  const { user } = useUser();\n  const messages = reactive({});\n  const epub = ref()\n\n  gun.user(pub)\n    .get('epub')\n    .once(d => epub.value = d)\n\n\n  gun.user(pub)\n    .get('chat')\n    .get(user.pub)\n    .map()\n    .once(function (d, k) {\n      parseMessages(d, k, pub, this)\n    })\n\n  gun.user()\n    .get('chat')\n    .get(pub)\n    .map()\n    .once(function (d, k) {\n      parseMessages(d, k, user.pub, this)\n    })\n\n  function parseMessages(data, today, author, that) {\n    that.map().on(async (d, k) => {\n      if (d && d.startsWith('SEA')) {\n        const secret = await SEA.secret(epub.value, user.pair())\n        const work = await SEA.work(secret, today)\n        const dec = await SEA.decrypt(d, work)\n        if (!dec || typeof dec != 'object') return\n        messages[k] = {\n          timestamp: dec.timestamp,\n          author,\n          text: dec.text\n        }\n      }\n    })\n  }\n\n  async function send(message) {\n    if (!message) return;\n    const theDate = new Date()\n    const toSend = {\n      timestamp: theDate.getTime(),\n      text: message\n    }\n    const today = theDate.toLocaleDateString('en-CA')\n    const secret = await SEA.secret(epub.value, user.pair())\n    const work = await SEA.work(secret, today)\n    const enc = await SEA.encrypt(toSend, work)\n    gun.user().get('chat').get(pub).get(today).set(enc)\n  }\n\n  return {\n    send,\n    messages,\n  };\n}\n\n\nexport function usePrivateChatCount(pub) {\n  const gun = useGun();\n  const { user } = useUser();\n  const messages = reactive({});\n\n  const available = ref(false)\n\n  gun.user(pub).get('epub').on(d => available.value = d)\n\n  gun.user(pub).get('chat').get(user.pub).map().map().on((d, k) => {\n    if (d && !d.startsWith('SEA')) return\n    messages[k] = d\n  })\n\n  gun.user().get('chat').get(pub).map().map().on((d, k) => {\n    if (d && !d.startsWith('SEA')) return\n    messages[k] = d\n  })\n\n  const count = computed(() => {\n    return Object.keys(messages).length\n  })\n  return { count, available }\n}\n\nexport function usePrivateChatList() {\n  const gun = useGun();\n  const { user } = useUser();\n  const list = reactive({})\n  if (user.is) {\n    gun.user().get('chat').map().on((d, k) => {\n      list[k] = d\n    })\n    gun.user().get(\"mates\").map().on(async (d, k) => {\n      const mutual = await gun.user(k).get('mates').get(user.pub)\n      const epub = await gun.user(k).get('epub')\n      if (mutual && epub) {\n        list[k] = d\n      }\n    })\n\n  }\n  return { list }\n}","import { computed, ref, reactive, watchEffect } from \"vue\";\nimport { useGun, useAccount, getFirstEmoji, currentRoom } from \"..\";\n\nlet startTime = Date.now();\n\nexport function useGuests({ TIMEOUT = 10000 } = {}) {\n  const gun = useGun();\n\n  const guests = reactive({});\n  const online = reactive({});\n  const offline = reactive({});\n\n  const count = reactive({\n    total: computed(() => Object.keys(guests).length),\n    online: computed(() => Object.keys(online).length),\n    offline: computed(() => Object.keys(offline).length),\n  });\n\n  gun\n    .user(currentRoom.pub)\n    .get(\"space\")\n    .map()\n    .once((pos, pub) => {\n      const { account } = useAccount(pub);\n      guests[pub] = account;\n      guests[pub].order = computed(() =>\n        startTime - account.value.pulse < TIMEOUT\n          ? 1\n          : startTime - account.value.pulse\n      );\n      guests[pub].online = computed(() => {\n        return startTime - account.value.pulse < TIMEOUT;\n      });\n    });\n\n  watchEffect(() => {\n    for (let pub in guests) {\n      if (guests[pub].online) {\n        online[pub] = guests[pub];\n        delete offline[pub];\n      } else {\n        offline[pub] = guests[pub];\n        delete online[pub];\n      }\n    }\n  });\n\n  return { guests, online, offline, count };\n}\n","/**\n * Reactive version of `gun-util` Date tree\n * @module useLog\n */\n\nimport { reactive, ref, onMounted, watchEffect, onBeforeUnmount } from \"vue\";\nimport { DateTree } from \"gun-util\";\nimport ms from \"ms\";\nimport { newWorker } from \"./useWorker\";\nimport { gun, useGun } from \"../gun\";\n\nfunction sortByDate(e) {\n  const arr = Object.entries(e.data);\n  let sorted = arr.sort((a, b) => {\n    if (!a || !b) return 0;\n    let timeA = Date.parse(a[0]);\n    let timeB = Date.parse(b[0]);\n    return timeB - timeA;\n  });\n  postMessage({ sorted, count: arr.length });\n}\n\nexport function useLog({\n  name = \"logs\",\n  after = \"2021-01-01\",\n  before = \"2023-01-01\",\n} = {}) {\n  const gun = useGun();\n  const treeRoot = gun.get(name);\n  const tree = new DateTree(treeRoot, \"minute\");\n  const dateTree = reactive({});\n  const sorted = ref([]);\n  const count = ref(0);\n\n  let query;\n\n  onMounted(() => {\n    var w = newWorker(sortByDate);\n\n    query = tree.on(\n      function (d, date) {\n        if (!d?.event) return;\n        dateTree[date] = d;\n      },\n      { gte: after, lt: before }\n    );\n\n    watchEffect(() => {\n      w.postMessage(JSON.parse(JSON.stringify(dateTree)));\n    });\n\n    w.onmessage = (e) => {\n      sorted.value = e.data.sorted;\n      count.value = e.data.count;\n    };\n  });\n\n  onBeforeUnmount(() => {\n    query.off();\n  });\n\n  function putNow(data) {\n    if (!data) return;\n    tree.get(new Date()).put({ event: \"now\", data });\n  }\n\n  return { dateTree, sorted, count, putNow };\n}\n\nexport function logEvent(event = \"text\", data) {\n  if (!data) {\n    console.log(\"No data to log\");\n    return;\n  }\n  const tree = new DateTree(gun.get(\"logs\"), \"minute\");\n  let theData = { event, ...data };\n  tree.get(new Date()).put(theData);\n}\n\nexport function formatDate(date) {\n  if (!date) return;\n  let theDate = new Date(date);\n  return {\n    date: theDate.toLocaleDateString(\"en-CA\"),\n    time: theDate.toLocaleTimeString(\"ru-RU\"),\n    ms: ms(Date.now() - theDate.getTime()),\n  };\n}\n","export const langParts = {\n  noun: {\n    en: 'noun',\n    ru: 'сущ',\n    underline: 'solid',\n  },\n  adj: {\n    en: 'adjective',\n    ru: 'прил',\n    underline: 'wavy',\n  },\n  verb: {\n    en: 'verb',\n    ru: 'глаг',\n    underline: 'double',\n  },\n  adv: {\n    en: 'adverb',\n    ru: 'нареч',\n    underline: 'dotted',\n  },\n}\n\n\nexport const languages = [\n  {\n    \"code\": \"aa\",\n    \"name\": \"Afar\",\n    \"native\": \"Afar\"\n  },\n  {\n    \"code\": \"ab\",\n    \"name\": \"Abkhazian\",\n    \"native\": \"Аҧсуа\"\n  },\n  {\n    \"code\": \"af\",\n    \"name\": \"Afrikaans\",\n    \"native\": \"Afrikaans\"\n  },\n  {\n    \"code\": \"ak\",\n    \"name\": \"Akan\",\n    \"native\": \"Akana\"\n  },\n  {\n    \"code\": \"am\",\n    \"name\": \"Amharic\",\n    \"native\": \"አማርኛ\"\n  },\n  {\n    \"code\": \"an\",\n    \"name\": \"Aragonese\",\n    \"native\": \"Aragonés\"\n  },\n  {\n    \"code\": \"ar\",\n    \"name\": \"Arabic\",\n    \"native\": \"العربية\",\n    \"rtl\": 1\n  },\n  {\n    \"code\": \"as\",\n    \"name\": \"Assamese\",\n    \"native\": \"অসমীয়া\"\n  },\n  {\n    \"code\": \"av\",\n    \"name\": \"Avar\",\n    \"native\": \"Авар\"\n  },\n  {\n    \"code\": \"ay\",\n    \"name\": \"Aymara\",\n    \"native\": \"Aymar\"\n  },\n  {\n    \"code\": \"az\",\n    \"name\": \"Azerbaijani\",\n    \"native\": \"Azərbaycanca / آذربايجان\"\n  },\n  {\n    \"code\": \"ba\",\n    \"name\": \"Bashkir\",\n    \"native\": \"Башҡорт\"\n  },\n  {\n    \"code\": \"be\",\n    \"name\": \"Belarusian\",\n    \"native\": \"Беларуская\"\n  },\n  {\n    \"code\": \"bg\",\n    \"name\": \"Bulgarian\",\n    \"native\": \"Български\"\n  },\n  {\n    \"code\": \"bh\",\n    \"name\": \"Bihari\",\n    \"native\": \"भोजपुरी\"\n  },\n  {\n    \"code\": \"bi\",\n    \"name\": \"Bislama\",\n    \"native\": \"Bislama\"\n  },\n  {\n    \"code\": \"bm\",\n    \"name\": \"Bambara\",\n    \"native\": \"Bamanankan\"\n  },\n  {\n    \"code\": \"bn\",\n    \"name\": \"Bengali\",\n    \"native\": \"বাংলা\"\n  },\n  {\n    \"code\": \"bo\",\n    \"name\": \"Tibetan\",\n    \"native\": \"བོད་ཡིག / Bod skad\"\n  },\n  {\n    \"code\": \"br\",\n    \"name\": \"Breton\",\n    \"native\": \"Brezhoneg\"\n  },\n  {\n    \"code\": \"bs\",\n    \"name\": \"Bosnian\",\n    \"native\": \"Bosanski\"\n  },\n  {\n    \"code\": \"ca\",\n    \"name\": \"Catalan\",\n    \"native\": \"Català\"\n  },\n  {\n    \"code\": \"ce\",\n    \"name\": \"Chechen\",\n    \"native\": \"Нохчийн\"\n  },\n  {\n    \"code\": \"ch\",\n    \"name\": \"Chamorro\",\n    \"native\": \"Chamoru\"\n  },\n  {\n    \"code\": \"co\",\n    \"name\": \"Corsican\",\n    \"native\": \"Corsu\"\n  },\n  {\n    \"code\": \"cr\",\n    \"name\": \"Cree\",\n    \"native\": \"Nehiyaw\"\n  },\n  {\n    \"code\": \"cs\",\n    \"name\": \"Czech\",\n    \"native\": \"Česky\"\n  },\n  {\n    \"code\": \"cu\",\n    \"name\": \"Old Church Slavonic / Old Bulgarian\",\n    \"native\": \"словѣньскъ / slověnĭskŭ\"\n  },\n  {\n    \"code\": \"cv\",\n    \"name\": \"Chuvash\",\n    \"native\": \"Чăваш\"\n  },\n  {\n    \"code\": \"cy\",\n    \"name\": \"Welsh\",\n    \"native\": \"Cymraeg\"\n  },\n  {\n    \"code\": \"da\",\n    \"name\": \"Danish\",\n    \"native\": \"Dansk\"\n  },\n  {\n    \"code\": \"de\",\n    \"name\": \"German\",\n    \"native\": \"Deutsch\"\n  },\n  {\n    \"code\": \"dv\",\n    \"name\": \"Divehi\",\n    \"native\": \"ދިވެހިބަސް\",\n    \"rtl\": 1\n  },\n  {\n    \"code\": \"dz\",\n    \"name\": \"Dzongkha\",\n    \"native\": \"ཇོང་ཁ\"\n  },\n  {\n    \"code\": \"ee\",\n    \"name\": \"Ewe\",\n    \"native\": \"Ɛʋɛ\"\n  },\n  {\n    \"code\": \"el\",\n    \"name\": \"Greek\",\n    \"native\": \"Ελληνικά\"\n  },\n  {\n    \"code\": \"en\",\n    \"name\": \"English\",\n    \"native\": \"English\"\n  },\n  {\n    \"code\": \"eo\",\n    \"name\": \"Esperanto\",\n    \"native\": \"Esperanto\"\n  },\n  {\n    \"code\": \"es\",\n    \"name\": \"Spanish\",\n    \"native\": \"Español\"\n  },\n  {\n    \"code\": \"et\",\n    \"name\": \"Estonian\",\n    \"native\": \"Eesti\"\n  },\n  {\n    \"code\": \"eu\",\n    \"name\": \"Basque\",\n    \"native\": \"Euskara\"\n  },\n  {\n    \"code\": \"fa\",\n    \"name\": \"Persian\",\n    \"native\": \"فارسی\",\n    \"rtl\": 1\n  },\n  {\n    \"code\": \"ff\",\n    \"name\": \"Peul\",\n    \"native\": \"Fulfulde\"\n  },\n  {\n    \"code\": \"fi\",\n    \"name\": \"Finnish\",\n    \"native\": \"Suomi\"\n  },\n  {\n    \"code\": \"fj\",\n    \"name\": \"Fijian\",\n    \"native\": \"Na Vosa Vakaviti\"\n  },\n  {\n    \"code\": \"fo\",\n    \"name\": \"Faroese\",\n    \"native\": \"Føroyskt\"\n  },\n  {\n    \"code\": \"fr\",\n    \"name\": \"French\",\n    \"native\": \"Français\"\n  },\n  {\n    \"code\": \"fy\",\n    \"name\": \"West Frisian\",\n    \"native\": \"Frysk\"\n  },\n  {\n    \"code\": \"ga\",\n    \"name\": \"Irish\",\n    \"native\": \"Gaeilge\"\n  },\n  {\n    \"code\": \"gd\",\n    \"name\": \"Scottish Gaelic\",\n    \"native\": \"Gàidhlig\"\n  },\n  {\n    \"code\": \"gl\",\n    \"name\": \"Galician\",\n    \"native\": \"Galego\"\n  },\n  {\n    \"code\": \"gn\",\n    \"name\": \"Guarani\",\n    \"native\": \"Avañe'ẽ\"\n  },\n  {\n    \"code\": \"gu\",\n    \"name\": \"Gujarati\",\n    \"native\": \"ગુજરાતી\"\n  },\n  {\n    \"code\": \"gv\",\n    \"name\": \"Manx\",\n    \"native\": \"Gaelg\"\n  },\n  {\n    \"code\": \"ha\",\n    \"name\": \"Hausa\",\n    \"native\": \"هَوُسَ\",\n    \"rtl\": 1\n  },\n  {\n    \"code\": \"he\",\n    \"name\": \"Hebrew\",\n    \"native\": \"עברית\",\n    \"rtl\": 1\n  },\n  {\n    \"code\": \"hi\",\n    \"name\": \"Hindi\",\n    \"native\": \"हिन्दी\"\n  },\n  {\n    \"code\": \"ho\",\n    \"name\": \"Hiri Motu\",\n    \"native\": \"Hiri Motu\"\n  },\n  {\n    \"code\": \"hr\",\n    \"name\": \"Croatian\",\n    \"native\": \"Hrvatski\"\n  },\n  {\n    \"code\": \"ht\",\n    \"name\": \"Haitian\",\n    \"native\": \"Krèyol ayisyen\"\n  },\n  {\n    \"code\": \"hu\",\n    \"name\": \"Hungarian\",\n    \"native\": \"Magyar\"\n  },\n  {\n    \"code\": \"hy\",\n    \"name\": \"Armenian\",\n    \"native\": \"Հայերեն\"\n  },\n  {\n    \"code\": \"hz\",\n    \"name\": \"Herero\",\n    \"native\": \"Otsiherero\"\n  },\n  {\n    \"code\": \"ia\",\n    \"name\": \"Interlingua\",\n    \"native\": \"Interlingua\"\n  },\n  {\n    \"code\": \"id\",\n    \"name\": \"Indonesian\",\n    \"native\": \"Bahasa Indonesia\"\n  },\n  {\n    \"code\": \"ie\",\n    \"name\": \"Interlingue\",\n    \"native\": \"Interlingue\"\n  },\n  {\n    \"code\": \"ig\",\n    \"name\": \"Igbo\",\n    \"native\": \"Igbo\"\n  },\n  {\n    \"code\": \"ii\",\n    \"name\": \"Sichuan Yi\",\n    \"native\": \"ꆇꉙ / 四川彝语\"\n  },\n  {\n    \"code\": \"ik\",\n    \"name\": \"Inupiak\",\n    \"native\": \"Iñupiak\"\n  },\n  {\n    \"code\": \"io\",\n    \"name\": \"Ido\",\n    \"native\": \"Ido\"\n  },\n  {\n    \"code\": \"is\",\n    \"name\": \"Icelandic\",\n    \"native\": \"Íslenska\"\n  },\n  {\n    \"code\": \"it\",\n    \"name\": \"Italian\",\n    \"native\": \"Italiano\"\n  },\n  {\n    \"code\": \"iu\",\n    \"name\": \"Inuktitut\",\n    \"native\": \"ᐃᓄᒃᑎᑐᑦ\"\n  },\n  {\n    \"code\": \"ja\",\n    \"name\": \"Japanese\",\n    \"native\": \"日本語\"\n  },\n  {\n    \"code\": \"jv\",\n    \"name\": \"Javanese\",\n    \"native\": \"Basa Jawa\"\n  },\n  {\n    \"code\": \"ka\",\n    \"name\": \"Georgian\",\n    \"native\": \"ქართული\"\n  },\n  {\n    \"code\": \"kg\",\n    \"name\": \"Kongo\",\n    \"native\": \"KiKongo\"\n  },\n  {\n    \"code\": \"ki\",\n    \"name\": \"Kikuyu\",\n    \"native\": \"Gĩkũyũ\"\n  },\n  {\n    \"code\": \"kj\",\n    \"name\": \"Kuanyama\",\n    \"native\": \"Kuanyama\"\n  },\n  {\n    \"code\": \"kk\",\n    \"name\": \"Kazakh\",\n    \"native\": \"Қазақша\"\n  },\n  {\n    \"code\": \"kl\",\n    \"name\": \"Greenlandic\",\n    \"native\": \"Kalaallisut\"\n  },\n  {\n    \"code\": \"km\",\n    \"name\": \"Cambodian\",\n    \"native\": \"ភាសាខ្មែរ\"\n  },\n  {\n    \"code\": \"kn\",\n    \"name\": \"Kannada\",\n    \"native\": \"ಕನ್ನಡ\"\n  },\n  {\n    \"code\": \"ko\",\n    \"name\": \"Korean\",\n    \"native\": \"한국어\"\n  },\n  {\n    \"code\": \"kr\",\n    \"name\": \"Kanuri\",\n    \"native\": \"Kanuri\"\n  },\n  {\n    \"code\": \"ks\",\n    \"name\": \"Kashmiri\",\n    \"native\": \"कश्मीरी / كشميري\",\n    \"rtl\": 1\n  },\n  {\n    \"code\": \"ku\",\n    \"name\": \"Kurdish\",\n    \"native\": \"Kurdî / كوردی\",\n    \"rtl\": 1\n  },\n  {\n    \"code\": \"kv\",\n    \"name\": \"Komi\",\n    \"native\": \"Коми\"\n  },\n  {\n    \"code\": \"kw\",\n    \"name\": \"Cornish\",\n    \"native\": \"Kernewek\"\n  },\n  {\n    \"code\": \"ky\",\n    \"name\": \"Kirghiz\",\n    \"native\": \"Kırgızca / Кыргызча\"\n  },\n  {\n    \"code\": \"la\",\n    \"name\": \"Latin\",\n    \"native\": \"Latina\"\n  },\n  {\n    \"code\": \"lb\",\n    \"name\": \"Luxembourgish\",\n    \"native\": \"Lëtzebuergesch\"\n  },\n  {\n    \"code\": \"lg\",\n    \"name\": \"Ganda\",\n    \"native\": \"Luganda\"\n  },\n  {\n    \"code\": \"li\",\n    \"name\": \"Limburgian\",\n    \"native\": \"Limburgs\"\n  },\n  {\n    \"code\": \"ln\",\n    \"name\": \"Lingala\",\n    \"native\": \"Lingála\"\n  },\n  {\n    \"code\": \"lo\",\n    \"name\": \"Laotian\",\n    \"native\": \"ລາວ / Pha xa lao\"\n  },\n  {\n    \"code\": \"lt\",\n    \"name\": \"Lithuanian\",\n    \"native\": \"Lietuvių\"\n  },\n  {\n    \"code\": \"lu\",\n    \"name\": \"Luba-Katanga\",\n    \"native\": \"Tshiluba\"\n  },\n  {\n    \"code\": \"lv\",\n    \"name\": \"Latvian\",\n    \"native\": \"Latviešu\"\n  },\n  {\n    \"code\": \"mg\",\n    \"name\": \"Malagasy\",\n    \"native\": \"Malagasy\"\n  },\n  {\n    \"code\": \"mh\",\n    \"name\": \"Marshallese\",\n    \"native\": \"Kajin Majel / Ebon\"\n  },\n  {\n    \"code\": \"mi\",\n    \"name\": \"Maori\",\n    \"native\": \"Māori\"\n  },\n  {\n    \"code\": \"mk\",\n    \"name\": \"Macedonian\",\n    \"native\": \"Македонски\"\n  },\n  {\n    \"code\": \"ml\",\n    \"name\": \"Malayalam\",\n    \"native\": \"മലയാളം\"\n  },\n  {\n    \"code\": \"mn\",\n    \"name\": \"Mongolian\",\n    \"native\": \"Монгол\"\n  },\n  {\n    \"code\": \"mo\",\n    \"name\": \"Moldovan\",\n    \"native\": \"Moldovenească\"\n  },\n  {\n    \"code\": \"mr\",\n    \"name\": \"Marathi\",\n    \"native\": \"मराठी\"\n  },\n  {\n    \"code\": \"ms\",\n    \"name\": \"Malay\",\n    \"native\": \"Bahasa Melayu\"\n  },\n  {\n    \"code\": \"mt\",\n    \"name\": \"Maltese\",\n    \"native\": \"bil-Malti\"\n  },\n  {\n    \"code\": \"my\",\n    \"name\": \"Burmese\",\n    \"native\": \"မြန်မာစာ\"\n  },\n  {\n    \"code\": \"na\",\n    \"name\": \"Nauruan\",\n    \"native\": \"Dorerin Naoero\"\n  },\n  {\n    \"code\": \"nb\",\n    \"name\": \"Norwegian Bokmål\",\n    \"native\": \"Norsk bokmål\"\n  },\n  {\n    \"code\": \"nd\",\n    \"name\": \"North Ndebele\",\n    \"native\": \"Sindebele\"\n  },\n  {\n    \"code\": \"ne\",\n    \"name\": \"Nepali\",\n    \"native\": \"नेपाली\"\n  },\n  {\n    \"code\": \"ng\",\n    \"name\": \"Ndonga\",\n    \"native\": \"Oshiwambo\"\n  },\n  {\n    \"code\": \"nl\",\n    \"name\": \"Dutch\",\n    \"native\": \"Nederlands\"\n  },\n  {\n    \"code\": \"nn\",\n    \"name\": \"Norwegian Nynorsk\",\n    \"native\": \"Norsk nynorsk\"\n  },\n  {\n    \"code\": \"no\",\n    \"name\": \"Norwegian\",\n    \"native\": \"Norsk\"\n  },\n  {\n    \"code\": \"nr\",\n    \"name\": \"South Ndebele\",\n    \"native\": \"isiNdebele\"\n  },\n  {\n    \"code\": \"nv\",\n    \"name\": \"Navajo\",\n    \"native\": \"Diné bizaad\"\n  },\n  {\n    \"code\": \"ny\",\n    \"name\": \"Chichewa\",\n    \"native\": \"Chi-Chewa\"\n  },\n  {\n    \"code\": \"oc\",\n    \"name\": \"Occitan\",\n    \"native\": \"Occitan\"\n  },\n  {\n    \"code\": \"oj\",\n    \"name\": \"Ojibwa\",\n    \"native\": \"ᐊᓂᔑᓈᐯᒧᐎᓐ / Anishinaabemowin\"\n  },\n  {\n    \"code\": \"om\",\n    \"name\": \"Oromo\",\n    \"native\": \"Oromoo\"\n  },\n  {\n    \"code\": \"or\",\n    \"name\": \"Oriya\",\n    \"native\": \"ଓଡ଼ିଆ\"\n  },\n  {\n    \"code\": \"os\",\n    \"name\": \"Ossetian / Ossetic\",\n    \"native\": \"Иронау\"\n  },\n  {\n    \"code\": \"pa\",\n    \"name\": \"Panjabi / Punjabi\",\n    \"native\": \"ਪੰਜਾਬੀ / पंजाबी / پنجابي\"\n  },\n  {\n    \"code\": \"pi\",\n    \"name\": \"Pali\",\n    \"native\": \"Pāli / पाऴि\"\n  },\n  {\n    \"code\": \"pl\",\n    \"name\": \"Polish\",\n    \"native\": \"Polski\"\n  },\n  {\n    \"code\": \"ps\",\n    \"name\": \"Pashto\",\n    \"native\": \"پښتو\",\n    \"rtl\": 1\n  },\n  {\n    \"code\": \"pt\",\n    \"name\": \"Portuguese\",\n    \"native\": \"Português\"\n  },\n  {\n    \"code\": \"qu\",\n    \"name\": \"Quechua\",\n    \"native\": \"Runa Simi\"\n  },\n  {\n    \"code\": \"rm\",\n    \"name\": \"Raeto Romance\",\n    \"native\": \"Rumantsch\"\n  },\n  {\n    \"code\": \"rn\",\n    \"name\": \"Kirundi\",\n    \"native\": \"Kirundi\"\n  },\n  {\n    \"code\": \"ro\",\n    \"name\": \"Romanian\",\n    \"native\": \"Română\"\n  },\n  {\n    \"code\": \"ru\",\n    \"name\": \"Russian\",\n    \"native\": \"Русский\"\n  },\n  {\n    \"code\": \"rw\",\n    \"name\": \"Rwandi\",\n    \"native\": \"Kinyarwandi\"\n  },\n  {\n    \"code\": \"sa\",\n    \"name\": \"Sanskrit\",\n    \"native\": \"संस्कृतम्\"\n  },\n  {\n    \"code\": \"sc\",\n    \"name\": \"Sardinian\",\n    \"native\": \"Sardu\"\n  },\n  {\n    \"code\": \"sd\",\n    \"name\": \"Sindhi\",\n    \"native\": \"सिनधि\"\n  },\n  {\n    \"code\": \"se\",\n    \"name\": \"Northern Sami\",\n    \"native\": \"Sámegiella\"\n  },\n  {\n    \"code\": \"sg\",\n    \"name\": \"Sango\",\n    \"native\": \"Sängö\"\n  },\n  {\n    \"code\": \"sh\",\n    \"name\": \"Serbo-Croatian\",\n    \"native\": \"Srpskohrvatski / Српскохрватски\"\n  },\n  {\n    \"code\": \"si\",\n    \"name\": \"Sinhalese\",\n    \"native\": \"සිංහල\"\n  },\n  {\n    \"code\": \"sk\",\n    \"name\": \"Slovak\",\n    \"native\": \"Slovenčina\"\n  },\n  {\n    \"code\": \"sl\",\n    \"name\": \"Slovenian\",\n    \"native\": \"Slovenščina\"\n  },\n  {\n    \"code\": \"sm\",\n    \"name\": \"Samoan\",\n    \"native\": \"Gagana Samoa\"\n  },\n  {\n    \"code\": \"sn\",\n    \"name\": \"Shona\",\n    \"native\": \"chiShona\"\n  },\n  {\n    \"code\": \"so\",\n    \"name\": \"Somalia\",\n    \"native\": \"Soomaaliga\"\n  },\n  {\n    \"code\": \"sq\",\n    \"name\": \"Albanian\",\n    \"native\": \"Shqip\"\n  },\n  {\n    \"code\": \"sr\",\n    \"name\": \"Serbian\",\n    \"native\": \"Српски\"\n  },\n  {\n    \"code\": \"ss\",\n    \"name\": \"Swati\",\n    \"native\": \"SiSwati\"\n  },\n  {\n    \"code\": \"st\",\n    \"name\": \"Southern Sotho\",\n    \"native\": \"Sesotho\"\n  },\n  {\n    \"code\": \"su\",\n    \"name\": \"Sundanese\",\n    \"native\": \"Basa Sunda\"\n  },\n  {\n    \"code\": \"sv\",\n    \"name\": \"Swedish\",\n    \"native\": \"Svenska\"\n  },\n  {\n    \"code\": \"sw\",\n    \"name\": \"Swahili\",\n    \"native\": \"Kiswahili\"\n  },\n  {\n    \"code\": \"ta\",\n    \"name\": \"Tamil\",\n    \"native\": \"தமிழ்\"\n  },\n  {\n    \"code\": \"te\",\n    \"name\": \"Telugu\",\n    \"native\": \"తెలుగు\"\n  },\n  {\n    \"code\": \"tg\",\n    \"name\": \"Tajik\",\n    \"native\": \"Тоҷикӣ\"\n  },\n  {\n    \"code\": \"th\",\n    \"name\": \"Thai\",\n    \"native\": \"ไทย / Phasa Thai\"\n  },\n  {\n    \"code\": \"ti\",\n    \"name\": \"Tigrinya\",\n    \"native\": \"ትግርኛ\"\n  },\n  {\n    \"code\": \"tk\",\n    \"name\": \"Turkmen\",\n    \"native\": \"Туркмен / تركمن\"\n  },\n  {\n    \"code\": \"tl\",\n    \"name\": \"Tagalog / Filipino\",\n    \"native\": \"Tagalog\"\n  },\n  {\n    \"code\": \"tn\",\n    \"name\": \"Tswana\",\n    \"native\": \"Setswana\"\n  },\n  {\n    \"code\": \"to\",\n    \"name\": \"Tonga\",\n    \"native\": \"Lea Faka-Tonga\"\n  },\n  {\n    \"code\": \"tr\",\n    \"name\": \"Turkish\",\n    \"native\": \"Türkçe\"\n  },\n  {\n    \"code\": \"ts\",\n    \"name\": \"Tsonga\",\n    \"native\": \"Xitsonga\"\n  },\n  {\n    \"code\": \"tt\",\n    \"name\": \"Tatar\",\n    \"native\": \"Tatarça\"\n  },\n  {\n    \"code\": \"tw\",\n    \"name\": \"Twi\",\n    \"native\": \"Twi\"\n  },\n  {\n    \"code\": \"ty\",\n    \"name\": \"Tahitian\",\n    \"native\": \"Reo Mā`ohi\"\n  },\n  {\n    \"code\": \"ug\",\n    \"name\": \"Uyghur\",\n    \"native\": \"Uyƣurqə / ئۇيغۇرچە\"\n  },\n  {\n    \"code\": \"uk\",\n    \"name\": \"Ukrainian\",\n    \"native\": \"Українська\"\n  },\n  {\n    \"code\": \"ur\",\n    \"name\": \"Urdu\",\n    \"native\": \"اردو\",\n    \"rtl\": 1\n  },\n  {\n    \"code\": \"uz\",\n    \"name\": \"Uzbek\",\n    \"native\": \"Ўзбек\"\n  },\n  {\n    \"code\": \"ve\",\n    \"name\": \"Venda\",\n    \"native\": \"Tshivenḓa\"\n  },\n  {\n    \"code\": \"vi\",\n    \"name\": \"Vietnamese\",\n    \"native\": \"Tiếng Việt\"\n  },\n  {\n    \"code\": \"vo\",\n    \"name\": \"Volapük\",\n    \"native\": \"Volapük\"\n  },\n  {\n    \"code\": \"wa\",\n    \"name\": \"Walloon\",\n    \"native\": \"Walon\"\n  },\n  {\n    \"code\": \"wo\",\n    \"name\": \"Wolof\",\n    \"native\": \"Wollof\"\n  },\n  {\n    \"code\": \"xh\",\n    \"name\": \"Xhosa\",\n    \"native\": \"isiXhosa\"\n  },\n  {\n    \"code\": \"yi\",\n    \"name\": \"Yiddish\",\n    \"native\": \"ייִדיש\",\n    \"rtl\": 1\n  },\n  {\n    \"code\": \"yo\",\n    \"name\": \"Yoruba\",\n    \"native\": \"Yorùbá\"\n  },\n  {\n    \"code\": \"za\",\n    \"name\": \"Zhuang\",\n    \"native\": \"Cuengh / Tôô / 壮语\"\n  },\n  {\n    \"code\": \"zh\",\n    \"name\": \"Chinese\",\n    \"native\": \"中文\"\n  },\n  {\n    \"code\": \"zu\",\n    \"name\": \"Zulu\",\n    \"native\": \"isiZulu\"\n  }\n]"],"names":["yaml","markdown","externalLinks"],"mappings":"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AA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,OAAO;AAAA,EACR;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,OAAO;AAAA,EACR;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,OAAO;AAAA,EACR;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,OAAO;AAAA,EACR;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,OAAO;AAAA,EACR;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,OAAO;AAAA,EACR;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,OAAO;AAAA,EACR;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,OAAO;AAAA,EACR;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,OAAO;AAAA,EACR;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AAAA,EACD;AAAA,IACE,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AACH;;"}