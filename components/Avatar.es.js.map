{"version":3,"file":"Avatar.es.js","sources":["../../../composables/src/gun/useRelay.js","../../../composables/src/gun/useGun.js","../../../composables/src/gun/useRelays.js","../../../composables/src/crypto/useCert.js","../../../composables/src/ui/useColor.js","../../../composables/src/user/useUser.js","../../../composables/src/user/usePass.js","../../../composables/src/user/useAccount.js","../../../composables/src/space/useDraw.js","../../../composables/src/room/rootRoom.js","../../../composables/src/room/useRoom.js","../../../composables/src/log/useWorker.js","../../../composables/src/dict/useDict.js"],"sourcesContent":["/**\n * Relay connection management\n * @module useRelay\n */\n\nimport { useGun } from '.'\nimport { computed, reactive, watch } from 'vue'\nimport { useStorage } from \"@vueuse/core\";\nimport ms from 'ms'\n\nexport const defaultPeer = \"https://etogun.glitch.me/gun\";\nexport const peer = useStorage(\"peer\", defaultPeer);\n\n/**\n * @typedef {reactive} Relay Peer server status reactive object\n * @property {String} host the current peer server URL\n * @property {String} status current connection status\n * @property {Number} started the timestamp of server started current session\n * @property {Number} pulse last received timestamp\n * @property {Number} lag drift of the timestamp in ms\n * @property {Number} diff age of the session in ms\n * @property {String} age age of the session in human readable format\n * @property {Boolean} blink a Boolean toggled every time the new pulse comes to drive animations\n * @example\n * {\n * \"peer\": \"https://etogun.glitch.me/gun\",\n * \"host\": \"6db1edbb5aae\",\n * \"status\": \"running\",\n * \"started\": 1642666725795,\n * \"pulse\": 1642677007483,\n * \"lag\": 8,\n * \"diff\": 10281688,\n * \"age\": \"3h\",\n * \"delay\": 22,\n * \"blink\": true\n * }\n */\n\nexport const relay = reactive({\n  list: [],\n  peer: peer.value,\n  host: new URL(peer.value).hostname,\n  status: 'offline',\n  started: 0,\n  pulse: 0,\n  lag: 0,\n  diff: computed(() => relay.pulse - relay.started),\n  age: computed(() => ms(relay.diff)),\n  delay: computed(() => Date.now() - relay.pulse),\n  blink: false,\n})\n\nwatch(\n  () => relay.pulse,\n  (next, prev) => {\n    relay.blink = !relay.blink\n    relay.lag = next - prev - 500\n  },\n)\n\nfunction setPeer(url) {\n  peer.value = url\n  window.location.reload()\n};\n\nfunction resetPeer() {\n  peer.value = defaultPeer\n  window.location.reload()\n}\n\n\n/**\n * Peer server status monitor\n * @returns {useRelay}\n *\n * @example\n * import { useRelay } from '@gun-vue/composables';\n *\n * const { relay, setPeer, resetPeer } = useRelay()\n */\nexport function useRelay() {\n  const gun = useGun()\n  if (relay.pulse == 0) {\n    gun\n      .get(relay.host)\n      .map()\n      .on((d, k) => {\n        relay[k] = d\n      })\n  }\n\n  return { relay, setPeer, resetPeer }\n}\n","/**\n * Gun DB initialization and basic methods\n * @module useGun\n */\n\nimport Gun from \"gun/gun\";\nimport \"gun/lib/then\";\nimport \"gun/lib/radix\";\nimport \"gun/lib/radisk\";\nimport \"gun/lib/store\";\nimport \"gun/lib/rindexed\";\nimport \"gun/lib/webrtc\";\nimport \"gun/nts\";\n\n\n// polyfiils for Gun 0.2020.1236\nimport { Buffer } from 'buffer'\nwindow.Buffer = Buffer\nwindow.setImmediate = setTimeout\n\nimport { peer } from './useRelay'\n\n\n// https://github.com/amark/gun/wiki/volunteer.dht\n// https://github.com/draeder/gun-relays\n\n/** The main Gun instance for database operations */\nexport let gun;\n\n/** Secondary Gun instance for key management */\nexport let gun2;\n\n/**\n * Instantiate a Gun instance for DB manipulations\n * @param {Object} options - options fot this gun instance, like { localstorage:true }\n * @returns {Gun}\n * @example\n * import { useGun } from '@gun-vue/composables'\n *\n * const gun = useGun()\n */\n\nexport function useGun(opts = { localStorage: false }) {\n  if (!gun) {\n    gun = Gun({ peers: [peer.value], ...opts });\n  }\n  return gun;\n}\n\n/**\n * get a secondary Gun instance to manages certificates\n * @param {Object} options - options fot this gun instance, like { localstorage:true }\n * @returns {Gun}\n */\n\nexport function useGun2(opts = { localStorage: false }) {\n  if (!gun2) {\n    gun2 = Gun({ peers: [peer.value], ...opts });\n  }\n  return gun2;\n}\n\n/**\n * SEA library\n * @constant SEA\n */\nexport { default as SEA } from \"gun/sea.js\";\n\n/**\n * **Get a soul for any given node**\n * A wrapper for `Gun.node.soul`\n * @function soul\n */\nexport const soul = Gun?.node?.soul;\n\n/**\n * **Generate a random UUID**\n * A wrapper for `Gun.text.random`\n * @function genUUID\n */\nexport const genUUID = Gun?.text?.random;\n\n\n","/**\n * Loads the [list of active volunteer DHT gun nodes](https://github.com/amark/gun/wiki/volunteer.dht)  and benchmarks ping for them\n * @module useRelays\n */\n\n/**\n * @typedef {Object} useRelays\n * @property {Object} Relays\n * @property {Object} Errors\n * @property {Function} loadRelays\n */\n\n/**\n * @typedef {Object} loadRelaysOptions\n * @property {String} source\n */\n\n/**\n * @typedef {Object[]} Relays \n * @property {String} hostname\n * @property {String} url\n * @property {Number} ping\n */\n\n\nimport urlRegex from 'url-regex'\nimport { reactive } from 'vue'\nimport { relay } from './useRelay'\n\nconst relays = reactive({})\nconst errors = reactive({})\n\n/**\n * Load the list of the relays\n * @param {Object} loadRelaysOptions\n * @returns {relays} \n */\n\nexport async function loadRelays({\n  source = 'https://raw.githubusercontent.com/wiki/amark/gun/volunteer.dht.md'\n} = {}) {\n  let res = await fetch(source)\n  let data = await res.text()\n  let urls = data.match(urlRegex())\n  urls.push(relay.peer)\n  urls = Array.from(urls)\n  urls.forEach((u) => {\n    let testUrl = new URL(u)\n    if (testUrl.pathname === '/gun' && testUrl.pathname.indexOf('~~') === -1) {\n      let startMoment = performance.now()\n      fetch(testUrl.href, {\n        method: 'HEAD',\n        mode: 'cors',\n        // mode: 'no-cors',\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n      }).then(response => {\n        let endMoment = performance.now()\n        if (response.ok) {\n          relays[testUrl.hostname] = {\n            host: testUrl.hostname,\n            ping: (endMoment - startMoment).toFixed(),\n            url: testUrl.href\n          }\n        } else {\n          errors[testUrl.hostname] = response\n        }\n      }).catch(e => {\n        errors[testUrl.hostname] = e\n      })\n    }\n  })\n  return relays\n}\n\n/**\n * Gets the list of actual gun relays and tool to update the list\n * @returns {useRelays}\n * @example\n * import { useRelays } from '@gun-vue/composables'\n * const { relays, errors, loadRelays } = useRelays()\n */\n\nexport function useRelays() {\n  return { relays, errors, loadRelays }\n}\n\n","import { SEA } from \"..\";\n\nexport async function issueCert({\n  pair,\n  tag = \"word\",\n  users = \"*\",\n  personal = false,\n} = {}) {\n  let path = { \"*\": `${tag}` };\n  if (personal) {\n    path[\"+\"] = \"*\";\n  }\n  try {\n    let cert = await SEA.certify(users, path, pair);\n    return cert;\n  } catch (e) {\n    console.log(\"cert error: \", e);\n  }\n}\n\nwindow.issueCert = issueCert;\n\nexport async function generateCerts({ pair, list = [] } = {}) {\n  const all = {};\n  for (let opt of list) {\n    all[opt.tag] = await issueCert({ ...opt, pair });\n  }\n  return all;\n}\n","/**\n * Deterministic colors derived from oub keys, hashes or any other string data\n * @module useColor\n * */\n\nimport ColorHash from \"color-hash\";\n\nconst color = {\n  light: new ColorHash({\n    saturation: [0.05, 0.08, 0.22],\n    lightness: [0.85, 0.87, 0.9],\n  }),\n  pale: new ColorHash({\n    saturation: [0.05, 0.42, 0.52],\n    lightness: [0.75, 0.77, 0.9],\n  }),\n  regular: new ColorHash({\n    saturation: [0.1, 0.5, 0.7],\n    lightness: [0.3, 0.5, 0.7],\n  }),\n  deep: new ColorHash({\n    saturation: [0.5, 0.6, 0.7],\n    lightness: [0.5, 0.55, 0.6],\n  }),\n  dark: new ColorHash({\n    saturation: [0.02, 0.5, 0.6],\n    lightness: [0.18, 0.2, 0.5],\n  }),\n};\n\n/**\n * Get a color generator of a certain palette\n * @param {('light'|'regular'|'deep'|'dark')} palette\n * @returns {ColorHash} Color-Hash instance\n * @see https://github.com/zenozeng/color-hash\n * @example\n * import {useColor} from '@gun-vue/composables'\n * const colorDeep = useColor('deep')\n * const color = colorDeep.hex('any text data')\n * // color == '#e052ae'\n */\n\nexport function useColor(palette = \"deep\") {\n  if (typeof palette == \"object\") {\n    return new ColorHash(palette);\n  }\n  return color[palette];\n}\n","/**\n * Basic user management\n * @module useUser\n * */\n\nimport { gun, useGun } from \"..\";\nimport { useColor } from \"../ui\";\nimport { computed, reactive, ref } from \"vue\";\nimport ms from \"ms\";\n\nconst colorDeep = useColor(\"deep\");\n\nexport const selectedUser = reactive({\n  pub: null,\n});\n\n/**\n * @typedef {Object} Account - the user account interface\n * @property {ref} pub - The pub key used to build the account\n * @property {computed} color - The user account color derived from the pub key\n * @property {Object} profile - An object with all the `gun.user().get('profile')` data\n * @property {Number} pulse - latest timestamp from the user. It's emitted every second. Offline timeout is set to 10 seconds.\n * @property {Boolean} blink - A boolean that toggles on every timestamp received\n * @property {Sting} lastSeen - Shows 'online' if recent pulse is less then 10s ago or a human readable time string\n * @property {gun} db - `gun.user(pub)` ref to query any additional user data\n * @example\n * {\n * \"pub\": \"XnpLVDYZWdl1NNgo6BlD6e3-n3Fzi-ZzVrzbIgYCYHo.9-hHUHaWNaAE6tMp800MMzNtDLtjicS53915IrBu4uc\",\n * \"color\": \"#f55c3d\",\n * \"profile\": {\n *    \"name\": \"Accord\",\n *    \"Message\": \"Use your imagination!\",\n *    \"Money\": \"$ 20000000000\"\n * },\n * \"pulse\": 1642077216809,\n * \"lastSeen\": \"online\",\n * \"blink\": true\n * }\n */\n\n/**\n * @typedef {Object} User - An interface to the current gun user\n * @property {Boolean} initiated - `true` if useUser has been run at least once\n * @property {Object} is - Reactive `gun.user().is`\n * @property {String} pub - Current user public key\n * @property {String} color - a HEX color for the given pub\n * @property {Number} pulse - Last received pulse timestamp\n * @property {Number} pulser - An id for pulse `setInterval`\n * @property {Boolean} blink - Toggles with every pulse received\n * @property {Object} db - `gun.user()` reference\n * @property {Object} safe - safe account indicators\n * @property {Function} pair - use `user.pair()` to get curent user key pair\n * @example\n * { \n *  \"initiated\": true, \n *  \"is\": { \n *    \"pub\": \"XnpLVDYZWdl1NNgo6BlD6e3-n3Fzi-ZzVrzbIgYCYHo.9-hHUHaWNaAE6tMp800MMzNtDLtjicS53915IrBu4uc\", \n *    \"epub\": \"wAvPlMAg4jvUvK4sPpVyF1CAWnRCMu1YpHnoDrVDg-o.l79QDmdPCLEiO0F_WkB3zYLpJt-lANtyhNmHSM4bTes\", \n *    \"alias\": \"XnpLVDYZWdl1NNgo6BlD6e3-n3Fzi-ZzVrzbIgYCYHo.9-hHUHaWNaAE6tMp800MMzNtDLtjicS53915IrBu4uc\" \n *  }, \n *  \"name\": \"Accord\", \n *  \"pub\": \"XnpLVDYZWdl1NNgo6BlD6e3-n3Fzi-ZzVrzbIgYCYHo.9-hHUHaWNaAE6tMp800MMzNtDLtjicS53915IrBu4uc\", \n *  \"color\": \"#f55c3d\", \n *  \"pulse\": 1642708061615, \n *  \"pulser\": 12, \n *  \"blink\": false, \n *  \"safe\": { \n *    \"saved\": true, \n *    \"password\": null, \n *    \"enc\": \"SEA{\\\"ct\\\":\\\"E+6GViU9dTuidruOCNAoBITE+AlGNRgiABplSbL5fh4v1P+fhF33MuBwKd3ssBNi2kJ1sCzvS/YLmzivECA5ARZPGVbgXTSj8AE9kCz0Ac/8ushlsfBNdt8s3+a3OPVxMIevnT01uqcgr75Zp4TugIg/YuB5WltA9RHsgWEMlo+X+tRGaqG5rfw4sAmTSV0P8evMgM9rN/Un5t/WeDbvIPNXqZEmtxwAhMUZwOJWZckNZmNwpxnelFO0BwmauWfzkXuqGeSxNhMeaZi+VoRDMUvTjT68DLBnVoOhFhcdco+RW8AJfktZHZ4GF2IzFnQmTGpUd2LfvIY/Yn1eNJH7iQ5w41ChiYB/zhgQCOc5ur51PV6swAuN595vUNn7+0J1JRSNGzW2V/4j4YR4IEsAoqOtdn2Y21ga/CFdrE0=\\\",\\\"iv\\\":\\\"LtODTV+LBzhWHqUcptUO\\\",\\\"s\\\":\\\"XCL9Uj1YlPcV\\\"}\", \n *  \"pass\": \"SEA{\\\"ct\\\":\\\"8wNClMx/ebfou+gGWdf+bbx0TAgc9RU=\\\",\\\"iv\\\":\\\"NPgHkI+Ke+i/mw+3chlr\\\",\\\"s\\\":\\\"3VzGv06Y4fQ+\\\"}\" \n *  } \n * }\n\n */\n\nexport const user = reactive({\n  initiated: false,\n  auth: false,\n  is: null,\n  name: \"\",\n  pub: computed(() => user?.is?.pub),\n  color: computed(() => (user.pub ? colorDeep.hex(user.pub) : \"gray\")),\n  pulse: 0,\n  pulser: null,\n  blink: false,\n  safe: {\n    saved: null,\n    password: null,\n  },\n  pair() {\n    return gun?.user?.()?._?.sea;\n  },\n});\n\n/**\n * @typedef useUser\n * @property {User} user - the user interface\n * @property {Function} auth - auth with a pair\n * @property {Function} leave - log out\n */\n\n/**\n * Get access to current logged in user\n * @returns {useUser}\n * @example\n * import { useUser } from '@gun-vue/composables'\n *\n * const { user, auth, leave } = useUser()\n */\n\nexport function useUser() {\n\n\n  if (!user.initiated) {\n    const gun = useGun();\n    user.db = gun.user();\n    gun.user().recall({ sessionStorage: true }, () => {\n      console.log(\"user was recalled\");\n    });\n\n    gun.on(\"auth\", () => {\n      init();\n      console.log(\"user authenticated\");\n    });\n    user.initiated = true;\n  }\n\n\n  return { user, auth, leave };\n}\n\nfunction init() {\n  user.is = gun.user().is;\n  if (user.pulser) {\n    clearInterval(user.pulser);\n  }\n  user.pulser = setInterval(() => {\n    gun.user().get(\"pulse\").put(Date.now());\n  }, 1000);\n\n  gun.user().get('epub').put(user.is.epub)\n\n  gun\n    .user()\n    .get(\"pulse\")\n    .on((d) => {\n      user.blink = !user.blink;\n      user.pulse = d;\n    })\n\n  gun.user()\n    .get(\"safe\")\n    .map()\n    .on((d, k) => {\n      user.safe[k] = d;\n    });\n\n  gun\n    .user()\n    .get(\"profile\")\n    .get(\"name\")\n    .on((d) => (user.name = d));\n\n  user.initiated = true;\n}\n\n/**\n * Authenticate with a SEA key pair\n * @param {Object} pair\n * @example\n * import { auth, SEA } from '@gun-vue/composables'\n *\n * async function login() {\n *    const pair = await SEA.pair()\n *    auth(pair)\n * }\n */\n\nexport async function auth(pair, cb = () => { }) {\n  if (!isPair(pair)) {\n    // pair = await SEA.pair();\n    console.log(\"incorrect pair\", pair);\n    return;\n  }\n  gun.user().auth(pair, async () => {\n    cb(pair);\n    console.log(\"user is authenticated\");\n  });\n}\n\n/**\n * Log out the user\n * @example\n * import { leave } from '@gun-vue/composables'\n *\n * leave()\n **/\n\nexport function leave() {\n  let is = !!user.is?.pub;\n  user.initiated = false;\n  clearInterval(user.pulser);\n  gun.user().leave();\n  setTimeout(() => {\n    if (is && !user.pair()) {\n      user.is = null;\n      console.info(\"User logged out\");\n    }\n  }, 500);\n}\n\nexport function isMine(soul) {\n  if (!soul) return;\n  return soul.slice(1, 88) == user.pub;\n}\n\n/**\n * Add a field to the User profile\n * @param {String} name\n * @example\n * import { addProfileField } from '@gun-vue/composables'\n *\n * addProfileField( 'city' )\n */\n\nexport function addProfileField(title) {\n  gun.user().get(\"profile\").get(title).put(\"\");\n}\n\n/**\n * Update a profile field\n * @param {String} field\n * @param {Any} data\n * @example\n * import { updateProfile } from '@gun-vue/composables'\n *\n * updateProfile( 'city', 'Moscow' )\n */\n\nexport function updateProfile(field, data) {\n  if (field && data !== undefined) {\n    gun.user().get(\"profile\").get(field).put(data);\n  }\n}\n\n/**\n * Check if the object is a proper SEA pair\n * @param {Object} pair - an object to check\n * @returns {Boolean}\n */\n\nexport function isPair(pair) {\n  return (\n    pair &&\n    typeof pair == \"object\" &&\n    pair.pub &&\n    pair.epub &&\n    pair.priv &&\n    pair.epriv\n  );\n}\n","/**\n * Manage user's password and credentials\n * @module usePass\n */\n\nimport { computed, reactive, watchEffect } from \"vue\";\nimport { gun, useGun, SEA, auth, isPair, user } from \"..\";\nimport base32 from \"base32\";\n\n/**\n * @typedef {reactive} Pass\n * @property {Object} safe\n * @property {Object} dec\n */\n\nexport const pass = reactive({\n  input: \"\",\n  show: false,\n  safePair: false,\n  minLength: 5,\n  safe: {},\n  dec: {},\n  links: {\n    pass: computed(() => {\n      return genLink(pass.safe?.enc);\n    }),\n    pair: computed(() => {\n      return genLink(JSON.stringify(user.pair()));\n    }),\n  },\n\n  set() {\n    setPass(pass.input);\n    pass.input = \"\";\n    pass.show = false;\n  },\n});\n\nfunction genLink(text = \"\") {\n  let base = base32.encode(text);\n  return window.location.origin + window.location.pathname + \"#/auth/\" + base;\n}\n\nexport function parseLink(link) {\n  let index = link.indexOf(\"#/auth/\");\n  let base = link.substr(index + 7);\n  return base32.decode(base);\n}\n\nlet initiated = false;\n\n/**\n * Manage password of a user\n * @returns {usePass}\n */\n\nexport function usePass() {\n  if (!initiated) {\n    const gun = useGun();\n    gun\n      .user()\n      .get(\"safe\")\n      .map()\n      .on((d, k) => {\n        pass.safe[k] = d;\n      });\n\n    watchEffect(async () => {\n      if (!pass.show) {\n        pass.dec = {};\n        return;\n      }\n      if (pass?.show && pass?.safe?.pass) {\n        pass.dec.pass = await SEA.decrypt(pass.safe.pass, user.pair());\n        pass.input = pass.dec.pass;\n      }\n      if (pass.show && pass?.safe?.enc) {\n        pass.dec.pair = await SEA.decrypt(pass.safe.enc, pass.dec.pass);\n      }\n    });\n  }\n  initiated = true;\n\n  return { pass, setPass, logWithPass };\n}\n\n/**\n * @typedef {Object} usePass\n * @property {Pass} pass - the reactive password object\n * @property {Function} setPass\n * @property {Function} logWithPass\n */\n\nexport async function hasPass(pub) {\n  return await gun.get(`~${pub}`).get(\"safe\").get(\"enc\").then();\n}\n\nasync function logWithPass(pub, passphrase) {\n  let encPair = await gun.get(`~${pub}`).get(\"safe\").get(\"enc\").then();\n  let pair = await SEA.decrypt(encPair, passphrase);\n  auth(pair);\n}\n\nasync function setPass(text) {\n  let encPair = await SEA.encrypt(user.pair(), text);\n  let encPass = await SEA.encrypt(text, user.pair());\n  user.db.get(\"safe\").get(\"enc\").put(encPair);\n  user.db.get(\"safe\").get(\"pass\").put(encPass);\n}\n\nexport function usePassLink(data, passPhrase) {\n  if (!data) return;\n  const decoded = base32.decode(data);\n  if (decoded.substring(0, 3) == \"SEA\") {\n    if (passPhrase) {\n      logEncPass(decoded, passPhrase);\n    }\n    return \"encrypted\";\n  } else {\n    try {\n      let d = JSON.parse(decoded);\n      if (isPair(d)) {\n        auth(d);\n      }\n      return \"success\";\n    } catch (e) {\n      return \"incorrect link\";\n    }\n  }\n}\n\nasync function logEncPass(encPair, passphrase) {\n  let pair = await SEA.decrypt(encPair, passphrase);\n  auth(pair);\n}\n","/**\n * Basic user management\n * @module useAccount\n * */\n\n import {  useGun } from \"..\";\n import { useColor } from \"../ui\";\n import { computed, reactive, ref } from \"vue\";\n import ms from \"ms\";\n \n const colorDeep = useColor(\"deep\");\n \n\n/**\n * Load and handle user's account by a public key\n * @param {ref} pub - The public key of a user as a string or a ref\n * @returns {Account}\n * @example\n * import { ref } from 'vue'\n * import { useAccount, SEA } from '@gun-vue/composables'\n *\n * const pub = ref()\n *\n * async function generatePair() {\n *  pub.value = await SEA.pair()\n * }\n *\n * const { account } = useAccount(pub)\n */\n\n export function useAccount(pub = ref(), { TIMEOUT = 10000 } = {}) {\n  const gun = useGun();\n  pub = ref(pub);\n  const account = computed(() => {\n    const obj = reactive({\n      pub,\n      color: computed(() => (pub.value ? colorDeep.hex(pub.value) : \"gray\")),\n      profile: {\n        name: \"\",\n      },\n      pulse: 0,\n      lastSeen: computed(() => {\n        let time = Date.now() - obj.pulse;\n        if (time > TIMEOUT) {\n          return ms(time);\n        } else {\n          return \"online\";\n        }\n      }),\n      blink: false,\n      db: gun.user(pub.value),\n    });\n\n    gun\n      .user(pub.value)\n      .get(\"pulse\")\n      .on((d) => {\n        obj.blink = !obj.blink;\n        obj.pulse = d;\n      })\n      .back()\n      .get(\"profile\")\n      .map()\n      .on((data, key) => {\n        obj.profile[key] = data;\n      });\n    return obj;\n  });\n\n  return { account };\n}","import { computed, markRaw, nextTick, reactive, ref, watch, onMounted } from 'vue'\nimport { createDrauu } from 'drauu'\nimport { toReactive, useStorage, useCycleList } from '@vueuse/core'\n\nimport { useGun, useUser } from '../'\n\nexport const draw = reactive({\n  colors: [\n    '#000000',\n    ...new Array(12).fill(true).map((el, i) => `hsl(${i * 30}, 100%,50%)`),\n    '#ffffff',\n  ],\n  sizes: useCycleList([4, 8, 16, 24]),\n  modes: ['line', 'arrow', 'stylus', 'rectangle', 'ellipse'],\n  mode: computed({\n    get() {\n      return _mode.value\n    },\n    set(v) {\n      _mode.value = v\n      if (v === 'arrow') {\n        brush.mode = 'line'\n        brush.arrowEnd = true\n      }\n      else {\n        brush.mode = v\n        brush.arrowEnd = false\n      }\n    },\n  }),\n  enabled: false,\n  pinned: useStorage('drawing-pinned', false),\n  canUndo: false,\n  canRedo: false,\n  canClear: false,\n  ing: false,\n  initiated: false,\n  content: ''\n})\n\nexport const brush = toReactive(useStorage('drawing-brush', {\n  color: draw.colors[0],\n  size: 10,\n  mode: 'stylus',\n}))\n\nconst _mode = ref('stylus')\nlet disableDump = false\n\nexport const drauuOptions = reactive({\n  brush,\n  acceptsInputTypes: computed(() => draw.enabled ? undefined : ['pen']),\n  coordinateTransform: true,\n})\nexport const drauu = markRaw(createDrauu(drauuOptions))\n\nexport function loadCanvas(page) {\n  disableDump = true\n  if (draw.content != null)\n    drauu.load(draw.content)\n  else\n    drauu.clear()\n  disableDump = false\n}\n\nexport function updateState() {\n  draw.canRedo = drauu.canRedo()\n  draw.canUndo = drauu.canUndo()\n  draw.canClear = !!drauu.el?.children.length\n}\n\n\nexport function useDraw() {\n  if (!draw.initiated) {\n    const gun = useGun()\n\n    const drawing = gun.user().get('draw').get('space')\n\n    drawing.on(d => {\n      if (draw.ing) return\n      draw.content = d\n      loadCanvas()\n    })\n    drauu.on('changed', () => {\n      updateState()\n      if (!disableDump) {\n        let content = drauu.dump()\n        draw.content = content\n        drawing.put(content)\n      }\n    })\n    onMounted(() => {\n      nextTick(() => {\n        loadCanvas()\n      })\n\n    })\n\n    drauu.on('start', () => draw.ing = true)\n    drauu.on('end', () => draw.ing = false)\n\n    draw.clear = () => {\n      drauu.clear()\n      draw.content = ''\n      drawing.put('')\n    }\n\n    window.addEventListener('keydown', (e) => {\n      if (!draw.enabled)\n        return\n\n      const noModifier = !e.ctrlKey && !e.altKey && !e.shiftKey && !e.metaKey\n      let handled = true\n      if (e.code === 'KeyZ' && (e.ctrlKey || e.metaKey)) {\n        if (e.shiftKey)\n          drauu.redo()\n        else\n          drauu.undo()\n      }\n      else if (e.code === 'Escape') {\n        draw.enabled = false\n      }\n      else if (e.code === 'KeyC' && (e.ctrlKey || e.metaKey)) {\n        draw.clear()\n      }\n      else if (e.code.startsWith('Digit') && noModifier && +e.code[5] <= brushColors.length) {\n        brush.color = brushColors[+e.code[5] - 1]\n      }\n      else {\n        handled = false\n      }\n\n      if (handled) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n    }, false)\n  }\n\n  draw.initiated = true\n\n  return {\n    brush, draw, drauu, loadCanvas\n  }\n}\n\n","export const rootRoom = {\n  \"pub\": \"OUlhoY2Eq8QkZE_iWN3l6J2vvbkX33vowcFdqFoCoEQ.a-B1ImQK4aoiEpdW-38MAPc8oi16DHY57bDJ4dEZpX0\",\n  \"hosts\": {\n    \"jFjrmOEaRy-GAJlOCdG4SGoaLm_4AGMPP1sfmzYPwwo.mp2H7IQuTWlFSahN6ZnXN9Za0pD3thiIYUyGCaMel-M\": {\n      \"enc\": \"SEA{\\\"ct\\\":\\\"iS5GdAK2S5ViG1OFG6DAWYoFGZWyUu8d5AfcpenXX5VT8vqwBUFCJSp3OBUWon57uu6L73+Xyes2gNgLqrpHYqD03URRZlwCOcBG2jmtRi/Fe/YePvS2qcOzWhEJEHaxo22QyBveFmkhynAJXshXU/fjX9jYzFtAtw9wXo6jjKM1GVufmCeDMR79oxfODw+2M3sIy3vJIZ/8KR+INbOFVz/XMz5314f1sCQ6SgP1j0Fv1HGhLWkeeLLw+fyfRUMpeW1cstdArqIGH5H2Z5c3fBpLlOTzK6wbU1O9wEwVEddvgMZkEyNjBOFWV1NNauy2whyD3ftIoTr3br6gSsTcl7ibfFaP8jgTIENptZiK+cWmnN9ZpPUz4lwQodYSoUmhpizZfG/w2WA502QYGoWA9BGSzy/2bSoNpgXkEvw=\\\",\\\"iv\\\":\\\"9z6HGfMkRKZJ84duHAVf\\\",\\\"s\\\":\\\"yMjUdtjPYgP7\\\"}\",\n      \"profile\": \"SEA{\\\"m\\\":{\\\"c\\\":\\\"jFjrmOEaRy-GAJlOCdG4SGoaLm_4AGMPP1sfmzYPwwo.mp2H7IQuTWlFSahN6ZnXN9Za0pD3thiIYUyGCaMel-M\\\",\\\"w\\\":{\\\"*\\\":\\\"profile\\\"}},\\\"s\\\":\\\"jygNHqfMhoEywFA1ChhkKmq177lGnADFnO+lc2eBih1p0IFxQPpdXvLhs7VQdAGxQtwVEx8/ZVimXwhNirUweA==\\\"}\",\n      \"features\": \"SEA{\\\"m\\\":{\\\"c\\\":\\\"jFjrmOEaRy-GAJlOCdG4SGoaLm_4AGMPP1sfmzYPwwo.mp2H7IQuTWlFSahN6ZnXN9Za0pD3thiIYUyGCaMel-M\\\",\\\"w\\\":{\\\"*\\\":\\\"features\\\"}},\\\"s\\\":\\\"pNZ6D5HzCLXGF7vqYMwZ0bFEbd8nca6m9wC93YlO/Uhrh4TTVLyPQHTVZJKltzg8yvJLIZVeO8xGU6Hl3bYJ2A==\\\"}\",\n      \"hosts\": \"SEA{\\\"m\\\":{\\\"c\\\":\\\"jFjrmOEaRy-GAJlOCdG4SGoaLm_4AGMPP1sfmzYPwwo.mp2H7IQuTWlFSahN6ZnXN9Za0pD3thiIYUyGCaMel-M\\\",\\\"w\\\":{\\\"*\\\":\\\"hosts\\\"}},\\\"s\\\":\\\"DvDu9qV5Em9vLUoqSg/IHlIhtx4P/x/Mf1mSwg1YsBvUnmVdEuge4tMGoRMrFKXCjAa7qpcKhmrqYYuPBSkKHA==\\\"}\"\n    }\n  },\n  \"features\": {\n    \"rooms\": \"SEA{\\\"m\\\":{\\\"c\\\":\\\"*\\\",\\\"w\\\":{\\\"*\\\":\\\"rooms\\\",\\\"+\\\":\\\"*\\\"}},\\\"s\\\":\\\"hh9oHy+VE+5oQ7qiF/Qd8ic4MoqKENivVJj/jOxFnxSz7c1NIJ9m1bUgpcv0d45h/kbUbE4DMoCpmZ+eVHtKOw==\\\"}\",\n    \"space\": \"SEA{\\\"m\\\":{\\\"c\\\":\\\"*\\\",\\\"w\\\":{\\\"*\\\":\\\"space\\\",\\\"+\\\":\\\"*\\\"}},\\\"s\\\":\\\"+v1Ytw+DF8d9yQNmbiGVj+C1aBRAj/x6h6bJSqQm+yR/YlpXIfIM3v7AROKI1gSzz5GvuIO7BCyq2BzjW03row==\\\"}\",\n    \"posts\": \"SEA{\\\"m\\\":{\\\"c\\\":\\\"*\\\",\\\"w\\\":{\\\"*\\\":\\\"posts\\\",\\\"+\\\":\\\"*\\\"}},\\\"s\\\":\\\"Y5d/l9oqsOzUTKgLZtPCFqj8+JBtvJvMXb488QXWsFxeFS5Bz4Yt6Cafa6HWtr25YPMfnAzoljB6i/MPmtykFA==\\\"}\",\n    \"chat\": \"SEA{\\\"m\\\":{\\\"c\\\":\\\"*\\\",\\\"w\\\":{\\\"*\\\":\\\"chat\\\",\\\"+\\\":\\\"*\\\"}},\\\"s\\\":\\\"bjQq/OOWUR+Fii3QOrYyAQkpAfrWdb5Qpiex1LLP/g4uGGHk7NFh/whaRQyCGPec/by1MB3r/+YKIL1pOIc1Hg==\\\"}\",\n    \"dict\": \"SEA{\\\"m\\\":{\\\"c\\\":\\\"*\\\",\\\"w\\\":{\\\"*\\\":\\\"dict\\\",\\\"+\\\":\\\"*\\\"}},\\\"s\\\":\\\"GlbQNefEQasFo2MRjVqcVidDDMRsYwSLT+nbkh0QX6Ndy6hn+Mma8GveKey8XwHnVJOPvxlEEd7285707ET4UQ==\\\"}\"\n  }\n}","/**\n * @module Room\n */\n\nimport {\n  SEA,\n  useGun2,\n  gun,\n  useGun,\n  generateCerts,\n  useUser,\n  user,\n  hashObj,\n  safeJSONParse,\n} from \"..\";\nimport { rootRoom } from \"./rootRoom\";\nimport { reactive, computed, ref, watchEffect } from \"vue\";\n\nexport const currentRoom = reactive({\n  pub: rootRoom.pub,\n  isRoot: computed(() => currentRoom.pub == rootRoom.pub),\n  hosts: {},\n  features: {},\n  profile: {},\n});\n\nwatchEffect(() => {\n  const gun = useGun();\n\n  if (currentRoom.pub == rootRoom.pub) {\n    currentRoom.hosts = rootRoom.hosts;\n    currentRoom.features = rootRoom.features;\n  } else {\n    currentRoom.features = {};\n    currentRoom.hosts = {};\n    gun\n      .user(currentRoom.pub)\n      .get(\"hosts\")\n      .map()\n      .once((d, k) => {\n        delete d._;\n        currentRoom.hosts[k] = d;\n      });\n    gun\n      .user(currentRoom.pub)\n      .get(\"features\")\n      .map()\n      .once((d, k) => {\n        currentRoom.features[k] = d;\n      });\n  }\n});\n\n\n/**\n * Reactive room controls\n * @returns {useRoom}\n */\n\nexport function useRoom(pub = currentRoom.pub) {\n  const room = reactive({\n    pub,\n    isRoot: pub != rootRoom.pub,\n    hosts: {},\n    features: {},\n    profile: {},\n  });\n\n  const gun = useGun();\n  gun\n    .user(pub)\n    .get(\"profile\")\n    .map()\n    .on((d, k) => {\n      room.profile[k] = d;\n    });\n  gun\n    .user(pub)\n    .get(\"hosts\")\n    .map()\n    .once((d, k) => {\n      if (d) delete d._;\n      room.hosts[k] = d;\n    });\n  gun\n    .user(pub)\n    .get(\"features\")\n    .map()\n    .once((d, k) => {\n      room.features[k] = d;\n    });\n\n  return {\n    room,\n    submitRoom,\n    enterRoom,\n    createRoom,\n    leaveRoom,\n    updateRoomProfile,\n  };\n}\n\nexport function useRooms() {\n  const rooms = computed(() => {\n    return listPersonal(\"rooms\", currentRoom.pub);\n  });\n  return { rooms, createRoom };\n}\n\n/**\n * Update a profile field of a room\n * @param {String} field parameter to write to\n * @param {String} content\n */\n\nexport function updateRoomProfile(field, content) {\n  const gun = useGun();\n  const { user } = useUser();\n  let certificate = currentRoom.hosts?.[user.pub]?.profile;\n  gun\n    .user(currentRoom.pub)\n    .get(\"profile\")\n    .get(field)\n    .put(content, null, { opt: { cert: certificate } });\n}\n\n/**\n * Create a new room inside the current room\n */\n\nexport async function createRoom({ pair, name } = {}) {\n  const { user } = useUser();\n  // if (!pair) pair = await SEA.pair();\n  if (!pair) return;\n\n  const certs = await generateCerts({\n    pair,\n    list: [\n      { tag: \"profile\", users: [user.pub] },\n      { tag: \"features\", users: [user.pub] },\n      { tag: \"hosts\", users: [user.pub] },\n    ],\n  });\n  const features = await generateCerts({\n    pair,\n    list: [\n      { tag: \"rooms\", personal: true },\n      { tag: \"space\", personal: true },\n      { tag: \"posts\", personal: true },\n      { tag: \"chat\", personal: true },\n      { tag: \"dict\", personal: true },\n    ],\n  });\n\n  const enc = await SEA.encrypt(pair, user.pair());\n  const dec = await SEA.decrypt(enc, user.pair());\n\n  console.log(\n    \"COPY THIS ROOM INFO TO USE IT AS A ROOT\",\n    {\n      pub: dec.pub,\n      hosts: { [user.pub]: { enc, ...certs } },\n      features,\n    },\n    \"STORE THIS KEY PAIR IN A SAFE PLACE\",\n    dec\n  );\n\n  const gun = useGun();\n  gun.user().get(\"safe\").get(\"rooms\").get(dec.pub).put(enc);\n\n  gun\n    .user(currentRoom.pub)\n    .get(\"rooms\")\n    .get(`${dec.pub}@${user.pub}`)\n    .put(true, null, { opt: { cert: currentRoom?.features?.rooms } });\n\n  const roomDb = gun.user(dec.pub);\n  roomDb\n    .get(\"hosts\")\n    .get(user.pub)\n    .put(\n      {\n        enc,\n        ...certs,\n      },\n      null,\n      { opt: { cert: certs.hosts } }\n    );\n  roomDb.get(\"features\").put(features, null, { opt: { cert: certs.features } });\n\n  if (name) {\n    roomDb.get(\"profile\").put({ name }, null, { opt: { cert: certs.profile } });\n  }\n\n  // enterRoom(pair.pub);\n}\n\nexport async function recreateRoom(enc) {\n  const dec = await SEA.decrypt(enc, user.pair());\n  createRoom({\n    pair: dec,\n  });\n}\n\nexport async function submitRoom(pub) {\n  const gun = useGun();\n  const already = await gun\n    .user(currentRoom.pub)\n    .get(\"rooms\")\n    .get(`${pub}@${user.pub}`)\n    .then();\n\n  gun\n    .user(currentRoom.pub)\n    .get(\"rooms\")\n    .get(`${pub}@${user.pub}`)\n    .put(!already, null, { opt: { cert: currentRoom.features?.rooms } });\n}\n\nexport function joinRoom() {\n  const gun = useGun();\n  gun\n    .user(currentRoom.pub)\n    .get(\"space\")\n    .get(user.pub)\n    .put(JSON.stringify({ x: Math.random(), y: Math.random() }), null, {\n      opt: { cert: currentRoom.features?.space },\n    });\n}\n\n/**\n * The right way to come inside a room\n * @param {String} pub\n */\n\nexport function enterRoom(pub) {\n  currentRoom.pub = pub;\n}\n\n/**\n * Leave the room\n */\n\nexport function leaveRoom() {\n  currentRoom.pub = rootRoom.pub;\n}\n\nexport async function addPersonal({\n  tag,\n  key,\n  text,\n  pub = currentRoom.pub,\n  cert,\n} = {}) {\n  if (!cert) cert = await gun.user(pub).get(\"features\").get(tag).then();\n  if (!cert) {\n    cert = currentRoom.features?.[`${tag}`];\n  }\n  if (!cert && pub != user.pub) {\n    console.log(\"No certificate found\");\n    return;\n  }\n  gun\n    .user(pub)\n    .get(`${tag}`)\n    .get(`${key}@${user.pub}`)\n    .put(text, null, { opt: { cert } });\n}\n\nexport function listPersonal(tag, pub = currentRoom.pub) {\n  const gun = useGun();\n  const records = reactive({});\n  gun\n    .user(pub)\n    .get(`${tag}`)\n    .map()\n    .on(function (data, key) {\n      let k = key.substring(0, 87);\n      records[k] = records[k] || {};\n      records[k][key.substring(88)] = data;\n    });\n  return records;\n}\n\nexport async function addHashedPersonal(tag, obj, pub = currentRoom.pub, cert) {\n  if (!cert) cert = await gun.get(`~${pub}`).get(\"features\").get(tag).then();\n  if (!cert && pub == rootRoom.pub) {\n    cert = rootRoom.features?.[`#${tag}`];\n  }\n  if (!cert && pub != user.pub) {\n    console.log(\"No certificate found\");\n    return;\n  }\n  const { hashed, hash } = await hashObj(obj);\n  gun\n    .get(`~${pub}`)\n    .get(`#${tag}`)\n    .get(`${hash}@${user.pub}`)\n    .put(hashed, null, { opt: { cert } });\n}\n\nexport function getHashedPersonal(tag, hash, pub = currentRoom.pub) {\n  const record = reactive({});\n  gun\n    .get(`~${pub}`)\n    .get(`#${tag}`)\n    .map()\n    .once(function (data, key) {\n      if (key.includes(hash)) {\n        record.hash = hash;\n        record.tag = tag;\n        record.data = safeJSONParse(data);\n        record.authors = record.authors || {};\n        record.authors[key.slice(-87)] = true;\n      }\n    });\n  return { record };\n}\n","/**\n * Worker wrapper for heavy functions\n * @module useWorker\n */\n\n/**\n * Example sorter function for a dated list object\n * @param {Object} e - the worker post event with a `data` object with a list of records to sort by the date keys\n */\nfunction sortByDate(e) {\n  const arr = Object.entries(e.data);\n  let sorted = arr.sort((a, b) => {\n    if (!a || !b) return 0;\n    let timeA = Date.parse(a[0]);\n    let timeB = Date.parse(b[0]);\n    return timeB - timeA;\n  });\n  postMessage({ sorted, count: arr.length });\n}\n\n// https://vitejs.dev/guide/features.html#web-workers\n\n/**\n * Create a new worker for a function\n * It should contain a `postMessage` method to reply to any incoming `postMessage` from the main script\n * @param {Function} funcObj\n */\n\nexport const newWorker = function (funcObj) {\n  // Build a worker from an anonymous function body\n  var blobURL = URL.createObjectURL(\n      new Blob([\"onmessage=\", funcObj.toString()], {\n        type: \"application/javascript\",\n      })\n    ),\n    worker = new Worker(blobURL);\n\n  // Won't be needing this anymore\n  URL.revokeObjectURL(blobURL);\n\n  return worker;\n};\n\nexport const sortDate = newWorker(sortByDate);\n","/**\n * @module Dictionary\n */\n\nimport Fuse from \"fuse.js\";\nimport { ref, reactive, computed, watch } from 'vue'\nimport { useStorage } from '@vueuse/core';\n\nimport { useGun, currentRoom, hashText, useUser, useColor, hashObj } from '..';\n\n\nexport const dictRecord = reactive({\n  word: null,\n  def: null\n})\n\nexport const dictLang = useStorage('dict-lang', 'en')\n\nwatch(dictRecord, () => {\n  if (dictRecord.word && dictRecord.def) {\n    addRecord(dictRecord)\n  }\n})\n\n/**\n * Use filtrable words list\n * @returns {useWords}\n */\n\nexport function useWords() {\n  const gun = useGun()\n  const { user } = useUser()\n\n  const input = ref('')\n  const word = computed(() => letterFilter(input.value))\n\n  async function addWord() {\n    const hash = await hashText(word.value)\n    gun.get('dict').get('#word').get(hash).put(word.value)\n    dictRecord.word = hash\n    // gun\n    //   .user(currentRoom.pub)\n    //   .get('dict')\n    //   .get(`${hash}@${user.pub}`)\n    //   .put(true, null, { opt: { cert: currentRoom.features?.dict } });\n    input.value = ''\n  }\n\n  const linked = reactive({})\n\n  gun.user(currentRoom.pub).get('dict').map().on(async (d, k) => {\n    if (!d) return\n    let hash = k.slice(0, 44);\n    let defHash = k.slice(45, 89);\n    let def = await gun.get('dict').get('#def').get(defHash).then()\n    if (!def) return\n    try {\n      def = JSON.parse(def)\n    } catch (e) {\n      console.log(e, def)\n      return\n    }\n    if (def?.lang != dictLang.value) return\n    linked[hash] = linked[hash] || await gun.get('dict').get('#word').get(hash).then()\n  })\n\n  const words = reactive({})\n\n  gun.get('dict').get('#word').map().once((d, k) => {\n    if (d.includes(' ')) return\n    words[k] = d\n  })\n\n  const fuse = computed(() => {\n    let arr = Object.entries(words).map(entry => {\n      return { text: entry[1], hash: entry[0] }\n    })\n    return new Fuse(arr, {\n      keys: ['text'],\n      includeScore: true\n    })\n  })\n\n  const found = computed(() => fuse.value.search(input.value))\n\n  return { input, found, words, linked, word, addWord }\n}\n\n\n\n\nexport function useWord(hash) {\n  const gun = useGun()\n\n  const word = ref()\n\n  gun.get('dict').get('#word').get(hash).once((d, k) => {\n    word.value = letterFilter(d)\n  })\n  return { word }\n}\n\n\n/**\n * Dictionary definitions browser\n * @returns {useDefs}\n */\n\nexport function useDefs() {\n  const gun = useGun()\n\n  const def = reactive({\n    text: '',\n    lang: dictLang,\n    part: 'noun'\n  })\n\n  async function addDef() {\n    const { hash, hashed } = await hashObj(def)\n    gun.get('dict').get('#def').get(hash).put(hashed)\n    dictRecord.def = hash\n    def.text = ''\n    def.part = null\n  }\n\n  const linked = reactive({})\n\n  gun.user(currentRoom.pub).get('dict').map().on(async (d, k) => {\n    if (!d) return\n\n    let hash = k.slice(45, 89);\n    let record = await gun.get('dict').get('#def').get(hash).then()\n    if (!record) return\n    try {\n      record = JSON.parse(record)\n      if (record?.lang != dictLang.value) return\n      linked[hash] = linked[hash] || record\n    } catch (e) {\n      console.log(e, record)\n    }\n\n  })\n\n\n  const defs = reactive({})\n\n  gun.get('dict').get('#def').map().once((d, k) => {\n    defs[k] = JSON.parse(d)\n  })\n\n  const fuse = computed(() => {\n    let defList = []\n    for (let hash in defs) {\n      defList.push({ hash, ...defs[hash] })\n    }\n    return new Fuse(defList, {\n      keys: ['text'],\n      includeScore: true\n    })\n  })\n\n  const found = computed(() => fuse.value.search(def.text))\n\n  return { def, addDef, defs, found, linked }\n}\n\n\n\nasync function addRecord({ word, def } = {}) {\n\n  const gun = useGun()\n  const { user } = useUser();\n  let already = await gun\n    .user(currentRoom.pub)\n    .get('dict')\n    .get(`${word}:${def}@${user.pub}`).then()\n\n  gun\n    .user(currentRoom.pub)\n    .get('dict')\n    .get(`${word}:${def}@${user.pub}`)\n    .put(!already, null, { opt: { cert: currentRoom.features?.dict } });\n  dictRecord.word = null\n  dictRecord.def = null\n}\n\nexport function useDictRecordsFor(hash) {\n  const gun = useGun()\n  const links = reactive({})\n  gun\n    .user(currentRoom.pub)\n    .get('dict')\n    .map()\n    .on((data, key) => {\n      let index = key.indexOf(hash);\n      if (index == -1) return;\n      const { from, to, author } = parseHashLink(key)\n      let linked = from == hash ? to : from\n\n      links[linked] = links[linked] || {}\n      if (data) {\n        links[linked][author] = data\n      } else {\n        delete links?.[linked]?.[author]\n        if (Object.keys(links?.[linked]).length == 0) {\n          delete links?.[linked]\n        }\n      }\n    })\n  return links\n}\n\nexport function useDictRecordsBy(pub) {\n  const gun = useGun()\n  const records = reactive({})\n  gun\n    .user(currentRoom.pub)\n    .get('dict')\n    .map()\n    .on((data, key) => {\n      const { from, to, author } = parseHashLink(key)\n      if (author != pub) return\n\n      records[from] = records[from] || {}\n      if (data) {\n        records[from][to] = data\n      } else {\n        delete records?.[from]?.[to]\n        if (Object.keys(records[from]).length == 0) {\n          delete records?.[from]\n        }\n      }\n    })\n  return records\n}\n\nexport function useDictAuthors() {\n  const gun = useGun()\n  const authors = reactive({})\n  gun\n    .user(currentRoom.pub)\n    .get('dict')\n    .map()\n    .once(async (data, key) => {\n      const { from, to, author } = parseHashLink(key)\n      authors[author] = authors[author] || {}\n      authors[author][from] = authors[author][from] || {}\n      authors[author][from][to] = data\n    })\n  return authors\n}\n\nexport function useDictLangs() {\n  const gun = useGun()\n  const langs = reactive({})\n  gun\n    .user(currentRoom.pub)\n    .get('dict')\n    .map()\n    .once(async (data, key) => {\n\n\n      let hash = key.slice(45, 89);\n      let def = await gun.get('dict').get('#def').get(hash).then()\n      if (!def) return\n      try {\n        def = JSON.parse(def)\n      } catch (e) {\n        console.log(def, e)\n      }\n      if (!def?.lang) return\n      langs[def?.lang] = langs[def?.lang] || 0\n      langs[def?.lang]++\n    })\n  return langs\n}\n\n\nexport function parseHashLink(link) {\n  return {\n    from: link.slice(0, 44),\n    to: link.slice(45, 89),\n    author: link.slice(-87),\n  }\n}\n\n\nexport function renderStress({ text, stress } = {}) {\n  const stressMark = '&#x301;'\n  if (!text) return;\n  let str = text.slice(0, stress + 1) + stressMark + text.slice(stress + 1);\n  return str[0].toUpperCase() + str.slice(1);\n}\n\nexport function letterFilter(str) {\n  if (!str) return ''\n  let clean = str.toLowerCase().matchAll(/\\p{L}/gu, '')\n  return Array.from(clean).map(el => el[0]).join('')\n}"],"names":["Buffer"],"mappings":"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"}