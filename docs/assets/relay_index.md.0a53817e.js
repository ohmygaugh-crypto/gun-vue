import{_ as e,c as n,o as a,a as o}from"./app.1ef1804f.js";var t="/docs/media/svg/relay.svg";const k=`{"title":"Relay","description":"","frontmatter":{},"headers":[{"level":2,"title":"Relay","slug":"relay"},{"level":3,"title":"A simple Gun DB relay peer","slug":"a-simple-gun-db-relay-peer"},{"level":3,"title":"Run in a cloud for free","slug":"run-in-a-cloud-for-free"},{"level":3,"title":"Run on any device","slug":"run-on-any-device"},{"level":3,"title":"How to use","slug":"how-to-use"},{"level":3,"title":"You've got your Gun relay up and running!","slug":"you-ve-got-your-gun-relay-up-and-running"},{"level":3,"title":"Options","slug":"options"}],"relativePath":"relay/index.md"}`,r={},s=o('<p><img src="'+t+`" alt=""></p><h2 id="relay" tabindex="-1">Relay <a class="header-anchor" href="#relay" aria-hidden="true">#</a></h2><h3 id="a-simple-gun-db-relay-peer" tabindex="-1">A simple Gun DB relay peer <a class="header-anchor" href="#a-simple-gun-db-relay-peer" aria-hidden="true">#</a></h3><p>A one liner gun js server easy to run on any free tier nodejs cloud like <strong><a href="https://glitch.com/~etogun" target="_blank" rel="noopener noreferrer">Glitch.com</a></strong>, <a href="http://www.heroku.com" target="_blank" rel="noopener noreferrer">www.heroku.com</a> or others, on a private VPS server or any other device like RaspberryPi or simply an Android phone.</p><h3 id="run-in-a-cloud-for-free" tabindex="-1">Run in a cloud for free <a class="header-anchor" href="#run-in-a-cloud-for-free" aria-hidden="true">#</a></h3><p>There&#39;s a plenty of cloud providers with free tiers suitable to the needs of running a Gun relay node.</p><ul><li><strong><a href="https://glitch.com/~etogun" target="_blank" rel="noopener noreferrer">Remix a Glitch project now</a></strong></li></ul><blockquote><p>More links to be added here later.</p></blockquote><h3 id="run-on-any-device" tabindex="-1">Run on any device <a class="header-anchor" href="#run-on-any-device" aria-hidden="true">#</a></h3><p>All you need to run a Gun relay is a <code>NodeJS &gt;=16.x</code> environment with <code>npm</code> package manager to import and run the script. It&#39;s already up and running in major clouds, but you may need to <strong><a href="https://nodejs.org/en/" target="_blank" rel="noopener noreferrer">install NodeJS</a></strong> on your computer, or <strong><a href="https://dev.to/bogdaaamn/run-your-nodejs-application-on-a-headless-raspberry-pi-4jnn" target="_blank" rel="noopener noreferrer">configure a RaspberryPi</a></strong>.</p><ul><li><p><strong>Computer</strong></p><p>Open your terminal and check the version of Node with <code>node -v</code>. You may need to <strong><a href="https://nodejs.org/en/" target="_blank" rel="noopener noreferrer">Install NodeJS</a></strong> or <a href="https://github.com/nvm-sh/nvm" target="_blank" rel="noopener noreferrer">update it</a>.</p></li><li><p><strong>Android device</strong></p><p>You can easily run NodeJS apps on an Android phone with <strong><a href="https://f-droid.org/en/packages/com.termux/" target="_blank" rel="noopener noreferrer">Termux</a></strong> app. Consider installing it from <strong><a href="https://f-droid.org" target="_blank" rel="noopener noreferrer">F-Droid</a></strong> to get the fresh and stable version.</p></li><li><p><strong>RaspberryPi</strong></p><p>Flash your image and <strong><a href="https://dev.to/bogdaaamn/run-your-nodejs-application-on-a-headless-raspberry-pi-4jnn" target="_blank" rel="noopener noreferrer">configure your Pi</a></strong> to run a local Gun server</p></li></ul><h3 id="how-to-use" tabindex="-1">How to use <a class="header-anchor" href="#how-to-use" aria-hidden="true">#</a></h3><ol><li>Run this in the command line and follow the steps to create a new NodeJS project</li></ol><div class="language-shell"><pre><code><span class="token function">npm</span> init
</code></pre></div><ol start="2"><li>Then install the package as a dependency</li></ol><div class="language-shell"><pre><code><span class="token function">npm</span> i @gun-vue/relay
</code></pre></div><ol start="3"><li>Add this line to the generated <code>package.json</code> file</li></ol><div class="language-json"><pre><code><span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node start.js&quot;</span>
  <span class="token punctuation">}</span>
</code></pre></div><ol start="3"><li>Create a <code>start.js</code> script and edit it as follows:</li><li>Import the <code>relay</code> and initiate it.</li></ol><div class="language-js"><pre><code><span class="token keyword">import</span> relay <span class="token keyword">from</span> <span class="token string">&quot;@gun-vue/relay&quot;</span><span class="token punctuation">;</span>

relay<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ol start="5"><li>Save the <code>start.js</code> and run it.</li></ol><div class="language-shell"><pre><code><span class="token function">node</span> start.js
</code></pre></div><p>You&#39;ll see the message from the relay server running with it&#39;s address to use as a Gun peer in your app:</p><div class="language-"><pre><code>Hello wonderful person! :) Thanks for using GUN, please ask for help on http://chat.gun.eco if anything takes you longer than 5min to figure out!
AXE relay enabled!
Server started at http://localhost:4200/gun
Multicast on 233.255.255.255:8765
</code></pre></div><h3 id="you-ve-got-your-gun-relay-up-and-running" tabindex="-1">You&#39;ve got your Gun relay up and running! <a class="header-anchor" href="#you-ve-got-your-gun-relay-up-and-running" aria-hidden="true">#</a></h3><h3 id="options" tabindex="-1">Options <a class="header-anchor" href="#options" aria-hidden="true">#</a></h3><p>You can use customize your server with an options object:</p><div class="language-js"><pre><code>relay<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span> <span class="token comment">// A host name used by the server to publish it&#39;s state to the graph. Set your peer URL without a protocol, like  &#39;relay.some-site.com&#39;</span>
  <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">4200</span><span class="token punctuation">,</span> <span class="token comment">// Gun server port. You may use a more standard 8080.</span>
  <span class="token literal-property property">store</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// Put true if you want to have Gun store data on disk.</span>
  <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&quot;public&quot;</span><span class="token punctuation">,</span> <span class="token comment">// A public directory to expose your app with the build in express server. Insert a path like &#39;../demo/dist&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,28),p=[s];function l(i,u,c,d,h,g){return a(),n("div",null,p)}var f=e(r,[["render",l]]);export{k as __pageData,f as default};
