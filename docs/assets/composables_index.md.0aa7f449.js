import{_ as a,c as t,o as e,a as d}from"./app.76cb9d3a.js";var c="/docs/media/svg/composables.svg";const m='{"title":"Composables","description":"","frontmatter":{},"headers":[{"level":2,"title":"Composables","slug":"composables"},{"level":3,"title":"How to install?","slug":"how-to-install"},{"level":3,"title":"How to use?","slug":"how-to-use"},{"level":2,"title":"Modules","slug":"modules"},{"level":2,"title":"useCrypto","slug":"usecrypto"},{"level":3,"title":"encFor(data, sender, receiver) \u21D2","slug":"encfor-data-sender-receiver-\u21D2-string"},{"level":3,"title":"decFrom(data, sender, receiver) \u21D2","slug":"decfrom-data-sender-receiver-\u21D2-string"},{"level":3,"title":"getShortHash(text, seed) \u21D2","slug":"getshorthash-text-seed-\u21D2-string"},{"level":3,"title":"Entity :","slug":"entity-object"},{"level":2,"title":"useFile","slug":"usefile"},{"level":3,"title":"downloadFile(text, fileType, fileName)","slug":"downloadfile-text-filetype-filename"},{"level":3,"title":"uploadText(event, callback)","slug":"uploadtext-event-callback"},{"level":3,"title":"usePictureUpload(Options) \u21D2","slug":"usepictureupload-options-\u21D2-pictureuploaddata"},{"level":3,"title":"PictureUploadOptions :","slug":"pictureuploadoptions-object"},{"level":3,"title":"PictureUploadData :","slug":"pictureuploaddata-object"},{"level":2,"title":"useMd","slug":"usemd"},{"level":3,"title":"createMd(md) \u21D2","slug":"createmd-md-\u21D2"},{"level":3,"title":"parseMd(file) \u21D2","slug":"parsemd-file-\u21D2-md"},{"level":3,"title":"Md :","slug":"md-object"},{"level":2,"title":"useZip","slug":"usezip"},{"level":3,"title":"useZip() \u21D2","slug":"usezip-\u21D2-usezip"},{"level":3,"title":"useZip","slug":"usezip-1"},{"level":2,"title":"useGun","slug":"usegun"},{"level":3,"title":"gun","slug":"gun"},{"level":3,"title":"gun2","slug":"gun2"},{"level":3,"title":"useGun(peer) \u21D2","slug":"usegun-peer-\u21D2-gun"},{"level":3,"title":"useGun2(peer) \u21D2","slug":"usegun2-peer-\u21D2-gun"},{"level":3,"title":"SEA","slug":"sea"},{"level":3,"title":"soul()","slug":"soul"},{"level":3,"title":"genUUID()","slug":"genuuid"},{"level":2,"title":"useRelay","slug":"userelay"},{"level":3,"title":"useRelay(host) \u21D2","slug":"userelay-host-\u21D2-relay"},{"level":3,"title":"Relay :","slug":"relay-reactive"},{"level":2,"title":"Post","slug":"post"},{"level":3,"title":"usePost(options) \u21D2","slug":"usepost-options-\u21D2-post"},{"level":3,"title":"downloadPost(post)","slug":"downloadpost-post"},{"level":3,"title":"parsePost(data) \u21D2","slug":"parsepost-data-\u21D2-object"},{"level":3,"title":"addPost(tag, post)","slug":"addpost-tag-post"},{"level":3,"title":"Post :","slug":"post-object"},{"level":2,"title":"Feed","slug":"feed"},{"level":3,"title":"useFeed(tag, options) \u21D2","slug":"usefeed-tag-options-\u21D2-usefeed"},{"level":3,"title":"downloadFeed(tag, posts)","slug":"downloadfeed-tag-posts"},{"level":3,"title":"uploadFeed(tag, files)","slug":"uploadfeed-tag-files"},{"level":3,"title":"useFeed","slug":"usefeed"},{"level":2,"title":"Feeds","slug":"feeds"},{"level":3,"title":"useFeeds() \u21D2","slug":"usefeeds-\u21D2-usefeeds"},{"level":3,"title":"useFeeds","slug":"usefeeds"},{"level":2,"title":"Room","slug":"room"},{"level":3,"title":"useRoom() \u21D2","slug":"useroom-\u21D2-useroom"},{"level":3,"title":"updateRoomProfile(field, content)","slug":"updateroomprofile-field-content"},{"level":3,"title":"createRoom()","slug":"createroom"},{"level":3,"title":"enterRoom(pub)","slug":"enterroom-pub"},{"level":3,"title":"leaveRoom()","slug":"leaveroom"},{"level":3,"title":"listRoomItems(tag, pub) \u21D2","slug":"listroomitems-tag-pub-\u21D2-reactive"},{"level":2,"title":"useSpace","slug":"usespace"},{"level":3,"title":"useSpace(spaceName) \u21D2","slug":"usespace-spacename-\u21D2-usespace"},{"level":3,"title":"startTime","slug":"starttime"},{"level":3,"title":"useSpace :","slug":"usespace-object"},{"level":2,"title":"useColor","slug":"usecolor"},{"level":3,"title":"useColor(palette) \u21D2","slug":"usecolor-palette-\u21D2-colorhash"},{"level":2,"title":"useMouse","slug":"usemouse"},{"level":3,"title":"useSvgMouse() \u21D2","slug":"usesvgmouse-\u21D2-usemouse"},{"level":3,"title":"useMouse :","slug":"usemouse-object"},{"level":3,"title":"Mouse :","slug":"mouse-reactive"},{"level":2,"title":"useMates","slug":"usemates"},{"level":3,"title":"useMates(pub) \u21D2","slug":"usemates-pub-\u21D2-usemates"},{"level":3,"title":"getFirstEmoji(text) \u21D2","slug":"getfirstemoji-text-\u21D2-string"},{"level":3,"title":"isEmoji(text) \u21D2","slug":"isemoji-text-\u21D2-boolean"},{"level":3,"title":"useMate(pub) \u21D2","slug":"usemate-pub-\u21D2-usemate"},{"level":3,"title":"useMates :","slug":"usemates-reactive"},{"level":3,"title":"useMate :","slug":"usemate-object"},{"level":2,"title":"usePass","slug":"usepass"},{"level":3,"title":"usePass() \u21D2","slug":"usepass-\u21D2-usepass"},{"level":3,"title":"Pass :","slug":"pass-reactive"},{"level":3,"title":"usePass :","slug":"usepass-object"},{"level":2,"title":"useUser","slug":"useuser"},{"level":3,"title":"useAccount(pub) \u21D2","slug":"useaccount-pub-\u21D2-account"},{"level":3,"title":"useUser() \u21D2","slug":"useuser-\u21D2-useuser"},{"level":3,"title":"auth(pair)","slug":"auth-pair"},{"level":3,"title":"leave()","slug":"leave"},{"level":3,"title":"addProfileField(name)","slug":"addprofilefield-name"},{"level":3,"title":"updateProfile(field, data)","slug":"updateprofile-field-data"},{"level":3,"title":"isPair(pair) \u21D2","slug":"ispair-pair-\u21D2-boolean"},{"level":3,"title":"Account :","slug":"account-object"},{"level":3,"title":"User :","slug":"user-object"},{"level":3,"title":"useUser","slug":"useuser-1"}],"relativePath":"composables/index.md","lastUpdated":1644187805492}',s={},n=d('<p data-v-0534c159><img src="'+c+`" alt="" data-v-0534c159></p><h2 id="composables" tabindex="-1" data-v-0534c159>Composables <a class="header-anchor" href="#composables" aria-hidden="true" data-v-0534c159>#</a></h2><p data-v-0534c159>GunVue is a collection of utility functions based on <a href="https://v3.vuejs.org/guide/composition-api-introduction.html" target="_blank" rel="noopener noreferrer" data-v-0534c159>Vue 3 Composition API</a>. We assume you are already familiar with the basic ideas of Composition API and <a href="https://learnvue.co/2021/05/explaining-the-new-script-setup-type-in-vue-3-major-takeaways-from-the-rfc/#using-script-setup-with-a-normal-script" target="_blank" rel="noopener noreferrer" data-v-0534c159>script setup</a> before you continue.</p><h3 id="how-to-install" tabindex="-1" data-v-0534c159>How to install? <a class="header-anchor" href="#how-to-install" aria-hidden="true" data-v-0534c159>#</a></h3><div class="language-shell" data-v-0534c159><pre data-v-0534c159><code data-v-0534c159><span class="token function" data-v-0534c159>pnpm</span> i @gun-vue/composables
</code></pre></div><h3 id="how-to-use" tabindex="-1" data-v-0534c159>How to use? <a class="header-anchor" href="#how-to-use" aria-hidden="true" data-v-0534c159>#</a></h3><div class="language-js" data-v-0534c159><pre data-v-0534c159><code data-v-0534c159><span class="token keyword" data-v-0534c159>import</span> <span class="token punctuation" data-v-0534c159>{</span> useUser <span class="token punctuation" data-v-0534c159>}</span> <span class="token keyword" data-v-0534c159>from</span> <span class="token string" data-v-0534c159>&quot;@gun-vue/composables&quot;</span><span class="token punctuation" data-v-0534c159>;</span>

<span class="token keyword" data-v-0534c159>const</span> user <span class="token operator" data-v-0534c159>=</span> <span class="token function" data-v-0534c159>useUser</span><span class="token punctuation" data-v-0534c159>(</span><span class="token punctuation" data-v-0534c159>)</span><span class="token punctuation" data-v-0534c159>;</span>
</code></pre></div><h2 id="modules" tabindex="-1" data-v-0534c159>Modules <a class="header-anchor" href="#modules" aria-hidden="true" data-v-0534c159>#</a></h2><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Module</th><th data-v-0534c159>Description</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159><a href="#usecrypto" data-v-0534c159>useCrypto</a></td><td data-v-0534c159><p data-v-0534c159>SEA cryptography abstraction</p></td></tr><tr data-v-0534c159><td data-v-0534c159><a href="#usefile" data-v-0534c159>useFile</a></td><td data-v-0534c159><p data-v-0534c159>File handling functions</p></td></tr><tr data-v-0534c159><td data-v-0534c159><a href="#usemd" data-v-0534c159>useMd</a></td><td data-v-0534c159><p data-v-0534c159>Handle Markdown files</p></td></tr><tr data-v-0534c159><td data-v-0534c159><a href="#usezip" data-v-0534c159>useZip</a></td><td data-v-0534c159><p data-v-0534c159>Read and write zip files</p></td></tr><tr data-v-0534c159><td data-v-0534c159><a href="#usegun" data-v-0534c159>useGun</a></td><td data-v-0534c159><p data-v-0534c159>Gun DB initialization and basic methods</p></td></tr><tr data-v-0534c159><td data-v-0534c159><a href="#userelay" data-v-0534c159>useRelay</a></td><td data-v-0534c159><p data-v-0534c159>Relay connection management</p></td></tr><tr data-v-0534c159><td data-v-0534c159><a href="#post" data-v-0534c159>Post</a></td><td data-v-0534c159><p data-v-0534c159>Get and handle a particular post by it&#39;s tag and hash</p></td></tr><tr data-v-0534c159><td data-v-0534c159><a href="#feed" data-v-0534c159>Feed</a></td><td data-v-0534c159><p data-v-0534c159>Get and handle a particular post by it&#39;s tag and hash</p></td></tr><tr data-v-0534c159><td data-v-0534c159><a href="#feeds" data-v-0534c159>Feeds</a></td><td data-v-0534c159><p data-v-0534c159>Get and handle a particular post by it&#39;s tag and hash</p></td></tr><tr data-v-0534c159><td data-v-0534c159><a href="#room" data-v-0534c159>Room</a></td><td data-v-0534c159></td></tr><tr data-v-0534c159><td data-v-0534c159><a href="#usespace" data-v-0534c159>useSpace</a></td><td data-v-0534c159><p data-v-0534c159>A 2D-space</p></td></tr><tr data-v-0534c159><td data-v-0534c159><a href="#usecolor" data-v-0534c159>useColor</a></td><td data-v-0534c159><p data-v-0534c159>Deterministic colors derived from oub keys, hashes or any other string data</p></td></tr><tr data-v-0534c159><td data-v-0534c159><a href="#usemouse" data-v-0534c159>useMouse</a></td><td data-v-0534c159><p data-v-0534c159>Handle mouse movement inside an SVG</p></td></tr><tr data-v-0534c159><td data-v-0534c159><a href="#usemates" data-v-0534c159>useMates</a></td><td data-v-0534c159><p data-v-0534c159>Connections between accounts</p></td></tr><tr data-v-0534c159><td data-v-0534c159><a href="#usepass" data-v-0534c159>usePass</a></td><td data-v-0534c159><p data-v-0534c159>Manage user&#39;s password and credentials</p></td></tr><tr data-v-0534c159><td data-v-0534c159><a href="#useuser" data-v-0534c159>useUser</a></td><td data-v-0534c159><p data-v-0534c159>Basic user management</p></td></tr></tbody></table><p data-v-0534c159><a name="module_useCrypto" data-v-0534c159></a></p><h2 id="usecrypto" tabindex="-1" data-v-0534c159>useCrypto <a class="header-anchor" href="#usecrypto" aria-hidden="true" data-v-0534c159>#</a></h2><p data-v-0534c159>SEA cryptography abstraction</p><ul data-v-0534c159><li data-v-0534c159><a href="#module_useCrypto" data-v-0534c159>useCrypto</a><ul data-v-0534c159><li data-v-0534c159><em data-v-0534c159>static</em><ul data-v-0534c159><li data-v-0534c159><a href="#module_useCrypto.encFor" data-v-0534c159>.encFor(data, sender, receiver)</a> \u21D2 <code data-v-0534c159>String</code></li><li data-v-0534c159><a href="#module_useCrypto.decFrom" data-v-0534c159>.decFrom(data, sender, receiver)</a> \u21D2 <code data-v-0534c159>String</code></li><li data-v-0534c159><a href="#module_useCrypto.getShortHash" data-v-0534c159>.getShortHash(text, seed)</a> \u21D2 <code data-v-0534c159>String</code></li></ul></li><li data-v-0534c159><em data-v-0534c159>inner</em><ul data-v-0534c159><li data-v-0534c159><a href="#module_useCrypto..Entity" data-v-0534c159>~Entity</a> : <code data-v-0534c159>Object</code></li></ul></li></ul></li></ul><h3 id="encfor-data-sender-receiver-\u21D2-string" tabindex="-1" data-v-0534c159>encFor(data, sender, receiver) \u21D2 <code data-v-0534c159>String</code> <a class="header-anchor" href="#encfor-data-sender-receiver-\u21D2-string" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Encrypt data for one receiver entity</p><ol data-v-0534c159><li data-v-0534c159>Generates encryption secret using bob&#39;s epub and current user pair</li><li data-v-0534c159>Enctypts data with this secret</li></ol><p data-v-0534c159><strong data-v-0534c159>Returns</strong>: <code data-v-0534c159>String</code> - Encrypted data string to be sent</p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Param</th><th data-v-0534c159>Type</th><th data-v-0534c159>Description</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>data</td><td data-v-0534c159><code data-v-0534c159>String</code></td><td data-v-0534c159>Stringified data to be encrypted</td></tr><tr data-v-0534c159><td data-v-0534c159>sender</td><td data-v-0534c159><code data-v-0534c159>Entity</code></td><td data-v-0534c159>An object with <code data-v-0534c159>pub</code> and <code data-v-0534c159>epub</code> strings - the <a href="http://user.is" target="_blank" rel="noopener noreferrer" data-v-0534c159>user.is</a> object of the reciever&#39;s account</td></tr><tr data-v-0534c159><td data-v-0534c159>receiver</td><td data-v-0534c159><code data-v-0534c159>SEAPair</code></td><td data-v-0534c159>SEA Pair of the sender \u2013 <code data-v-0534c159>epriv</code> key will be used to encrypt the data</td></tr></tbody></table><h3 id="decfrom-data-sender-receiver-\u21D2-string" tabindex="-1" data-v-0534c159>decFrom(data, sender, receiver) \u21D2 <code data-v-0534c159>String</code> <a class="header-anchor" href="#decfrom-data-sender-receiver-\u21D2-string" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Decrypt a private message from an entity</p><ol data-v-0534c159><li data-v-0534c159>Generates secret using senders <code data-v-0534c159>epub</code> and current user pair</li><li data-v-0534c159>Decrypts the data with this secret</li></ol><p data-v-0534c159><strong data-v-0534c159>Returns</strong>: <code data-v-0534c159>String</code> - Decrypted data</p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Param</th><th data-v-0534c159>Type</th><th data-v-0534c159>Description</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>data</td><td data-v-0534c159><code data-v-0534c159>String</code></td><td data-v-0534c159>Encrypted private data</td></tr><tr data-v-0534c159><td data-v-0534c159>sender</td><td data-v-0534c159><code data-v-0534c159>Entity</code></td><td data-v-0534c159>An object with <code data-v-0534c159>pub</code> and <code data-v-0534c159>epub</code> strings - the <a href="http://user.is" target="_blank" rel="noopener noreferrer" data-v-0534c159>user.is</a> object of the sender&#39;s account</td></tr><tr data-v-0534c159><td data-v-0534c159>receiver</td><td data-v-0534c159><code data-v-0534c159>SEAPair</code></td><td data-v-0534c159>SEA Pair of the receiver \u2013 <code data-v-0534c159>epriv</code> key will be used to encrypt the data</td></tr></tbody></table><h3 id="getshorthash-text-seed-\u21D2-string" tabindex="-1" data-v-0534c159>getShortHash(text, seed) \u21D2 <code data-v-0534c159>String</code> <a class="header-anchor" href="#getshorthash-text-seed-\u21D2-string" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Calculate a hex hash for any string data</p><p data-v-0534c159><strong data-v-0534c159>Returns</strong>: <code data-v-0534c159>String</code> - The hex encoded SHA-1 hash</p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Param</th><th data-v-0534c159>Type</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>text</td><td data-v-0534c159><code data-v-0534c159>String</code></td></tr><tr data-v-0534c159><td data-v-0534c159>seed</td><td data-v-0534c159><code data-v-0534c159>String</code></td></tr></tbody></table><h3 id="entity-object" tabindex="-1" data-v-0534c159>Entity : <code data-v-0534c159>Object</code> <a class="header-anchor" href="#entity-object" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159><strong data-v-0534c159>Properties</strong></p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Name</th><th data-v-0534c159>Type</th><th data-v-0534c159>Description</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>pub</td><td data-v-0534c159><code data-v-0534c159>String</code></td><td data-v-0534c159>the public key</td></tr><tr data-v-0534c159><td data-v-0534c159>epub</td><td data-v-0534c159><code data-v-0534c159>String</code></td><td data-v-0534c159>the elliplic encryption epub</td></tr></tbody></table><hr data-v-0534c159><p data-v-0534c159><a name="module_useFile" data-v-0534c159></a></p><h2 id="usefile" tabindex="-1" data-v-0534c159>useFile <a class="header-anchor" href="#usefile" aria-hidden="true" data-v-0534c159>#</a></h2><p data-v-0534c159>File handling functions</p><ul data-v-0534c159><li data-v-0534c159><a href="#module_useFile" data-v-0534c159>useFile</a><ul data-v-0534c159><li data-v-0534c159><em data-v-0534c159>static</em><ul data-v-0534c159><li data-v-0534c159><a href="#module_useFile.downloadFile" data-v-0534c159>.downloadFile(text, fileType, fileName)</a></li><li data-v-0534c159><a href="#module_useFile.uploadText" data-v-0534c159>.uploadText(event, callback)</a></li><li data-v-0534c159><a href="#module_useFile.usePictureUpload" data-v-0534c159>.usePictureUpload(Options)</a> \u21D2 <code data-v-0534c159>PictureUploadData</code></li></ul></li><li data-v-0534c159><em data-v-0534c159>inner</em><ul data-v-0534c159><li data-v-0534c159><a href="#module_useFile..PictureUploadOptions" data-v-0534c159>~PictureUploadOptions</a> : <code data-v-0534c159>Object</code></li><li data-v-0534c159><a href="#module_useFile..PictureUploadData" data-v-0534c159>~PictureUploadData</a> : <code data-v-0534c159>Object</code></li></ul></li></ul></li></ul><h3 id="downloadfile-text-filetype-filename" tabindex="-1" data-v-0534c159>downloadFile(text, fileType, fileName) <a class="header-anchor" href="#downloadfile-text-filetype-filename" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>A method to download any text as a file</p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Param</th><th data-v-0534c159>Type</th><th data-v-0534c159>Description</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>text</td><td data-v-0534c159><code data-v-0534c159>String</code></td><td data-v-0534c159>the text to download</td></tr><tr data-v-0534c159><td data-v-0534c159>fileType</td><td data-v-0534c159><code data-v-0534c159>String</code></td><td data-v-0534c159>the file type like &quot;application/json&quot;</td></tr><tr data-v-0534c159><td data-v-0534c159>fileName</td><td data-v-0534c159><code data-v-0534c159>String</code></td><td data-v-0534c159>the full file name like &quot;myKey.json&quot;</td></tr></tbody></table><h3 id="uploadtext-event-callback" tabindex="-1" data-v-0534c159>uploadText(event, callback) <a class="header-anchor" href="#uploadtext-event-callback" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Upload and parse JSON keypair</p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Param</th><th data-v-0534c159>Type</th><th data-v-0534c159>Description</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>event</td><td data-v-0534c159><code data-v-0534c159>Event</code></td><td data-v-0534c159><code data-v-0534c159>$event</code> from the <code data-v-0534c159>@change</code> handler</td></tr><tr data-v-0534c159><td data-v-0534c159>callback</td><td data-v-0534c159><code data-v-0534c159>function</code></td><td data-v-0534c159>a function to handle the loaded file from the reader</td></tr></tbody></table><h3 id="usepictureupload-options-\u21D2-pictureuploaddata" tabindex="-1" data-v-0534c159>usePictureUpload(Options) \u21D2 <code data-v-0534c159>PictureUploadData</code> <a class="header-anchor" href="#usepictureupload-options-\u21D2-pictureuploaddata" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Process an uploaded picture by rendering in into a canvas with given size. Returns a base64 encoded image to be stored and displayed as <code data-v-0534c159>img.src</code></p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Param</th><th data-v-0534c159>Type</th><th data-v-0534c159>Description</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>Options</td><td data-v-0534c159><code data-v-0534c159>PictureUploadOptions</code></td><td data-v-0534c159>uploader options</td></tr></tbody></table><p data-v-0534c159><strong data-v-0534c159>Example</strong></p><div class="language-js" data-v-0534c159><pre data-v-0534c159><code data-v-0534c159><span class="token keyword" data-v-0534c159>const</span> src <span class="token operator" data-v-0534c159>=</span> <span class="token function" data-v-0534c159>ref</span><span class="token punctuation" data-v-0534c159>(</span><span class="token keyword" data-v-0534c159>null</span><span class="token punctuation" data-v-0534c159>)</span>

<span class="token keyword" data-v-0534c159>const</span> <span class="token punctuation" data-v-0534c159>{</span>state<span class="token punctuation" data-v-0534c159>,</span> handleUpload<span class="token punctuation" data-v-0534c159>}</span> <span class="token operator" data-v-0534c159>=</span> <span class="token function" data-v-0534c159>usePictureUpload</span><span class="token punctuation" data-v-0534c159>(</span><span class="token punctuation" data-v-0534c159>{</span>
 <span class="token literal-property property" data-v-0534c159>preserveRatio</span><span class="token operator" data-v-0534c159>:</span> <span class="token boolean" data-v-0534c159>true</span><span class="token punctuation" data-v-0534c159>,</span>
<span class="token punctuation" data-v-0534c159>}</span><span class="token punctuation" data-v-0534c159>)</span>

<span class="token function" data-v-0534c159>watch</span><span class="token punctuation" data-v-0534c159>(</span><span class="token punctuation" data-v-0534c159>(</span><span class="token punctuation" data-v-0534c159>)</span><span class="token operator" data-v-0534c159>=&gt;</span>state<span class="token punctuation" data-v-0534c159>.</span>output<span class="token punctuation" data-v-0534c159>,</span> <span class="token parameter" data-v-0534c159>file</span> <span class="token operator" data-v-0534c159>=&gt;</span> src<span class="token punctuation" data-v-0534c159>.</span>value <span class="token operator" data-v-0534c159>=</span> file<span class="token punctuation" data-v-0534c159>.</span>content<span class="token punctuation" data-v-0534c159>)</span>
</code></pre></div><h3 id="pictureuploadoptions-object" tabindex="-1" data-v-0534c159>PictureUploadOptions : <code data-v-0534c159>Object</code> <a class="header-anchor" href="#pictureuploadoptions-object" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159><strong data-v-0534c159>Properties</strong></p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Name</th><th data-v-0534c159>Type</th><th data-v-0534c159>Description</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>preserveRatio</td><td data-v-0534c159><code data-v-0534c159>Boolean</code></td><td data-v-0534c159>should we preserve the original picture aspect ratio? Default: <code data-v-0534c159>false</code></td></tr><tr data-v-0534c159><td data-v-0534c159>picSize</td><td data-v-0534c159><code data-v-0534c159>Number</code></td><td data-v-0534c159>width of the rendered picture</td></tr><tr data-v-0534c159><td data-v-0534c159>maxSize</td><td data-v-0534c159><code data-v-0534c159>Number</code></td><td data-v-0534c159>maximum size of an uploaded picture</td></tr></tbody></table><h3 id="pictureuploaddata-object" tabindex="-1" data-v-0534c159>PictureUploadData : <code data-v-0534c159>Object</code> <a class="header-anchor" href="#pictureuploaddata-object" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159><strong data-v-0534c159>Properties</strong></p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Name</th><th data-v-0534c159>Type</th><th data-v-0534c159>Description</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>state</td><td data-v-0534c159><code data-v-0534c159>reactive</code></td><td data-v-0534c159>a reactive object with the state of the upload</td></tr><tr data-v-0534c159><td data-v-0534c159>handleUpload</td><td data-v-0534c159><code data-v-0534c159>function</code></td><td data-v-0534c159>handler function to use with <code data-v-0534c159>@change=&quot;handleUpload&quot;</code> on an <code data-v-0534c159>&lt;input type=&quot;file&quot;&gt;</code> element</td></tr></tbody></table><hr data-v-0534c159><p data-v-0534c159><a name="module_useMd" data-v-0534c159></a></p><h2 id="usemd" tabindex="-1" data-v-0534c159>useMd <a class="header-anchor" href="#usemd" aria-hidden="true" data-v-0534c159>#</a></h2><p data-v-0534c159>Handle Markdown files</p><ul data-v-0534c159><li data-v-0534c159><a href="#module_useMd" data-v-0534c159>useMd</a><ul data-v-0534c159><li data-v-0534c159><em data-v-0534c159>static</em><ul data-v-0534c159><li data-v-0534c159><a href="#module_useMd.createMd" data-v-0534c159>.createMd(md)</a> \u21D2</li><li data-v-0534c159><a href="#module_useMd.parseMd" data-v-0534c159>.parseMd(file)</a> \u21D2 <code data-v-0534c159>Md</code></li></ul></li><li data-v-0534c159><em data-v-0534c159>inner</em><ul data-v-0534c159><li data-v-0534c159><a href="#module_useMd..Md" data-v-0534c159>~Md</a> : <code data-v-0534c159>Object</code></li></ul></li></ul></li></ul><h3 id="createmd-md-\u21D2" tabindex="-1" data-v-0534c159>createMd(md) \u21D2 <a class="header-anchor" href="#createmd-md-\u21D2" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Create markdown with frontmatter</p><p data-v-0534c159><strong data-v-0534c159>Returns</strong>: Markdown text file ready to download</p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Param</th><th data-v-0534c159>Type</th><th data-v-0534c159>Description</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>md</td><td data-v-0534c159><code data-v-0534c159>Md</code></td><td data-v-0534c159>frontmatter,content</td></tr></tbody></table><h3 id="parsemd-file-\u21D2-md" tabindex="-1" data-v-0534c159>parseMd(file) \u21D2 <code data-v-0534c159>Md</code> <a class="header-anchor" href="#parsemd-file-\u21D2-md" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Parse text content of a markdown file into an object</p><p data-v-0534c159><strong data-v-0534c159>Returns</strong>: <code data-v-0534c159>Md</code> - - An object with md frontmatter and content</p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Param</th><th data-v-0534c159>Type</th><th data-v-0534c159>Description</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>file</td><td data-v-0534c159><code data-v-0534c159>String</code></td><td data-v-0534c159>Text form of an uploaded file</td></tr></tbody></table><h3 id="md-object" tabindex="-1" data-v-0534c159>Md : <code data-v-0534c159>Object</code> <a class="header-anchor" href="#md-object" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159><strong data-v-0534c159>Properties</strong></p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Name</th><th data-v-0534c159>Type</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>frontmatter</td><td data-v-0534c159><code data-v-0534c159>Object</code></td></tr><tr data-v-0534c159><td data-v-0534c159>content</td><td data-v-0534c159><code data-v-0534c159>object</code></td></tr></tbody></table><hr data-v-0534c159><p data-v-0534c159><a name="module_useZip" data-v-0534c159></a></p><h2 id="usezip" tabindex="-1" data-v-0534c159>useZip <a class="header-anchor" href="#usezip" aria-hidden="true" data-v-0534c159>#</a></h2><p data-v-0534c159>Read and write zip files</p><p data-v-0534c159><strong data-v-0534c159>See</strong>: <a href="https://github.com/Stuk/jszip" target="_blank" rel="noopener noreferrer" data-v-0534c159>https://github.com/Stuk/jszip</a></p><ul data-v-0534c159><li data-v-0534c159><a href="#module_useZip" data-v-0534c159>useZip</a><ul data-v-0534c159><li data-v-0534c159><em data-v-0534c159>static</em><ul data-v-0534c159><li data-v-0534c159><a href="#module_useZip.useZip" data-v-0534c159>.useZip()</a> \u21D2 <code data-v-0534c159>useZip</code><ul data-v-0534c159><li data-v-0534c159><a href="#module_useZip.useZip..addFile" data-v-0534c159>~addFile(options)</a> \u21D2 <code data-v-0534c159>String</code></li><li data-v-0534c159><a href="#module_useZip.useZip..zipPost" data-v-0534c159>~zipPost(post)</a></li></ul></li></ul></li><li data-v-0534c159><em data-v-0534c159>inner</em><ul data-v-0534c159><li data-v-0534c159><a href="#module_useZip..useZip" data-v-0534c159>~useZip</a></li></ul></li></ul></li></ul><h3 id="usezip-\u21D2-usezip" tabindex="-1" data-v-0534c159>useZip() \u21D2 <code data-v-0534c159>useZip</code> <a class="header-anchor" href="#usezip-\u21D2-usezip" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Zip file creation toolbox</p><p data-v-0534c159><strong data-v-0534c159>Example</strong></p><div class="language-js" data-v-0534c159><pre data-v-0534c159><code data-v-0534c159><span class="token keyword" data-v-0534c159>import</span> <span class="token punctuation" data-v-0534c159>{</span>useZip<span class="token punctuation" data-v-0534c159>}</span> <span class="token keyword" data-v-0534c159>from</span> <span class="token string" data-v-0534c159>&#39;@gun-vue/composables&#39;</span>
<span class="token keyword" data-v-0534c159>const</span> <span class="token punctuation" data-v-0534c159>{</span> zip<span class="token punctuation" data-v-0534c159>,</span> zipPost<span class="token punctuation" data-v-0534c159>,</span> addMd<span class="token punctuation" data-v-0534c159>,</span> addFile<span class="token punctuation" data-v-0534c159>,</span> downloadZip <span class="token punctuation" data-v-0534c159>}</span> <span class="token operator" data-v-0534c159>=</span> <span class="token function" data-v-0534c159>useZip</span><span class="token punctuation" data-v-0534c159>(</span><span class="token punctuation" data-v-0534c159>)</span>
</code></pre></div><ul data-v-0534c159><li data-v-0534c159><a href="#module_useZip.useZip" data-v-0534c159>.useZip()</a> \u21D2 <code data-v-0534c159>useZip</code><ul data-v-0534c159><li data-v-0534c159><a href="#module_useZip.useZip..addFile" data-v-0534c159>~addFile(options)</a> \u21D2 <code data-v-0534c159>String</code></li><li data-v-0534c159><a href="#module_useZip.useZip..zipPost" data-v-0534c159>~zipPost(post)</a></li></ul></li></ul><p data-v-0534c159><a name="module_useZip.useZip..addFile" data-v-0534c159></a></p><h4 id="addfile-options-\u21D2-string" tabindex="-1" data-v-0534c159>addFile(options) \u21D2 <code data-v-0534c159>String</code> <a class="header-anchor" href="#addfile-options-\u21D2-string" aria-hidden="true" data-v-0534c159>#</a></h4><p data-v-0534c159>Add a binary file to the zip</p><p data-v-0534c159><strong data-v-0534c159>Kind</strong>: inner method of <a href="#module_useZip.useZip" data-v-0534c159><code data-v-0534c159>useZip</code></a><br data-v-0534c159><strong data-v-0534c159>Returns</strong>: <code data-v-0534c159>String</code> - the resulting filename</p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Param</th><th data-v-0534c159>Type</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>options</td><td data-v-0534c159><code data-v-0534c159>Object</code></td></tr></tbody></table><p data-v-0534c159><strong data-v-0534c159>Example</strong></p><div class="language-js" data-v-0534c159><pre data-v-0534c159><code data-v-0534c159><span class="token keyword" data-v-0534c159>if</span> <span class="token punctuation" data-v-0534c159>(</span>post<span class="token punctuation" data-v-0534c159>.</span>cover<span class="token punctuation" data-v-0534c159>)</span> <span class="token punctuation" data-v-0534c159>{</span> <span class="token comment" data-v-0534c159>// a base64 encoded picture</span>
  <span class="token keyword" data-v-0534c159>const</span> fileName <span class="token operator" data-v-0534c159>=</span> <span class="token keyword" data-v-0534c159>await</span> <span class="token function" data-v-0534c159>addFile</span><span class="token punctuation" data-v-0534c159>(</span><span class="token punctuation" data-v-0534c159>{</span>
    <span class="token literal-property property" data-v-0534c159>title</span><span class="token operator" data-v-0534c159>:</span> <span class="token string" data-v-0534c159>&quot;cover&quot;</span><span class="token punctuation" data-v-0534c159>,</span>
    <span class="token literal-property property" data-v-0534c159>file</span><span class="token operator" data-v-0534c159>:</span> post<span class="token punctuation" data-v-0534c159>.</span>cover<span class="token punctuation" data-v-0534c159>,</span>
    <span class="token literal-property property" data-v-0534c159>folder</span><span class="token operator" data-v-0534c159>:</span> post<span class="token punctuation" data-v-0534c159>.</span>title<span class="token punctuation" data-v-0534c159>,</span>
  <span class="token punctuation" data-v-0534c159>}</span><span class="token punctuation" data-v-0534c159>)</span><span class="token punctuation" data-v-0534c159>;</span>
  post<span class="token punctuation" data-v-0534c159>.</span>cover <span class="token operator" data-v-0534c159>=</span> fileName<span class="token punctuation" data-v-0534c159>;</span>
<span class="token punctuation" data-v-0534c159>}</span>
</code></pre></div><p data-v-0534c159><a name="module_useZip.useZip..zipPost" data-v-0534c159></a></p><h4 id="zippost-post" tabindex="-1" data-v-0534c159>zipPost(post) <a class="header-anchor" href="#zippost-post" aria-hidden="true" data-v-0534c159>#</a></h4><p data-v-0534c159>Zips the whole post object</p><p data-v-0534c159><strong data-v-0534c159>Kind</strong>: inner method of <a href="#module_useZip.useZip" data-v-0534c159><code data-v-0534c159>useZip</code></a></p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Param</th><th data-v-0534c159>Type</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>post</td><td data-v-0534c159><code data-v-0534c159>Object</code></td></tr></tbody></table><h3 id="usezip-1" tabindex="-1" data-v-0534c159>useZip <a class="header-anchor" href="#usezip-1" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159><strong data-v-0534c159>Properties</strong></p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Name</th><th data-v-0534c159>Type</th><th data-v-0534c159>Description</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>zip</td><td data-v-0534c159><code data-v-0534c159>JSZip</code></td><td data-v-0534c159>a JSZip instance</td></tr><tr data-v-0534c159><td data-v-0534c159>zipPost</td><td data-v-0534c159><code data-v-0534c159>function</code></td><td data-v-0534c159>treats a post with md contents and cover and icon images and adds them to the zip</td></tr><tr data-v-0534c159><td data-v-0534c159>addMd</td><td data-v-0534c159><code data-v-0534c159>function</code></td><td data-v-0534c159>add a MD file to the zip</td></tr><tr data-v-0534c159><td data-v-0534c159>addFile</td><td data-v-0534c159><code data-v-0534c159>function</code></td><td data-v-0534c159>add a binary file to the zip</td></tr><tr data-v-0534c159><td data-v-0534c159>downloadZip</td><td data-v-0534c159><code data-v-0534c159>function</code></td><td data-v-0534c159>initiate the download of the zip file</td></tr></tbody></table><hr data-v-0534c159><p data-v-0534c159><a name="module_useGun" data-v-0534c159></a></p><h2 id="usegun" tabindex="-1" data-v-0534c159>useGun <a class="header-anchor" href="#usegun" aria-hidden="true" data-v-0534c159>#</a></h2><p data-v-0534c159>Gun DB initialization and basic methods</p><ul data-v-0534c159><li data-v-0534c159><a href="#module_useGun" data-v-0534c159>useGun</a><ul data-v-0534c159><li data-v-0534c159><em data-v-0534c159>static</em><ul data-v-0534c159><li data-v-0534c159><a href="#module_useGun.gun" data-v-0534c159>.gun</a></li><li data-v-0534c159><a href="#module_useGun.gun2" data-v-0534c159>.gun2</a></li><li data-v-0534c159><a href="#module_useGun.useGun" data-v-0534c159>.useGun(peer)</a> \u21D2 <code data-v-0534c159>Gun</code></li><li data-v-0534c159><a href="#module_useGun.useGun2" data-v-0534c159>.useGun2(peer)</a> \u21D2 <code data-v-0534c159>Gun</code></li></ul></li><li data-v-0534c159><em data-v-0534c159>inner</em><ul data-v-0534c159><li data-v-0534c159><a href="#module_useGun..SEA" data-v-0534c159>~SEA</a></li><li data-v-0534c159><a href="#module_useGun..soul" data-v-0534c159>~soul()</a></li><li data-v-0534c159><a href="#module_useGun..genUUID" data-v-0534c159>~genUUID()</a></li></ul></li></ul></li></ul><h3 id="gun" tabindex="-1" data-v-0534c159>gun <a class="header-anchor" href="#gun" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>The main Gun instance for database operations</p><h3 id="gun2" tabindex="-1" data-v-0534c159>gun2 <a class="header-anchor" href="#gun2" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Secondary Gun instance for key management</p><h3 id="usegun-peer-\u21D2-gun" tabindex="-1" data-v-0534c159>useGun(peer) \u21D2 <code data-v-0534c159>Gun</code> <a class="header-anchor" href="#usegun-peer-\u21D2-gun" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Instantiate a Gun instance for DB manipulations</p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Param</th><th data-v-0534c159>Type</th><th data-v-0534c159>Description</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>peer</td><td data-v-0534c159><code data-v-0534c159>Array</code></td><td data-v-0534c159>an array of Gun peers (should be only one for now)</td></tr></tbody></table><p data-v-0534c159><strong data-v-0534c159>Example</strong></p><div class="language-js" data-v-0534c159><pre data-v-0534c159><code data-v-0534c159><span class="token keyword" data-v-0534c159>import</span> <span class="token punctuation" data-v-0534c159>{</span> useGun <span class="token punctuation" data-v-0534c159>}</span> <span class="token keyword" data-v-0534c159>from</span> <span class="token string" data-v-0534c159>&#39;@gun-vue/composables&#39;</span>

<span class="token keyword" data-v-0534c159>const</span> gun <span class="token operator" data-v-0534c159>=</span> <span class="token function" data-v-0534c159>useGun</span><span class="token punctuation" data-v-0534c159>(</span><span class="token punctuation" data-v-0534c159>)</span>
</code></pre></div><h3 id="usegun2-peer-\u21D2-gun" tabindex="-1" data-v-0534c159>useGun2(peer) \u21D2 <code data-v-0534c159>Gun</code> <a class="header-anchor" href="#usegun2-peer-\u21D2-gun" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>get a secondary Gun instance to manages certificates</p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Param</th><th data-v-0534c159>Type</th><th data-v-0534c159>Description</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>peer</td><td data-v-0534c159><code data-v-0534c159>Array</code></td><td data-v-0534c159>an array of Gun peers (should be only one for now)</td></tr></tbody></table><h3 id="sea" tabindex="-1" data-v-0534c159>SEA <a class="header-anchor" href="#sea" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>SEA library</p><h3 id="soul" tabindex="-1" data-v-0534c159>soul() <a class="header-anchor" href="#soul" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159><strong data-v-0534c159>Get a soul for any given node</strong> A wrapper for <code data-v-0534c159>Gun.node.soul</code></p><h3 id="genuuid" tabindex="-1" data-v-0534c159>genUUID() <a class="header-anchor" href="#genuuid" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159><strong data-v-0534c159>Generate a random UUID</strong> A wrapper for <code data-v-0534c159>Gun.text.random</code></p><hr data-v-0534c159><p data-v-0534c159><a name="module_useRelay" data-v-0534c159></a></p><h2 id="userelay" tabindex="-1" data-v-0534c159>useRelay <a class="header-anchor" href="#userelay" aria-hidden="true" data-v-0534c159>#</a></h2><p data-v-0534c159>Relay connection management</p><ul data-v-0534c159><li data-v-0534c159><a href="#module_useRelay" data-v-0534c159>useRelay</a><ul data-v-0534c159><li data-v-0534c159><em data-v-0534c159>static</em><ul data-v-0534c159><li data-v-0534c159><a href="#module_useRelay.useRelay" data-v-0534c159>.useRelay(host)</a> \u21D2 <code data-v-0534c159>Relay</code></li></ul></li><li data-v-0534c159><em data-v-0534c159>inner</em><ul data-v-0534c159><li data-v-0534c159><a href="#module_useRelay..Relay" data-v-0534c159>~Relay</a> : <code data-v-0534c159>reactive</code></li></ul></li></ul></li></ul><h3 id="userelay-host-\u21D2-relay" tabindex="-1" data-v-0534c159>useRelay(host) \u21D2 <code data-v-0534c159>Relay</code> <a class="header-anchor" href="#userelay-host-\u21D2-relay" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Peer server status monitor</p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Param</th><th data-v-0534c159>Type</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>host</td><td data-v-0534c159><code data-v-0534c159>URL</code></td></tr></tbody></table><p data-v-0534c159><strong data-v-0534c159>Example</strong></p><div class="language-js" data-v-0534c159><pre data-v-0534c159><code data-v-0534c159><span class="token keyword" data-v-0534c159>import</span> <span class="token punctuation" data-v-0534c159>{</span> useRelay <span class="token punctuation" data-v-0534c159>}</span> <span class="token keyword" data-v-0534c159>from</span> <span class="token string" data-v-0534c159>&#39;@gun-vue/composables&#39;</span><span class="token punctuation" data-v-0534c159>;</span>

<span class="token keyword" data-v-0534c159>const</span> relay <span class="token operator" data-v-0534c159>=</span> <span class="token function" data-v-0534c159>useRelay</span><span class="token punctuation" data-v-0534c159>(</span><span class="token punctuation" data-v-0534c159>)</span>
</code></pre></div><h3 id="relay-reactive" tabindex="-1" data-v-0534c159>Relay : <code data-v-0534c159>reactive</code> <a class="header-anchor" href="#relay-reactive" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Peer server status reactive object</p><p data-v-0534c159><strong data-v-0534c159>Properties</strong></p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Name</th><th data-v-0534c159>Type</th><th data-v-0534c159>Description</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>host</td><td data-v-0534c159><code data-v-0534c159>String</code></td><td data-v-0534c159>the current peer server URL</td></tr><tr data-v-0534c159><td data-v-0534c159>status</td><td data-v-0534c159><code data-v-0534c159>String</code></td><td data-v-0534c159>current connection status</td></tr><tr data-v-0534c159><td data-v-0534c159>started</td><td data-v-0534c159><code data-v-0534c159>Number</code></td><td data-v-0534c159>the timestamp of server started current session</td></tr><tr data-v-0534c159><td data-v-0534c159>pulse</td><td data-v-0534c159><code data-v-0534c159>Number</code></td><td data-v-0534c159>last received timestamp</td></tr><tr data-v-0534c159><td data-v-0534c159>lag</td><td data-v-0534c159><code data-v-0534c159>Number</code></td><td data-v-0534c159>drift of the timestamp in ms</td></tr><tr data-v-0534c159><td data-v-0534c159>diff</td><td data-v-0534c159><code data-v-0534c159>Number</code></td><td data-v-0534c159>age of the session in ms</td></tr><tr data-v-0534c159><td data-v-0534c159>age</td><td data-v-0534c159><code data-v-0534c159>String</code></td><td data-v-0534c159>age of the session in human readable format</td></tr><tr data-v-0534c159><td data-v-0534c159>blink</td><td data-v-0534c159><code data-v-0534c159>Boolean</code></td><td data-v-0534c159>a Boolean toggled every time the new pulse comes to drive animations</td></tr></tbody></table><p data-v-0534c159><strong data-v-0534c159>Example</strong></p><div class="language-js" data-v-0534c159><pre data-v-0534c159><code data-v-0534c159><span class="token punctuation" data-v-0534c159>{</span>
<span class="token string-property property" data-v-0534c159>&quot;peer&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token string" data-v-0534c159>&quot;https://etogun.glitch.me/gun&quot;</span><span class="token punctuation" data-v-0534c159>,</span>
<span class="token string-property property" data-v-0534c159>&quot;host&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token string" data-v-0534c159>&quot;6db1edbb5aae&quot;</span><span class="token punctuation" data-v-0534c159>,</span>
<span class="token string-property property" data-v-0534c159>&quot;status&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token string" data-v-0534c159>&quot;running&quot;</span><span class="token punctuation" data-v-0534c159>,</span>
<span class="token string-property property" data-v-0534c159>&quot;started&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token number" data-v-0534c159>1642666725795</span><span class="token punctuation" data-v-0534c159>,</span>
<span class="token string-property property" data-v-0534c159>&quot;pulse&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token number" data-v-0534c159>1642677007483</span><span class="token punctuation" data-v-0534c159>,</span>
<span class="token string-property property" data-v-0534c159>&quot;lag&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token number" data-v-0534c159>8</span><span class="token punctuation" data-v-0534c159>,</span>
<span class="token string-property property" data-v-0534c159>&quot;diff&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token number" data-v-0534c159>10281688</span><span class="token punctuation" data-v-0534c159>,</span>
<span class="token string-property property" data-v-0534c159>&quot;age&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token string" data-v-0534c159>&quot;3h&quot;</span><span class="token punctuation" data-v-0534c159>,</span>
<span class="token string-property property" data-v-0534c159>&quot;delay&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token number" data-v-0534c159>22</span><span class="token punctuation" data-v-0534c159>,</span>
<span class="token string-property property" data-v-0534c159>&quot;blink&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token boolean" data-v-0534c159>true</span>
<span class="token punctuation" data-v-0534c159>}</span>
</code></pre></div><hr data-v-0534c159><p data-v-0534c159><a name="module_Post" data-v-0534c159></a></p><h2 id="post" tabindex="-1" data-v-0534c159>Post <a class="header-anchor" href="#post" aria-hidden="true" data-v-0534c159>#</a></h2><p data-v-0534c159>Get and handle a particular post by it&#39;s tag and hash</p><ul data-v-0534c159><li data-v-0534c159><a href="#module_Post" data-v-0534c159>Post</a><ul data-v-0534c159><li data-v-0534c159><em data-v-0534c159>static</em><ul data-v-0534c159><li data-v-0534c159><a href="#module_Post.usePost" data-v-0534c159>.usePost(options)</a> \u21D2 <code data-v-0534c159>Post</code></li><li data-v-0534c159><a href="#module_Post.downloadPost" data-v-0534c159>.downloadPost(post)</a></li><li data-v-0534c159><a href="#module_Post.parsePost" data-v-0534c159>.parsePost(data)</a> \u21D2 <code data-v-0534c159>Object</code></li><li data-v-0534c159><a href="#module_Post.addPost" data-v-0534c159>.addPost(tag, post)</a></li></ul></li><li data-v-0534c159><em data-v-0534c159>inner</em><ul data-v-0534c159><li data-v-0534c159><a href="#module_Post..Post" data-v-0534c159>~Post</a> : <code data-v-0534c159>Object</code></li></ul></li></ul></li></ul><h3 id="usepost-options-\u21D2-post" tabindex="-1" data-v-0534c159>usePost(options) \u21D2 <code data-v-0534c159>Post</code> <a class="header-anchor" href="#usepost-options-\u21D2-post" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>An interface to manage a post</p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Param</th><th data-v-0534c159>Type</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>options</td><td data-v-0534c159><code data-v-0534c159>Object</code></td></tr></tbody></table><p data-v-0534c159><strong data-v-0534c159>Example</strong></p><div class="language-js" data-v-0534c159><pre data-v-0534c159><code data-v-0534c159><span class="token keyword" data-v-0534c159>const</span> post <span class="token operator" data-v-0534c159>=</span> <span class="token function" data-v-0534c159>usePost</span><span class="token punctuation" data-v-0534c159>(</span><span class="token punctuation" data-v-0534c159>{</span> <span class="token literal-property property" data-v-0534c159>tag</span><span class="token operator" data-v-0534c159>:</span> <span class="token string" data-v-0534c159>&#39;tag&#39;</span><span class="token punctuation" data-v-0534c159>,</span> <span class="token literal-property property" data-v-0534c159>hash</span><span class="token operator" data-v-0534c159>:</span> postHash <span class="token punctuation" data-v-0534c159>}</span><span class="token punctuation" data-v-0534c159>)</span>
</code></pre></div><h3 id="downloadpost-post" tabindex="-1" data-v-0534c159>downloadPost(post) <a class="header-anchor" href="#downloadpost-post" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Download the post as a zip file with MD contents and icon and cover pictures if present</p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Param</th><th data-v-0534c159>Type</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>post</td><td data-v-0534c159><code data-v-0534c159>Post</code></td></tr></tbody></table><p data-v-0534c159><strong data-v-0534c159>Example</strong></p><div class="language-js" data-v-0534c159><pre data-v-0534c159><code data-v-0534c159><span class="token keyword" data-v-0534c159>import</span> <span class="token punctuation" data-v-0534c159>{</span> downloadPost<span class="token punctuation" data-v-0534c159>,</span> usePost <span class="token punctuation" data-v-0534c159>}</span> <span class="token keyword" data-v-0534c159>from</span> <span class="token string" data-v-0534c159>&#39;@gun-vue/composables&#39;</span>

<span class="token keyword" data-v-0534c159>const</span> post <span class="token operator" data-v-0534c159>=</span> <span class="token function" data-v-0534c159>usePost</span><span class="token punctuation" data-v-0534c159>(</span> postTag<span class="token punctuation" data-v-0534c159>,</span> postHash <span class="token punctuation" data-v-0534c159>)</span>

<span class="token function" data-v-0534c159>downloadPost</span><span class="token punctuation" data-v-0534c159>(</span>post<span class="token punctuation" data-v-0534c159>)</span>
</code></pre></div><h3 id="parsepost-data-\u21D2-object" tabindex="-1" data-v-0534c159>parsePost(data) \u21D2 <code data-v-0534c159>Object</code> <a class="header-anchor" href="#parsepost-data-\u21D2-object" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Parse a post string from db</p><p data-v-0534c159><strong data-v-0534c159>Returns</strong>: <code data-v-0534c159>Object</code> - Post object</p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Param</th><th data-v-0534c159>Type</th><th data-v-0534c159>Description</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>data</td><td data-v-0534c159><code data-v-0534c159>String</code></td><td data-v-0534c159>Stringified data from the hashed post</td></tr></tbody></table><h3 id="addpost-tag-post" tabindex="-1" data-v-0534c159>addPost(tag, post) <a class="header-anchor" href="#addpost-tag-post" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Add a new post to a tag</p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Param</th><th data-v-0534c159>Type</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>tag</td><td data-v-0534c159><code data-v-0534c159>String</code></td></tr><tr data-v-0534c159><td data-v-0534c159>post</td><td data-v-0534c159><code data-v-0534c159>Object</code></td></tr></tbody></table><p data-v-0534c159><strong data-v-0534c159>Example</strong></p><div class="language-js" data-v-0534c159><pre data-v-0534c159><code data-v-0534c159><span class="token keyword" data-v-0534c159>import</span> <span class="token punctuation" data-v-0534c159>{</span> addPost <span class="token punctuation" data-v-0534c159>}</span> <span class="token keyword" data-v-0534c159>from</span> <span class="token string" data-v-0534c159>&#39;@gun-vue/composables&#39;</span>

<span class="token function" data-v-0534c159>addPost</span><span class="token punctuation" data-v-0534c159>(</span><span class="token string" data-v-0534c159>&#39;MyTag&#39;</span><span class="token punctuation" data-v-0534c159>,</span> <span class="token punctuation" data-v-0534c159>{</span>
 <span class="token literal-property property" data-v-0534c159>title</span><span class="token operator" data-v-0534c159>:</span> <span class="token string" data-v-0534c159>&#39;New post&#39;</span>
<span class="token punctuation" data-v-0534c159>}</span><span class="token punctuation" data-v-0534c159>)</span>
</code></pre></div><h3 id="post-object" tabindex="-1" data-v-0534c159>Post : <code data-v-0534c159>Object</code> <a class="header-anchor" href="#post-object" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159><strong data-v-0534c159>Properties</strong></p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Name</th><th data-v-0534c159>Type</th><th data-v-0534c159>Description</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>empty</td><td data-v-0534c159><code data-v-0534c159>Boolean</code></td><td data-v-0534c159>whether the post has contents</td></tr><tr data-v-0534c159><td data-v-0534c159>tag</td><td data-v-0534c159><code data-v-0534c159>String</code></td><td data-v-0534c159>the tag under which the post was published</td></tr><tr data-v-0534c159><td data-v-0534c159>hash</td><td data-v-0534c159><code data-v-0534c159>String</code></td><td data-v-0534c159>the hash of the contents</td></tr><tr data-v-0534c159><td data-v-0534c159>data</td><td data-v-0534c159><code data-v-0534c159>Object</code></td><td data-v-0534c159>the contents of the post</td></tr><tr data-v-0534c159><td data-v-0534c159>download</td><td data-v-0534c159><code data-v-0534c159>function</code></td><td data-v-0534c159>use this function to download the post as a Markdown file</td></tr></tbody></table><p data-v-0534c159><strong data-v-0534c159>Example</strong></p><div class="language-js" data-v-0534c159><pre data-v-0534c159><code data-v-0534c159><span class="token punctuation" data-v-0534c159>{</span>
 <span class="token string-property property" data-v-0534c159>&quot;empty&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token boolean" data-v-0534c159>false</span><span class="token punctuation" data-v-0534c159>,</span>
 <span class="token string-property property" data-v-0534c159>&quot;tag&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token string" data-v-0534c159>&quot;ds&quot;</span><span class="token punctuation" data-v-0534c159>,</span>
 <span class="token string-property property" data-v-0534c159>&quot;hash&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token string" data-v-0534c159>&quot;C8trDBYNyvxVedHK4Q0IuUarc/k2/iiv8opPfoAU0xA=&quot;</span><span class="token punctuation" data-v-0534c159>,</span>
 <span class="token string-property property" data-v-0534c159>&quot;data&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token punctuation" data-v-0534c159>{</span>
   <span class="token string-property property" data-v-0534c159>&quot;cover&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token string" data-v-0534c159>&quot;data:image/png;base64,..........&quot;</span><span class="token punctuation" data-v-0534c159>,</span>
   <span class="token string-property property" data-v-0534c159>&quot;icon&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token string" data-v-0534c159>&quot;data:image/png;base64,..........&quot;</span><span class="token punctuation" data-v-0534c159>,</span>
   <span class="token string-property property" data-v-0534c159>&quot;title&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token string" data-v-0534c159>&quot;OSS&quot;</span><span class="token punctuation" data-v-0534c159>,</span>
   <span class="token string-property property" data-v-0534c159>&quot;statement&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token string" data-v-0534c159>&quot;New live album by tsoop&quot;</span><span class="token punctuation" data-v-0534c159>,</span>
   <span class="token string-property property" data-v-0534c159>&quot;youtube&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token string" data-v-0534c159>&quot;K2MwpOd8vEI&quot;</span><span class="token punctuation" data-v-0534c159>,</span>
   <span class="token string-property property" data-v-0534c159>&quot;content&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token string" data-v-0534c159>&quot;It&#39;s mostly op-z + op-1 with my own Unity visuals based on [Chromatone](https://chromatone.center) system.\\n\\n### 2021\\nFirst played live at April 20th **2021**.\\n\\n### Into 2022\\nIt&#39;s an ongoing live album to be recorded throughout the **2022**.&quot;</span>
<span class="token punctuation" data-v-0534c159>}</span><span class="token punctuation" data-v-0534c159>,</span>
 <span class="token string-property property" data-v-0534c159>&quot;timestamp&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token number" data-v-0534c159>1642590655747</span><span class="token punctuation" data-v-0534c159>,</span>
 <span class="token string-property property" data-v-0534c159>&quot;lastUpdated&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token string" data-v-0534c159>&quot;1d&quot;</span>
<span class="token punctuation" data-v-0534c159>}</span>
</code></pre></div><hr data-v-0534c159><p data-v-0534c159><a name="module_Feed" data-v-0534c159></a></p><h2 id="feed" tabindex="-1" data-v-0534c159>Feed <a class="header-anchor" href="#feed" aria-hidden="true" data-v-0534c159>#</a></h2><p data-v-0534c159>Get and handle a particular post by it&#39;s tag and hash</p><ul data-v-0534c159><li data-v-0534c159><a href="#module_Feed" data-v-0534c159>Feed</a><ul data-v-0534c159><li data-v-0534c159><em data-v-0534c159>static</em><ul data-v-0534c159><li data-v-0534c159><a href="#module_Feed.useFeed" data-v-0534c159>.useFeed(tag, options)</a> \u21D2 <code data-v-0534c159>useFeed</code></li><li data-v-0534c159><a href="#module_Feed.downloadFeed" data-v-0534c159>.downloadFeed(tag, posts)</a></li><li data-v-0534c159><a href="#module_Feed.uploadFeed" data-v-0534c159>.uploadFeed(tag, files)</a></li></ul></li><li data-v-0534c159><em data-v-0534c159>inner</em><ul data-v-0534c159><li data-v-0534c159><a href="#module_Feed..useFeed" data-v-0534c159>~useFeed</a></li></ul></li></ul></li></ul><h3 id="usefeed-tag-options-\u21D2-usefeed" tabindex="-1" data-v-0534c159>useFeed(tag, options) \u21D2 <code data-v-0534c159>useFeed</code> <a class="header-anchor" href="#usefeed-tag-options-\u21D2-usefeed" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Use a list of immutable data from a #tag</p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Param</th><th data-v-0534c159>Type</th><th data-v-0534c159>Description</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>tag</td><td data-v-0534c159><code data-v-0534c159>String</code></td><td data-v-0534c159>A vue ref to watch - generated from props by <code data-v-0534c159>toRef(props,&#39;tag&#39;)</code></td></tr><tr data-v-0534c159><td data-v-0534c159>options</td><td data-v-0534c159><code data-v-0534c159>Object</code></td><td data-v-0534c159>Options for the feed</td></tr></tbody></table><p data-v-0534c159><strong data-v-0534c159>Example</strong></p><div class="language-js" data-v-0534c159><pre data-v-0534c159><code data-v-0534c159><span class="token keyword" data-v-0534c159>import</span> <span class="token punctuation" data-v-0534c159>{</span> useFeed <span class="token punctuation" data-v-0534c159>}</span> <span class="token keyword" data-v-0534c159>from</span> <span class="token string" data-v-0534c159>&#39;@gun-vue/composables&#39;</span>

<span class="token keyword" data-v-0534c159>const</span> <span class="token punctuation" data-v-0534c159>{</span> posts<span class="token punctuation" data-v-0534c159>,</span> timestamps<span class="token punctuation" data-v-0534c159>,</span> count<span class="token punctuation" data-v-0534c159>,</span> uploadPosts<span class="token punctuation" data-v-0534c159>,</span> downloadPosts<span class="token punctuation" data-v-0534c159>}</span> <span class="token operator" data-v-0534c159>=</span> <span class="token function" data-v-0534c159>useFeed</span><span class="token punctuation" data-v-0534c159>(</span><span class="token string" data-v-0534c159>&#39;MyTag&#39;</span><span class="token punctuation" data-v-0534c159>)</span>
</code></pre></div><h3 id="downloadfeed-tag-posts" tabindex="-1" data-v-0534c159>downloadFeed(tag, posts) <a class="header-anchor" href="#downloadfeed-tag-posts" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Export a list of posts as a zip file</p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Param</th><th data-v-0534c159>Type</th><th data-v-0534c159>Description</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>tag</td><td data-v-0534c159><code data-v-0534c159>String</code></td><td data-v-0534c159>Name of the tag</td></tr><tr data-v-0534c159><td data-v-0534c159>posts</td><td data-v-0534c159><code data-v-0534c159>Object</code></td><td data-v-0534c159>Posts to export</td></tr></tbody></table><p data-v-0534c159><strong data-v-0534c159>Example</strong></p><div class="language-js" data-v-0534c159><pre data-v-0534c159><code data-v-0534c159><span class="token keyword" data-v-0534c159>import</span> <span class="token punctuation" data-v-0534c159>{</span>downloadFeed<span class="token punctuation" data-v-0534c159>}</span> <span class="token keyword" data-v-0534c159>from</span> <span class="token string" data-v-0534c159>&#39;@gun-vue/components&#39;</span>

<span class="token function" data-v-0534c159>downloadFeed</span><span class="token punctuation" data-v-0534c159>(</span><span class="token string" data-v-0534c159>&#39;myTag&#39;</span><span class="token punctuation" data-v-0534c159>,</span>posts<span class="token punctuation" data-v-0534c159>)</span>
</code></pre></div><h3 id="uploadfeed-tag-files" tabindex="-1" data-v-0534c159>uploadFeed(tag, files) <a class="header-anchor" href="#uploadfeed-tag-files" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Upload zip files and add all the MD files from it to the tag</p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Param</th><th data-v-0534c159>Type</th><th data-v-0534c159>Description</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>tag</td><td data-v-0534c159><code data-v-0534c159>String</code></td><td data-v-0534c159>a tag to add the posts to</td></tr><tr data-v-0534c159><td data-v-0534c159>files</td><td data-v-0534c159><code data-v-0534c159>FileList</code></td><td data-v-0534c159>File list from the input <code data-v-0534c159>@change</code> event</td></tr></tbody></table><p data-v-0534c159><strong data-v-0534c159>Example</strong></p><div class="language-js" data-v-0534c159><pre data-v-0534c159><code data-v-0534c159><span class="token keyword" data-v-0534c159>import</span> <span class="token punctuation" data-v-0534c159>{</span> uploadFeed <span class="token punctuation" data-v-0534c159>}</span> <span class="token keyword" data-v-0534c159>from</span> <span class="token string" data-v-0534c159>&#39;@gun-vue/composables&#39;</span>
</code></pre></div><p data-v-0534c159><strong data-v-0534c159>Example</strong></p><div class="language-html" data-v-0534c159><pre data-v-0534c159><code data-v-0534c159><span class="token tag" data-v-0534c159><span class="token tag" data-v-0534c159><span class="token punctuation" data-v-0534c159>&lt;</span>input</span> <span class="token attr-name" data-v-0534c159>type</span><span class="token attr-value" data-v-0534c159><span class="token punctuation attr-equals" data-v-0534c159>=</span><span class="token punctuation" data-v-0534c159>&quot;</span>file<span class="token punctuation" data-v-0534c159>&quot;</span></span> <span class="token attr-name" data-v-0534c159>@change</span><span class="token attr-value" data-v-0534c159><span class="token punctuation attr-equals" data-v-0534c159>=</span><span class="token punctuation" data-v-0534c159>&quot;</span>uploadFeed( <span class="token punctuation" data-v-0534c159>&#39;</span>myTag<span class="token punctuation" data-v-0534c159>&#39;</span>, $event.target.files )<span class="token punctuation" data-v-0534c159>&quot;</span></span> <span class="token punctuation" data-v-0534c159>/&gt;</span></span>
</code></pre></div><h3 id="usefeed" tabindex="-1" data-v-0534c159>useFeed <a class="header-anchor" href="#usefeed" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159><strong data-v-0534c159>Properties</strong></p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Name</th><th data-v-0534c159>Type</th><th data-v-0534c159>Description</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>posts</td><td data-v-0534c159><code data-v-0534c159>ref</code></td><td data-v-0534c159>the reactive list of hashed data</td></tr><tr data-v-0534c159><td data-v-0534c159>timestamps</td><td data-v-0534c159><code data-v-0534c159>ref</code></td><td data-v-0534c159>reactive timestamps list for all posts in a list</td></tr><tr data-v-0534c159><td data-v-0534c159>count</td><td data-v-0534c159><code data-v-0534c159>computed</code></td><td data-v-0534c159>the number of posts in a feed</td></tr><tr data-v-0534c159><td data-v-0534c159>downloadPosts</td><td data-v-0534c159><code data-v-0534c159>function</code></td><td data-v-0534c159>Download all posts in a zip file</td></tr><tr data-v-0534c159><td data-v-0534c159>uploadPosts</td><td data-v-0534c159><code data-v-0534c159>function</code></td><td data-v-0534c159>upload a zip file with posts</td></tr></tbody></table><hr data-v-0534c159><p data-v-0534c159><a name="module_Feeds" data-v-0534c159></a></p><h2 id="feeds" tabindex="-1" data-v-0534c159>Feeds <a class="header-anchor" href="#feeds" aria-hidden="true" data-v-0534c159>#</a></h2><p data-v-0534c159>Get and handle a particular post by it&#39;s tag and hash</p><ul data-v-0534c159><li data-v-0534c159><a href="#module_Feeds" data-v-0534c159>Feeds</a><ul data-v-0534c159><li data-v-0534c159><em data-v-0534c159>static</em><ul data-v-0534c159><li data-v-0534c159><a href="#module_Feeds.useFeeds" data-v-0534c159>.useFeeds()</a> \u21D2 <code data-v-0534c159>useFeeds</code></li></ul></li><li data-v-0534c159><em data-v-0534c159>inner</em><ul data-v-0534c159><li data-v-0534c159><a href="#module_Feeds..useFeeds" data-v-0534c159>~useFeeds</a></li></ul></li></ul></li></ul><h3 id="usefeeds-\u21D2-usefeeds" tabindex="-1" data-v-0534c159>useFeeds() \u21D2 <code data-v-0534c159>useFeeds</code> <a class="header-anchor" href="#usefeeds-\u21D2-usefeeds" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Toolkit to deal with the available tags</p><h3 id="usefeeds" tabindex="-1" data-v-0534c159>useFeeds <a class="header-anchor" href="#usefeeds" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159><strong data-v-0534c159>Properties</strong></p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Name</th><th data-v-0534c159>Type</th><th data-v-0534c159>Description</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>search</td><td data-v-0534c159><code data-v-0534c159>ref</code></td><td data-v-0534c159>a ref to bind to an input element</td></tr><tr data-v-0534c159><td data-v-0534c159>slug</td><td data-v-0534c159><code data-v-0534c159>computed</code></td><td data-v-0534c159>a slugified search query - url safe verion to be used as a tag</td></tr><tr data-v-0534c159><td data-v-0534c159>tags</td><td data-v-0534c159><code data-v-0534c159>Tags</code></td><td data-v-0534c159>the object to handle all the tags</td></tr><tr data-v-0534c159><td data-v-0534c159>addTag</td><td data-v-0534c159><code data-v-0534c159>function</code></td><td data-v-0534c159>add a slug tag to the list</td></tr></tbody></table><hr data-v-0534c159><p data-v-0534c159><a name="module_Room" data-v-0534c159></a></p><h2 id="room" tabindex="-1" data-v-0534c159>Room <a class="header-anchor" href="#room" aria-hidden="true" data-v-0534c159>#</a></h2><ul data-v-0534c159><li data-v-0534c159><a href="#module_Room" data-v-0534c159>Room</a><ul data-v-0534c159><li data-v-0534c159><a href="#module_Room.useRoom" data-v-0534c159>.useRoom()</a> \u21D2 <code data-v-0534c159>useRoom</code></li><li data-v-0534c159><a href="#module_Room.updateRoomProfile" data-v-0534c159>.updateRoomProfile(field, content)</a></li><li data-v-0534c159><a href="#module_Room.createRoom" data-v-0534c159>.createRoom()</a></li><li data-v-0534c159><a href="#module_Room.enterRoom" data-v-0534c159>.enterRoom(pub)</a></li><li data-v-0534c159><a href="#module_Room.leaveRoom" data-v-0534c159>.leaveRoom()</a></li><li data-v-0534c159><a href="#module_Room.listRoomItems" data-v-0534c159>.listRoomItems(tag, pub)</a> \u21D2 <code data-v-0534c159>reactive</code></li></ul></li></ul><h3 id="useroom-\u21D2-useroom" tabindex="-1" data-v-0534c159>useRoom() \u21D2 <code data-v-0534c159>useRoom</code> <a class="header-anchor" href="#useroom-\u21D2-useroom" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Reactive room controls</p><h3 id="updateroomprofile-field-content" tabindex="-1" data-v-0534c159>updateRoomProfile(field, content) <a class="header-anchor" href="#updateroomprofile-field-content" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Update a profile field of a room</p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Param</th><th data-v-0534c159>Type</th><th data-v-0534c159>Description</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>field</td><td data-v-0534c159><code data-v-0534c159>String</code></td><td data-v-0534c159>parameter to write to</td></tr><tr data-v-0534c159><td data-v-0534c159>content</td><td data-v-0534c159><code data-v-0534c159>String</code></td><td data-v-0534c159></td></tr></tbody></table><h3 id="createroom" tabindex="-1" data-v-0534c159>createRoom() <a class="header-anchor" href="#createroom" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Create a new room inside the current room</p><h3 id="enterroom-pub" tabindex="-1" data-v-0534c159>enterRoom(pub) <a class="header-anchor" href="#enterroom-pub" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>The right way to come inside a room</p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Param</th><th data-v-0534c159>Type</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>pub</td><td data-v-0534c159><code data-v-0534c159>String</code></td></tr></tbody></table><h3 id="leaveroom" tabindex="-1" data-v-0534c159>leaveRoom() <a class="header-anchor" href="#leaveroom" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Leave the room</p><h3 id="listroomitems-tag-pub-\u21D2-reactive" tabindex="-1" data-v-0534c159>listRoomItems(tag, pub) \u21D2 <code data-v-0534c159>reactive</code> <a class="header-anchor" href="#listroomitems-tag-pub-\u21D2-reactive" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>List room tag items</p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Param</th><th data-v-0534c159>Type</th><th data-v-0534c159>Description</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>tag</td><td data-v-0534c159><code data-v-0534c159>String</code></td><td data-v-0534c159>path to list</td></tr><tr data-v-0534c159><td data-v-0534c159>pub</td><td data-v-0534c159><code data-v-0534c159>String</code></td><td data-v-0534c159>room public key</td></tr></tbody></table><hr data-v-0534c159><p data-v-0534c159><a name="module_useSpace" data-v-0534c159></a></p><h2 id="usespace" tabindex="-1" data-v-0534c159>useSpace <a class="header-anchor" href="#usespace" aria-hidden="true" data-v-0534c159>#</a></h2><p data-v-0534c159>A 2D-space</p><ul data-v-0534c159><li data-v-0534c159><a href="#module_useSpace" data-v-0534c159>useSpace</a><ul data-v-0534c159><li data-v-0534c159><em data-v-0534c159>static</em><ul data-v-0534c159><li data-v-0534c159><a href="#module_useSpace.useSpace" data-v-0534c159>.useSpace(spaceName)</a> \u21D2 <code data-v-0534c159>useSpace</code></li></ul></li><li data-v-0534c159><em data-v-0534c159>inner</em><ul data-v-0534c159><li data-v-0534c159><a href="#module_useSpace..startTime" data-v-0534c159>~startTime</a></li><li data-v-0534c159><a href="#module_useSpace..useSpace" data-v-0534c159>~useSpace</a> : <code data-v-0534c159>Object</code></li></ul></li></ul></li></ul><h3 id="usespace-spacename-\u21D2-usespace" tabindex="-1" data-v-0534c159>useSpace(spaceName) \u21D2 <code data-v-0534c159>useSpace</code> <a class="header-anchor" href="#usespace-spacename-\u21D2-usespace" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>A space to navigate with mouse clicks</p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Param</th><th data-v-0534c159>Type</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>spaceName</td><td data-v-0534c159><code data-v-0534c159>String</code></td></tr></tbody></table><p data-v-0534c159><strong data-v-0534c159>Example</strong></p><div class="language-js" data-v-0534c159><pre data-v-0534c159><code data-v-0534c159><span class="token keyword" data-v-0534c159>const</span> <span class="token punctuation" data-v-0534c159>{</span> space<span class="token punctuation" data-v-0534c159>,</span> plane<span class="token punctuation" data-v-0534c159>,</span> links<span class="token punctuation" data-v-0534c159>,</span> width<span class="token punctuation" data-v-0534c159>,</span> height<span class="token punctuation" data-v-0534c159>,</span> guests<span class="token punctuation" data-v-0534c159>,</span> area<span class="token punctuation" data-v-0534c159>,</span> join <span class="token punctuation" data-v-0534c159>}</span> <span class="token operator" data-v-0534c159>=</span> <span class="token function" data-v-0534c159>useSpace</span><span class="token punctuation" data-v-0534c159>(</span><span class="token punctuation" data-v-0534c159>{</span>
<span class="token constant" data-v-0534c159>TIMEOUT</span><span class="token operator" data-v-0534c159>:</span> <span class="token number" data-v-0534c159>10000</span><span class="token punctuation" data-v-0534c159>,</span>
<span class="token literal-property property" data-v-0534c159>spaceName</span><span class="token operator" data-v-0534c159>:</span> <span class="token string" data-v-0534c159>&#39;Space title&#39;</span>
<span class="token punctuation" data-v-0534c159>}</span><span class="token punctuation" data-v-0534c159>)</span>
</code></pre></div><h3 id="starttime" tabindex="-1" data-v-0534c159>startTime <a class="header-anchor" href="#starttime" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159><strong data-v-0534c159>Todo</strong></p><ul data-v-0534c159><li data-v-0534c159><input type="checkbox" id="checkbox0" data-v-0534c159><label for="checkbox0" data-v-0534c159>draggable handles </label><a href="https://dev.to/abolz/roll-your-own-svg-drag-and-drop-in-vuejs-2c7o" target="_blank" rel="noopener noreferrer" data-v-0534c159>https://dev.to/abolz/roll-your-own-svg-drag-and-drop-in-vuejs-2c7o</a></li></ul><h3 id="usespace-object" tabindex="-1" data-v-0534c159>useSpace : <code data-v-0534c159>Object</code> <a class="header-anchor" href="#usespace-object" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159><strong data-v-0534c159>Properties</strong></p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Name</th><th data-v-0534c159>Type</th><th data-v-0534c159>Description</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>space</td><td data-v-0534c159><code data-v-0534c159>reactive</code></td><td data-v-0534c159>The main object</td></tr><tr data-v-0534c159><td data-v-0534c159>guests</td><td data-v-0534c159><code data-v-0534c159>reactive</code></td><td data-v-0534c159>Active guests</td></tr><tr data-v-0534c159><td data-v-0534c159>links</td><td data-v-0534c159><code data-v-0534c159>reactive</code></td><td data-v-0534c159>Links between active guests</td></tr><tr data-v-0534c159><td data-v-0534c159>plane</td><td data-v-0534c159><code data-v-0534c159>ref</code></td><td data-v-0534c159>The SVG element</td></tr><tr data-v-0534c159><td data-v-0534c159>area</td><td data-v-0534c159><code data-v-0534c159>ref</code></td><td data-v-0534c159>The rect element for mouse events capture</td></tr><tr data-v-0534c159><td data-v-0534c159>width</td><td data-v-0534c159><code data-v-0534c159>ref</code></td><td data-v-0534c159>Width of the plane</td></tr><tr data-v-0534c159><td data-v-0534c159>height</td><td data-v-0534c159><code data-v-0534c159>ref</code></td><td data-v-0534c159>Height of the plane</td></tr><tr data-v-0534c159><td data-v-0534c159>join</td><td data-v-0534c159><code data-v-0534c159>function</code></td><td data-v-0534c159>Join the space with the current user</td></tr></tbody></table><hr data-v-0534c159><p data-v-0534c159><a name="module_useColor" data-v-0534c159></a></p><h2 id="usecolor" tabindex="-1" data-v-0534c159>useColor <a class="header-anchor" href="#usecolor" aria-hidden="true" data-v-0534c159>#</a></h2><p data-v-0534c159>Deterministic colors derived from oub keys, hashes or any other string data</p><h3 id="usecolor-palette-\u21D2-colorhash" tabindex="-1" data-v-0534c159>useColor(palette) \u21D2 <code data-v-0534c159>ColorHash</code> <a class="header-anchor" href="#usecolor-palette-\u21D2-colorhash" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Get a color generator of a certain palette</p><p data-v-0534c159><strong data-v-0534c159>Returns</strong>: <code data-v-0534c159>ColorHash</code> - Color-Hash instance<br data-v-0534c159><strong data-v-0534c159>See</strong>: <a href="https://github.com/zenozeng/color-hash" target="_blank" rel="noopener noreferrer" data-v-0534c159>https://github.com/zenozeng/color-hash</a></p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Param</th><th data-v-0534c159>Type</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>palette</td><td data-v-0534c159><code data-v-0534c159>&#39;light&#39;</code> | <code data-v-0534c159>&#39;regular&#39;</code> | <code data-v-0534c159>&#39;deep&#39;</code> | <code data-v-0534c159>&#39;dark&#39;</code></td></tr></tbody></table><p data-v-0534c159><strong data-v-0534c159>Example</strong></p><div class="language-js" data-v-0534c159><pre data-v-0534c159><code data-v-0534c159><span class="token keyword" data-v-0534c159>import</span> <span class="token punctuation" data-v-0534c159>{</span>useColor<span class="token punctuation" data-v-0534c159>}</span> <span class="token keyword" data-v-0534c159>from</span> <span class="token string" data-v-0534c159>&#39;@gun-vue/composables&#39;</span>
<span class="token keyword" data-v-0534c159>const</span> colorDeep <span class="token operator" data-v-0534c159>=</span> <span class="token function" data-v-0534c159>useColor</span><span class="token punctuation" data-v-0534c159>(</span><span class="token string" data-v-0534c159>&#39;deep&#39;</span><span class="token punctuation" data-v-0534c159>)</span>
<span class="token keyword" data-v-0534c159>const</span> color <span class="token operator" data-v-0534c159>=</span> colorDeep<span class="token punctuation" data-v-0534c159>.</span><span class="token function" data-v-0534c159>hex</span><span class="token punctuation" data-v-0534c159>(</span><span class="token string" data-v-0534c159>&#39;any text data&#39;</span><span class="token punctuation" data-v-0534c159>)</span>
<span class="token comment" data-v-0534c159>// color == &#39;#e052ae&#39;</span>
</code></pre></div><hr data-v-0534c159><p data-v-0534c159><a name="module_useMouse" data-v-0534c159></a></p><h2 id="usemouse" tabindex="-1" data-v-0534c159>useMouse <a class="header-anchor" href="#usemouse" aria-hidden="true" data-v-0534c159>#</a></h2><p data-v-0534c159>Handle mouse movement inside an SVG</p><ul data-v-0534c159><li data-v-0534c159><a href="#module_useMouse" data-v-0534c159>useMouse</a><ul data-v-0534c159><li data-v-0534c159><em data-v-0534c159>static</em><ul data-v-0534c159><li data-v-0534c159><a href="#module_useMouse.useSvgMouse" data-v-0534c159>.useSvgMouse()</a> \u21D2 <code data-v-0534c159>useMouse</code></li></ul></li><li data-v-0534c159><em data-v-0534c159>inner</em><ul data-v-0534c159><li data-v-0534c159><a href="#module_useMouse..useMouse" data-v-0534c159>~useMouse</a> : <code data-v-0534c159>Object</code></li><li data-v-0534c159><a href="#module_useMouse..Mouse" data-v-0534c159>~Mouse</a> : <code data-v-0534c159>reactive</code></li></ul></li></ul></li></ul><h3 id="usesvgmouse-\u21D2-usemouse" tabindex="-1" data-v-0534c159>useSvgMouse() \u21D2 <code data-v-0534c159>useMouse</code> <a class="header-anchor" href="#usesvgmouse-\u21D2-usemouse" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Correct mouse position in an SVG space</p><h3 id="usemouse-object" tabindex="-1" data-v-0534c159>useMouse : <code data-v-0534c159>Object</code> <a class="header-anchor" href="#usemouse-object" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159><strong data-v-0534c159>Properties</strong></p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Name</th><th data-v-0534c159>Type</th><th data-v-0534c159>Description</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>area</td><td data-v-0534c159><code data-v-0534c159>ref</code></td><td data-v-0534c159>an area to mount the mouse to</td></tr><tr data-v-0534c159><td data-v-0534c159>mouse</td><td data-v-0534c159><code data-v-0534c159>Mouse</code></td><td data-v-0534c159>the reactive mouse parameters</td></tr></tbody></table><h3 id="mouse-reactive" tabindex="-1" data-v-0534c159>Mouse : <code data-v-0534c159>reactive</code> <a class="header-anchor" href="#mouse-reactive" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159><strong data-v-0534c159>Properties</strong></p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Name</th><th data-v-0534c159>Type</th><th data-v-0534c159>Description</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>x</td><td data-v-0534c159><code data-v-0534c159>Number</code></td><td data-v-0534c159>absolute X coordinate to place a marker to</td></tr><tr data-v-0534c159><td data-v-0534c159>y</td><td data-v-0534c159><code data-v-0534c159>Number</code></td><td data-v-0534c159>absolute Y coordinate to place a marker to</td></tr><tr data-v-0534c159><td data-v-0534c159>normX</td><td data-v-0534c159><code data-v-0534c159>Number</code></td><td data-v-0534c159>[0-1] relative X coordinate</td></tr><tr data-v-0534c159><td data-v-0534c159>normY</td><td data-v-0534c159><code data-v-0534c159>Number</code></td><td data-v-0534c159>[0-1] relative Y coordinate</td></tr><tr data-v-0534c159><td data-v-0534c159>pressed</td><td data-v-0534c159><code data-v-0534c159>Boolean</code></td><td data-v-0534c159>is mouse pressed?</td></tr><tr data-v-0534c159><td data-v-0534c159>inside</td><td data-v-0534c159><code data-v-0534c159>Boolean</code></td><td data-v-0534c159>is mouse inside the area?</td></tr></tbody></table><hr data-v-0534c159><p data-v-0534c159><a name="module_useMates" data-v-0534c159></a></p><h2 id="usemates" tabindex="-1" data-v-0534c159>useMates <a class="header-anchor" href="#usemates" aria-hidden="true" data-v-0534c159>#</a></h2><p data-v-0534c159>Connections between accounts</p><ul data-v-0534c159><li data-v-0534c159><a href="#module_useMates" data-v-0534c159>useMates</a><ul data-v-0534c159><li data-v-0534c159><em data-v-0534c159>static</em><ul data-v-0534c159><li data-v-0534c159><a href="#module_useMates.useMates" data-v-0534c159>.useMates(pub)</a> \u21D2 <code data-v-0534c159>useMates</code></li><li data-v-0534c159><a href="#module_useMates.getFirstEmoji" data-v-0534c159>.getFirstEmoji(text)</a> \u21D2 <code data-v-0534c159>String</code></li><li data-v-0534c159><a href="#module_useMates.isEmoji" data-v-0534c159>.isEmoji(text)</a> \u21D2 <code data-v-0534c159>Boolean</code></li><li data-v-0534c159><a href="#module_useMates.useMate" data-v-0534c159>.useMate(pub)</a> \u21D2 <code data-v-0534c159>useMate</code></li></ul></li><li data-v-0534c159><em data-v-0534c159>inner</em><ul data-v-0534c159><li data-v-0534c159><a href="#module_useMates..useMates" data-v-0534c159>~useMates</a> : <code data-v-0534c159>reactive</code></li><li data-v-0534c159><a href="#module_useMates..useMate" data-v-0534c159>~useMate</a> : <code data-v-0534c159>Object</code></li></ul></li></ul></li></ul><h3 id="usemates-pub-\u21D2-usemates" tabindex="-1" data-v-0534c159>useMates(pub) \u21D2 <code data-v-0534c159>useMates</code> <a class="header-anchor" href="#usemates-pub-\u21D2-usemates" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Get a reactive list of the user&#39;s mates</p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Param</th><th data-v-0534c159>Type</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>pub</td><td data-v-0534c159><code data-v-0534c159>String</code></td></tr></tbody></table><h3 id="getfirstemoji-text-\u21D2-string" tabindex="-1" data-v-0534c159>getFirstEmoji(text) \u21D2 <code data-v-0534c159>String</code> <a class="header-anchor" href="#getfirstemoji-text-\u21D2-string" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Break the string into graphemes and return the first one if it&#39;s an emoji</p><p data-v-0534c159><strong data-v-0534c159>Returns</strong>: <code data-v-0534c159>String</code> - Emoji</p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Param</th><th data-v-0534c159>Type</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>text</td><td data-v-0534c159><code data-v-0534c159>String</code></td></tr></tbody></table><h3 id="isemoji-text-\u21D2-boolean" tabindex="-1" data-v-0534c159>isEmoji(text) \u21D2 <code data-v-0534c159>Boolean</code> <a class="header-anchor" href="#isemoji-text-\u21D2-boolean" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Check if the text has emojis</p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Param</th><th data-v-0534c159>Type</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>text</td><td data-v-0534c159><code data-v-0534c159>String</code></td></tr></tbody></table><h3 id="usemate-pub-\u21D2-usemate" tabindex="-1" data-v-0534c159>useMate(pub) \u21D2 <code data-v-0534c159>useMate</code> <a class="header-anchor" href="#usemate-pub-\u21D2-usemate" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Make mates with some account by current user</p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Param</th><th data-v-0534c159>Type</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>pub</td><td data-v-0534c159><code data-v-0534c159>String</code></td></tr></tbody></table><h3 id="usemates-reactive" tabindex="-1" data-v-0534c159>useMates : <code data-v-0534c159>reactive</code> <a class="header-anchor" href="#usemates-reactive" aria-hidden="true" data-v-0534c159>#</a></h3><h3 id="usemate-object" tabindex="-1" data-v-0534c159>useMate : <code data-v-0534c159>Object</code> <a class="header-anchor" href="#usemate-object" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159><strong data-v-0534c159>Properties</strong></p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Name</th><th data-v-0534c159>Type</th><th data-v-0534c159>Description</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>emoji</td><td data-v-0534c159><code data-v-0534c159>ref</code></td><td data-v-0534c159>change it in an input</td></tr><tr data-v-0534c159><td data-v-0534c159>isMate</td><td data-v-0534c159><code data-v-0534c159>ref</code></td><td data-v-0534c159>reactive state of connection</td></tr><tr data-v-0534c159><td data-v-0534c159>toggleMate</td><td data-v-0534c159><code data-v-0534c159>function</code></td><td data-v-0534c159>toggle the link with current <code data-v-0534c159>emoji</code> ref</td></tr></tbody></table><hr data-v-0534c159><p data-v-0534c159><a name="module_usePass" data-v-0534c159></a></p><h2 id="usepass" tabindex="-1" data-v-0534c159>usePass <a class="header-anchor" href="#usepass" aria-hidden="true" data-v-0534c159>#</a></h2><p data-v-0534c159>Manage user&#39;s password and credentials</p><ul data-v-0534c159><li data-v-0534c159><a href="#module_usePass" data-v-0534c159>usePass</a><ul data-v-0534c159><li data-v-0534c159><em data-v-0534c159>static</em><ul data-v-0534c159><li data-v-0534c159><a href="#module_usePass.usePass" data-v-0534c159>.usePass()</a> \u21D2 <code data-v-0534c159>usePass</code></li></ul></li><li data-v-0534c159><em data-v-0534c159>inner</em><ul data-v-0534c159><li data-v-0534c159><a href="#module_usePass..Pass" data-v-0534c159>~Pass</a> : <code data-v-0534c159>reactive</code></li><li data-v-0534c159><a href="#module_usePass..usePass" data-v-0534c159>~usePass</a> : <code data-v-0534c159>Object</code></li></ul></li></ul></li></ul><h3 id="usepass-\u21D2-usepass" tabindex="-1" data-v-0534c159>usePass() \u21D2 <code data-v-0534c159>usePass</code> <a class="header-anchor" href="#usepass-\u21D2-usepass" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Manage password of a user</p><h3 id="pass-reactive" tabindex="-1" data-v-0534c159>Pass : <code data-v-0534c159>reactive</code> <a class="header-anchor" href="#pass-reactive" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159><strong data-v-0534c159>Properties</strong></p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Name</th><th data-v-0534c159>Type</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>safe</td><td data-v-0534c159><code data-v-0534c159>Object</code></td></tr><tr data-v-0534c159><td data-v-0534c159>dec</td><td data-v-0534c159><code data-v-0534c159>Object</code></td></tr></tbody></table><h3 id="usepass-object" tabindex="-1" data-v-0534c159>usePass : <code data-v-0534c159>Object</code> <a class="header-anchor" href="#usepass-object" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159><strong data-v-0534c159>Properties</strong></p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Name</th><th data-v-0534c159>Type</th><th data-v-0534c159>Description</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>pass</td><td data-v-0534c159><code data-v-0534c159>Pass</code></td><td data-v-0534c159>the reactive password object</td></tr><tr data-v-0534c159><td data-v-0534c159>setPass</td><td data-v-0534c159><code data-v-0534c159>function</code></td><td data-v-0534c159></td></tr><tr data-v-0534c159><td data-v-0534c159>logWithPass</td><td data-v-0534c159><code data-v-0534c159>function</code></td><td data-v-0534c159></td></tr></tbody></table><hr data-v-0534c159><p data-v-0534c159><a name="module_useUser" data-v-0534c159></a></p><h2 id="useuser" tabindex="-1" data-v-0534c159>useUser <a class="header-anchor" href="#useuser" aria-hidden="true" data-v-0534c159>#</a></h2><p data-v-0534c159>Basic user management</p><ul data-v-0534c159><li data-v-0534c159><a href="#module_useUser" data-v-0534c159>useUser</a><ul data-v-0534c159><li data-v-0534c159><em data-v-0534c159>static</em><ul data-v-0534c159><li data-v-0534c159><a href="#module_useUser.useAccount" data-v-0534c159>.useAccount(pub)</a> \u21D2 <code data-v-0534c159>Account</code></li><li data-v-0534c159><a href="#module_useUser.useUser" data-v-0534c159>.useUser()</a> \u21D2 <code data-v-0534c159>useUser</code></li><li data-v-0534c159><a href="#module_useUser.auth" data-v-0534c159>.auth(pair)</a></li><li data-v-0534c159><a href="#module_useUser.leave" data-v-0534c159>.leave()</a></li><li data-v-0534c159><a href="#module_useUser.addProfileField" data-v-0534c159>.addProfileField(name)</a></li><li data-v-0534c159><a href="#module_useUser.updateProfile" data-v-0534c159>.updateProfile(field, data)</a></li><li data-v-0534c159><a href="#module_useUser.isPair" data-v-0534c159>.isPair(pair)</a> \u21D2 <code data-v-0534c159>Boolean</code></li></ul></li><li data-v-0534c159><em data-v-0534c159>inner</em><ul data-v-0534c159><li data-v-0534c159><a href="#module_useUser..Account" data-v-0534c159>~Account</a> : <code data-v-0534c159>Object</code></li><li data-v-0534c159><a href="#module_useUser..User" data-v-0534c159>~User</a> : <code data-v-0534c159>Object</code></li><li data-v-0534c159><a href="#module_useUser..useUser" data-v-0534c159>~useUser</a></li></ul></li></ul></li></ul><h3 id="useaccount-pub-\u21D2-account" tabindex="-1" data-v-0534c159>useAccount(pub) \u21D2 <code data-v-0534c159>Account</code> <a class="header-anchor" href="#useaccount-pub-\u21D2-account" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Load and handle user&#39;s account by a public key</p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Param</th><th data-v-0534c159>Type</th><th data-v-0534c159>Description</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>pub</td><td data-v-0534c159><code data-v-0534c159>ref</code></td><td data-v-0534c159>The public key of a user as a string or a ref</td></tr></tbody></table><p data-v-0534c159><strong data-v-0534c159>Example</strong></p><div class="language-js" data-v-0534c159><pre data-v-0534c159><code data-v-0534c159><span class="token keyword" data-v-0534c159>import</span> <span class="token punctuation" data-v-0534c159>{</span> ref <span class="token punctuation" data-v-0534c159>}</span> <span class="token keyword" data-v-0534c159>from</span> <span class="token string" data-v-0534c159>&#39;vue&#39;</span>
<span class="token keyword" data-v-0534c159>import</span> <span class="token punctuation" data-v-0534c159>{</span> useAccount<span class="token punctuation" data-v-0534c159>,</span> <span class="token constant" data-v-0534c159>SEA</span> <span class="token punctuation" data-v-0534c159>}</span> <span class="token keyword" data-v-0534c159>from</span> <span class="token string" data-v-0534c159>&#39;@gun-vue/composables&#39;</span>

<span class="token keyword" data-v-0534c159>const</span> pub <span class="token operator" data-v-0534c159>=</span> <span class="token function" data-v-0534c159>ref</span><span class="token punctuation" data-v-0534c159>(</span><span class="token punctuation" data-v-0534c159>)</span>

<span class="token keyword" data-v-0534c159>async</span> <span class="token keyword" data-v-0534c159>function</span> <span class="token function" data-v-0534c159>generatePair</span><span class="token punctuation" data-v-0534c159>(</span><span class="token punctuation" data-v-0534c159>)</span> <span class="token punctuation" data-v-0534c159>{</span>
 pub<span class="token punctuation" data-v-0534c159>.</span>value <span class="token operator" data-v-0534c159>=</span> <span class="token keyword" data-v-0534c159>await</span> <span class="token constant" data-v-0534c159>SEA</span><span class="token punctuation" data-v-0534c159>.</span><span class="token function" data-v-0534c159>pair</span><span class="token punctuation" data-v-0534c159>(</span><span class="token punctuation" data-v-0534c159>)</span>
<span class="token punctuation" data-v-0534c159>}</span>

<span class="token keyword" data-v-0534c159>const</span> <span class="token punctuation" data-v-0534c159>{</span> account <span class="token punctuation" data-v-0534c159>}</span> <span class="token operator" data-v-0534c159>=</span> <span class="token function" data-v-0534c159>useAccount</span><span class="token punctuation" data-v-0534c159>(</span>pub<span class="token punctuation" data-v-0534c159>)</span>
</code></pre></div><h3 id="useuser-\u21D2-useuser" tabindex="-1" data-v-0534c159>useUser() \u21D2 <code data-v-0534c159>useUser</code> <a class="header-anchor" href="#useuser-\u21D2-useuser" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Get access to current logged in user</p><p data-v-0534c159><strong data-v-0534c159>Example</strong></p><div class="language-js" data-v-0534c159><pre data-v-0534c159><code data-v-0534c159><span class="token keyword" data-v-0534c159>import</span> <span class="token punctuation" data-v-0534c159>{</span> useUser <span class="token punctuation" data-v-0534c159>}</span> <span class="token keyword" data-v-0534c159>from</span> <span class="token string" data-v-0534c159>&#39;@gun-vue/composables&#39;</span>

<span class="token keyword" data-v-0534c159>const</span> <span class="token punctuation" data-v-0534c159>{</span> user<span class="token punctuation" data-v-0534c159>,</span> auth<span class="token punctuation" data-v-0534c159>,</span> leave <span class="token punctuation" data-v-0534c159>}</span> <span class="token operator" data-v-0534c159>=</span> <span class="token function" data-v-0534c159>useUser</span><span class="token punctuation" data-v-0534c159>(</span><span class="token punctuation" data-v-0534c159>)</span>
</code></pre></div><h3 id="auth-pair" tabindex="-1" data-v-0534c159>auth(pair) <a class="header-anchor" href="#auth-pair" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Authenticate with a SEA key pair</p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Param</th><th data-v-0534c159>Type</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>pair</td><td data-v-0534c159><code data-v-0534c159>Object</code></td></tr></tbody></table><p data-v-0534c159><strong data-v-0534c159>Example</strong></p><div class="language-js" data-v-0534c159><pre data-v-0534c159><code data-v-0534c159><span class="token keyword" data-v-0534c159>import</span> <span class="token punctuation" data-v-0534c159>{</span> auth<span class="token punctuation" data-v-0534c159>,</span> <span class="token constant" data-v-0534c159>SEA</span> <span class="token punctuation" data-v-0534c159>}</span> <span class="token keyword" data-v-0534c159>from</span> <span class="token string" data-v-0534c159>&#39;@gun-vue/composables&#39;</span>

<span class="token keyword" data-v-0534c159>async</span> <span class="token keyword" data-v-0534c159>function</span> <span class="token function" data-v-0534c159>login</span><span class="token punctuation" data-v-0534c159>(</span><span class="token punctuation" data-v-0534c159>)</span> <span class="token punctuation" data-v-0534c159>{</span>
   <span class="token keyword" data-v-0534c159>const</span> pair <span class="token operator" data-v-0534c159>=</span> <span class="token keyword" data-v-0534c159>await</span> <span class="token constant" data-v-0534c159>SEA</span><span class="token punctuation" data-v-0534c159>.</span><span class="token function" data-v-0534c159>pair</span><span class="token punctuation" data-v-0534c159>(</span><span class="token punctuation" data-v-0534c159>)</span>
   <span class="token function" data-v-0534c159>auth</span><span class="token punctuation" data-v-0534c159>(</span>pair<span class="token punctuation" data-v-0534c159>)</span>
<span class="token punctuation" data-v-0534c159>}</span>
</code></pre></div><h3 id="leave" tabindex="-1" data-v-0534c159>leave() <a class="header-anchor" href="#leave" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Log out the user</p><p data-v-0534c159><strong data-v-0534c159>Example</strong></p><div class="language-js" data-v-0534c159><pre data-v-0534c159><code data-v-0534c159><span class="token keyword" data-v-0534c159>import</span> <span class="token punctuation" data-v-0534c159>{</span> leave <span class="token punctuation" data-v-0534c159>}</span> <span class="token keyword" data-v-0534c159>from</span> <span class="token string" data-v-0534c159>&#39;@gun-vue/composables&#39;</span>

<span class="token function" data-v-0534c159>leave</span><span class="token punctuation" data-v-0534c159>(</span><span class="token punctuation" data-v-0534c159>)</span>
</code></pre></div><h3 id="addprofilefield-name" tabindex="-1" data-v-0534c159>addProfileField(name) <a class="header-anchor" href="#addprofilefield-name" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Add a field to the User profile</p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Param</th><th data-v-0534c159>Type</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>name</td><td data-v-0534c159><code data-v-0534c159>String</code></td></tr></tbody></table><p data-v-0534c159><strong data-v-0534c159>Example</strong></p><div class="language-js" data-v-0534c159><pre data-v-0534c159><code data-v-0534c159><span class="token keyword" data-v-0534c159>import</span> <span class="token punctuation" data-v-0534c159>{</span> addProfileField <span class="token punctuation" data-v-0534c159>}</span> <span class="token keyword" data-v-0534c159>from</span> <span class="token string" data-v-0534c159>&#39;@gun-vue/composables&#39;</span>

<span class="token function" data-v-0534c159>addProfileField</span><span class="token punctuation" data-v-0534c159>(</span> <span class="token string" data-v-0534c159>&#39;city&#39;</span> <span class="token punctuation" data-v-0534c159>)</span>
</code></pre></div><h3 id="updateprofile-field-data" tabindex="-1" data-v-0534c159>updateProfile(field, data) <a class="header-anchor" href="#updateprofile-field-data" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Update a profile field</p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Param</th><th data-v-0534c159>Type</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>field</td><td data-v-0534c159><code data-v-0534c159>String</code></td></tr><tr data-v-0534c159><td data-v-0534c159>data</td><td data-v-0534c159><code data-v-0534c159>Any</code></td></tr></tbody></table><p data-v-0534c159><strong data-v-0534c159>Example</strong></p><div class="language-js" data-v-0534c159><pre data-v-0534c159><code data-v-0534c159><span class="token keyword" data-v-0534c159>import</span> <span class="token punctuation" data-v-0534c159>{</span> updateProfile <span class="token punctuation" data-v-0534c159>}</span> <span class="token keyword" data-v-0534c159>from</span> <span class="token string" data-v-0534c159>&#39;@gun-vue/composables&#39;</span>

<span class="token function" data-v-0534c159>updateProfile</span><span class="token punctuation" data-v-0534c159>(</span> <span class="token string" data-v-0534c159>&#39;city&#39;</span><span class="token punctuation" data-v-0534c159>,</span> <span class="token string" data-v-0534c159>&#39;Moscow&#39;</span> <span class="token punctuation" data-v-0534c159>)</span>
</code></pre></div><h3 id="ispair-pair-\u21D2-boolean" tabindex="-1" data-v-0534c159>isPair(pair) \u21D2 <code data-v-0534c159>Boolean</code> <a class="header-anchor" href="#ispair-pair-\u21D2-boolean" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>Check if the object is a proper SEA pair</p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Param</th><th data-v-0534c159>Type</th><th data-v-0534c159>Description</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>pair</td><td data-v-0534c159><code data-v-0534c159>Object</code></td><td data-v-0534c159>an object to check</td></tr></tbody></table><h3 id="account-object" tabindex="-1" data-v-0534c159>Account : <code data-v-0534c159>Object</code> <a class="header-anchor" href="#account-object" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>the user account interface</p><p data-v-0534c159><strong data-v-0534c159>Properties</strong></p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Name</th><th data-v-0534c159>Type</th><th data-v-0534c159>Description</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>pub</td><td data-v-0534c159><code data-v-0534c159>ref</code></td><td data-v-0534c159>The pub key used to build the account</td></tr><tr data-v-0534c159><td data-v-0534c159>color</td><td data-v-0534c159><code data-v-0534c159>computed</code></td><td data-v-0534c159>The user account color derived from the pub key</td></tr><tr data-v-0534c159><td data-v-0534c159>profile</td><td data-v-0534c159><code data-v-0534c159>Object</code></td><td data-v-0534c159>An object with all the <code data-v-0534c159>gun.user().get(&#39;profile&#39;)</code> data</td></tr><tr data-v-0534c159><td data-v-0534c159>pulse</td><td data-v-0534c159><code data-v-0534c159>Number</code></td><td data-v-0534c159>latest timestamp from the user. It&#39;s emitted every second. Offline timeout is set to 10 seconds.</td></tr><tr data-v-0534c159><td data-v-0534c159>blink</td><td data-v-0534c159><code data-v-0534c159>Boolean</code></td><td data-v-0534c159>A boolean that toggles on every timestamp received</td></tr><tr data-v-0534c159><td data-v-0534c159>lastSeen</td><td data-v-0534c159><code data-v-0534c159>Sting</code></td><td data-v-0534c159>Shows &#39;online&#39; if recent pulse is less then 10s ago or a human readable time string</td></tr><tr data-v-0534c159><td data-v-0534c159>db</td><td data-v-0534c159><code data-v-0534c159>gun</code></td><td data-v-0534c159><code data-v-0534c159>gun.user(pub)</code> ref to query any additional user data</td></tr></tbody></table><p data-v-0534c159><strong data-v-0534c159>Example</strong></p><div class="language-js" data-v-0534c159><pre data-v-0534c159><code data-v-0534c159><span class="token punctuation" data-v-0534c159>{</span>
<span class="token string-property property" data-v-0534c159>&quot;pub&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token string" data-v-0534c159>&quot;XnpLVDYZWdl1NNgo6BlD6e3-n3Fzi-ZzVrzbIgYCYHo.9-hHUHaWNaAE6tMp800MMzNtDLtjicS53915IrBu4uc&quot;</span><span class="token punctuation" data-v-0534c159>,</span>
<span class="token string-property property" data-v-0534c159>&quot;color&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token string" data-v-0534c159>&quot;#f55c3d&quot;</span><span class="token punctuation" data-v-0534c159>,</span>
<span class="token string-property property" data-v-0534c159>&quot;profile&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token punctuation" data-v-0534c159>{</span>
   <span class="token string-property property" data-v-0534c159>&quot;name&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token string" data-v-0534c159>&quot;Accord&quot;</span><span class="token punctuation" data-v-0534c159>,</span>
   <span class="token string-property property" data-v-0534c159>&quot;Message&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token string" data-v-0534c159>&quot;Use your imagination!&quot;</span><span class="token punctuation" data-v-0534c159>,</span>
   <span class="token string-property property" data-v-0534c159>&quot;Money&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token string" data-v-0534c159>&quot;$ 20000000000&quot;</span>
<span class="token punctuation" data-v-0534c159>}</span><span class="token punctuation" data-v-0534c159>,</span>
<span class="token string-property property" data-v-0534c159>&quot;pulse&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token number" data-v-0534c159>1642077216809</span><span class="token punctuation" data-v-0534c159>,</span>
<span class="token string-property property" data-v-0534c159>&quot;lastSeen&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token string" data-v-0534c159>&quot;online&quot;</span><span class="token punctuation" data-v-0534c159>,</span>
<span class="token string-property property" data-v-0534c159>&quot;blink&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token boolean" data-v-0534c159>true</span>
<span class="token punctuation" data-v-0534c159>}</span>
</code></pre></div><h3 id="user-object" tabindex="-1" data-v-0534c159>User : <code data-v-0534c159>Object</code> <a class="header-anchor" href="#user-object" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159>An interface to the current gun user</p><p data-v-0534c159><strong data-v-0534c159>Properties</strong></p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Name</th><th data-v-0534c159>Type</th><th data-v-0534c159>Description</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>initiated</td><td data-v-0534c159><code data-v-0534c159>Boolean</code></td><td data-v-0534c159><code data-v-0534c159>true</code> if useUser has been run at least once</td></tr><tr data-v-0534c159><td data-v-0534c159>is</td><td data-v-0534c159><code data-v-0534c159>Object</code></td><td data-v-0534c159>Reactive <code data-v-0534c159>gun.user().is</code></td></tr><tr data-v-0534c159><td data-v-0534c159>pub</td><td data-v-0534c159><code data-v-0534c159>String</code></td><td data-v-0534c159>Current user public key</td></tr><tr data-v-0534c159><td data-v-0534c159>color</td><td data-v-0534c159><code data-v-0534c159>String</code></td><td data-v-0534c159>a HEX color for the given pub</td></tr><tr data-v-0534c159><td data-v-0534c159>pulse</td><td data-v-0534c159><code data-v-0534c159>Number</code></td><td data-v-0534c159>Last received pulse timestamp</td></tr><tr data-v-0534c159><td data-v-0534c159>pulser</td><td data-v-0534c159><code data-v-0534c159>Number</code></td><td data-v-0534c159>An id for pulse <code data-v-0534c159>setInterval</code></td></tr><tr data-v-0534c159><td data-v-0534c159>blink</td><td data-v-0534c159><code data-v-0534c159>Boolean</code></td><td data-v-0534c159>Toggles with every pulse received</td></tr><tr data-v-0534c159><td data-v-0534c159>db</td><td data-v-0534c159><code data-v-0534c159>Object</code></td><td data-v-0534c159><code data-v-0534c159>gun.user()</code> reference</td></tr><tr data-v-0534c159><td data-v-0534c159>safe</td><td data-v-0534c159><code data-v-0534c159>Object</code></td><td data-v-0534c159>safe account indicators</td></tr><tr data-v-0534c159><td data-v-0534c159>pair</td><td data-v-0534c159><code data-v-0534c159>function</code></td><td data-v-0534c159>use <code data-v-0534c159>user.pair()</code> to get curent user key pair</td></tr></tbody></table><p data-v-0534c159><strong data-v-0534c159>Example</strong></p><div class="language-js" data-v-0534c159><pre data-v-0534c159><code data-v-0534c159><span class="token punctuation" data-v-0534c159>{</span> 
 <span class="token string-property property" data-v-0534c159>&quot;initiated&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token boolean" data-v-0534c159>true</span><span class="token punctuation" data-v-0534c159>,</span> 
 <span class="token string-property property" data-v-0534c159>&quot;is&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token punctuation" data-v-0534c159>{</span> 
   <span class="token string-property property" data-v-0534c159>&quot;pub&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token string" data-v-0534c159>&quot;XnpLVDYZWdl1NNgo6BlD6e3-n3Fzi-ZzVrzbIgYCYHo.9-hHUHaWNaAE6tMp800MMzNtDLtjicS53915IrBu4uc&quot;</span><span class="token punctuation" data-v-0534c159>,</span> 
   <span class="token string-property property" data-v-0534c159>&quot;epub&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token string" data-v-0534c159>&quot;wAvPlMAg4jvUvK4sPpVyF1CAWnRCMu1YpHnoDrVDg-o.l79QDmdPCLEiO0F_WkB3zYLpJt-lANtyhNmHSM4bTes&quot;</span><span class="token punctuation" data-v-0534c159>,</span> 
   <span class="token string-property property" data-v-0534c159>&quot;alias&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token string" data-v-0534c159>&quot;XnpLVDYZWdl1NNgo6BlD6e3-n3Fzi-ZzVrzbIgYCYHo.9-hHUHaWNaAE6tMp800MMzNtDLtjicS53915IrBu4uc&quot;</span> 
 <span class="token punctuation" data-v-0534c159>}</span><span class="token punctuation" data-v-0534c159>,</span> 
 <span class="token string-property property" data-v-0534c159>&quot;name&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token string" data-v-0534c159>&quot;Accord&quot;</span><span class="token punctuation" data-v-0534c159>,</span> 
 <span class="token string-property property" data-v-0534c159>&quot;pub&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token string" data-v-0534c159>&quot;XnpLVDYZWdl1NNgo6BlD6e3-n3Fzi-ZzVrzbIgYCYHo.9-hHUHaWNaAE6tMp800MMzNtDLtjicS53915IrBu4uc&quot;</span><span class="token punctuation" data-v-0534c159>,</span> 
 <span class="token string-property property" data-v-0534c159>&quot;color&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token string" data-v-0534c159>&quot;#f55c3d&quot;</span><span class="token punctuation" data-v-0534c159>,</span> 
 <span class="token string-property property" data-v-0534c159>&quot;pulse&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token number" data-v-0534c159>1642708061615</span><span class="token punctuation" data-v-0534c159>,</span> 
 <span class="token string-property property" data-v-0534c159>&quot;pulser&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token number" data-v-0534c159>12</span><span class="token punctuation" data-v-0534c159>,</span> 
 <span class="token string-property property" data-v-0534c159>&quot;blink&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token boolean" data-v-0534c159>false</span><span class="token punctuation" data-v-0534c159>,</span> 
 <span class="token string-property property" data-v-0534c159>&quot;safe&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token punctuation" data-v-0534c159>{</span> 
   <span class="token string-property property" data-v-0534c159>&quot;saved&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token boolean" data-v-0534c159>true</span><span class="token punctuation" data-v-0534c159>,</span> 
   <span class="token string-property property" data-v-0534c159>&quot;password&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token keyword" data-v-0534c159>null</span><span class="token punctuation" data-v-0534c159>,</span> 
   <span class="token string-property property" data-v-0534c159>&quot;enc&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token string" data-v-0534c159>&quot;SEA{\\&quot;ct\\&quot;:\\&quot;E+6GViU9dTuidruOCNAoBITE+AlGNRgiABplSbL5fh4v1P+fhF33MuBwKd3ssBNi2kJ1sCzvS/YLmzivECA5ARZPGVbgXTSj8AE9kCz0Ac/8ushlsfBNdt8s3+a3OPVxMIevnT01uqcgr75Zp4TugIg/YuB5WltA9RHsgWEMlo+X+tRGaqG5rfw4sAmTSV0P8evMgM9rN/Un5t/WeDbvIPNXqZEmtxwAhMUZwOJWZckNZmNwpxnelFO0BwmauWfzkXuqGeSxNhMeaZi+VoRDMUvTjT68DLBnVoOhFhcdco+RW8AJfktZHZ4GF2IzFnQmTGpUd2LfvIY/Yn1eNJH7iQ5w41ChiYB/zhgQCOc5ur51PV6swAuN595vUNn7+0J1JRSNGzW2V/4j4YR4IEsAoqOtdn2Y21ga/CFdrE0=\\&quot;,\\&quot;iv\\&quot;:\\&quot;LtODTV+LBzhWHqUcptUO\\&quot;,\\&quot;s\\&quot;:\\&quot;XCL9Uj1YlPcV\\&quot;}&quot;</span><span class="token punctuation" data-v-0534c159>,</span> 
 <span class="token string-property property" data-v-0534c159>&quot;pass&quot;</span><span class="token operator" data-v-0534c159>:</span> <span class="token string" data-v-0534c159>&quot;SEA{\\&quot;ct\\&quot;:\\&quot;8wNClMx/ebfou+gGWdf+bbx0TAgc9RU=\\&quot;,\\&quot;iv\\&quot;:\\&quot;NPgHkI+Ke+i/mw+3chlr\\&quot;,\\&quot;s\\&quot;:\\&quot;3VzGv06Y4fQ+\\&quot;}&quot;</span> 
 <span class="token punctuation" data-v-0534c159>}</span> 
<span class="token punctuation" data-v-0534c159>}</span>
</code></pre></div><h3 id="useuser-1" tabindex="-1" data-v-0534c159>useUser <a class="header-anchor" href="#useuser-1" aria-hidden="true" data-v-0534c159>#</a></h3><p data-v-0534c159><strong data-v-0534c159>Properties</strong></p><table data-v-0534c159><thead data-v-0534c159><tr data-v-0534c159><th data-v-0534c159>Name</th><th data-v-0534c159>Type</th><th data-v-0534c159>Description</th></tr></thead><tbody data-v-0534c159><tr data-v-0534c159><td data-v-0534c159>user</td><td data-v-0534c159><code data-v-0534c159>User</code></td><td data-v-0534c159>the user interface</td></tr><tr data-v-0534c159><td data-v-0534c159>auth</td><td data-v-0534c159><code data-v-0534c159>function</code></td><td data-v-0534c159>auth with a pair</td></tr><tr data-v-0534c159><td data-v-0534c159>leave</td><td data-v-0534c159><code data-v-0534c159>function</code></td><td data-v-0534c159>log out</td></tr></tbody></table><hr data-v-0534c159>`,342),o=[n];function p(r,v,l,i,u,h){return e(),t("div",null,o)}var k=a(s,[["render",p],["__scopeId","data-v-0534c159"]]);export{m as __pageData,k as default};
